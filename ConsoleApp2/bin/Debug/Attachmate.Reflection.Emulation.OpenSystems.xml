<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Attachmate.Reflection.Emulation.OpenSystems</name>
    </assembly>
    <members>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption">
            <summary>
            The number of distinct symbol changes made to the transmission medium, per second.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Default">
            <summary>
            The default value for connection type Modem.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud300">
            <summary>
            300 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud600">
            <summary>
            600 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud1200">
            <summary>
            1200 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud1800">
            <summary>
            1800 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud2400">
            <summary>
            2400 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud3600">
            <summary>
            3600 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud4800">
            <summary>
            4800 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud7200">
            <summary>
            7200 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud9600">
            <summary>
            9600 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud14400">
            <summary>
            14400 baud.
            The default value for connection types COM1 through COM8.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud19200">
            <summary>
            19200 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud38400">
            <summary>
            38400 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud57600">
            <summary>
            57600 baud.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.Baud115200">
            <summary>
            115200 baud.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettings,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="connectionSettings"></param>
            <param name="terminal"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Authentication">
            <summary>
            Enables Reflection to use Kerberos authentication.   
            </summary>
            <remarks>
            Use these settings to configure Kerberos connections: 
            Authentication, Encryption, MutualAuthentication, Principal,  
            Realm, RenewableTicket, TicketForwarding. Do not set Authentication to true 
            if you use Kerberos authentication in conjuction 
            with Secure Shell (ConnectionType = SECURE SHELL).  
            This configuration information, like all information configured in the Secure Shell Settings Dialog Box, 
            is saved in the Secure Shell Configuration file. 
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#Baud">
            <summary>
            Baud rate setting.
            </summary>
            <remarks>
            The available settings are Baud300, Baud600, Baud1200, Baud1800, Baud2400, Baud3600, Baud4800, Baud7200, 
            Baud9600, Baud14400, Baud19200, Baud38400, Baud57600, Baud115200, DEFAULT.
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.
            </remarks>
            <value>
            The default setting for connection types COM1 through COM8 is Baud9600.
            
            Value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#Baud">
            <summary>
            Baud rate setting.
            </summary>
            <remarks>
            The available settings are Baud300, Baud600, Baud1200, Baud1800, Baud2400, Baud3600, Baud4800, Baud7200, 
            Baud9600, Baud14400, Baud19200, Baud38400, Baud57600, Baud115200, DEFAULT.
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.
            </remarks>
            <value>
            The default setting for connection type MODEM is Default.
            
            Value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.CacheName">
            <summary> 
            A string specifying the path and file name of a credentials cache. 
            
            Use this setting if you have already connected a Reflection session to 
            a kerberized host, and you want to be able to create an additional 
            session that connects to a different kerberized host.
            </summary>
            <remarks>
            </remarks>
            <value>
            The default cache name is used if no other cache name is specified. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#CharDelay">
            <summary>
            Gets or sets the time delay (in milliseconds) between characters.
            </summary>
            <remarks>
            </remarks>
            <value>
            Value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#CharDelay">
            <summary>
            Gets or sets the time delay (in milliseconds) between characters.
            </summary>
            
            <value>
            Value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#CheckParity">
            <summary>
            Gets or sets the parity check state. 
            </summary>
            <remarks>
            When set to true and Parity is other than 8/None, Reflection checks parity 
            on all received characters.
            </remarks>
            <value>
            The default value is false.
            
            Value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#CheckParity">
            <summary>
            Gets or sets the parity check state. 
            </summary>
            <remarks>
            When set to true and Parity is other than 8/None, Reflection checks parity on all received characters.
            </remarks>
            <value>
            The default value is false.
            
            Value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ConnectMacro">
            <summary>
            Gets or specifies the name of a macro that runs automatically after a
            connection is established. You can use the ConnectMacroData property to
            specify information to be passed to this macro.
            </summary>
            <remarks>
            The connect macro runs after the terminal has successfully made a connection to the host.
            They should not include session setup information.       
            </remarks>
            <value>
            The default value is "".
            This string can be up to 260 characters long.
            
            Value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ConnectMacroData">
            <summary>
            Gets or specifies a string that passes information to a connect macro.
            When your connect macro runs, the value of MacroData is set equal to the value
            of ConnectMacroData.
            </summary>
            <remarks>
            The value of the MacroData property changes whenever you pass macro data
            to a macro. (If you run a macro using the Macros dialog box, macro data is
            specified in the Macro data box. If you run a macro using the RunMacro method,
            macro data is specified with the second argument.) The ConnectMacroData
            property stores a fixed value that sets the value of MacroData whenever your
            connect macro runs. 
            </remarks>
            <value>
            The default value is "".
            This string can be up to 260 characters long.
            
            Value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#CTSrequired">
            <summary>
            When set to true, Reflection does not transmit unless the RS-232 Clear To Send (CTS) signal is active. 
            </summary>
            <remarks>
            Set this keyword to false if ReceivedPacing is set to Hardware.
            </remarks>
            <value>
            The default value is false.
            
            Value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#CTSrequired">
            <summary>
            When set to true, Reflection does not transmit unless the RS-232 Clear To Send (CTS) signal is active. 
            
            </summary>
            <remarks>
            Set this keyword to false if ReceivedPacing is set to Hardware.
            </remarks>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.DisconnectScriptArgs">
            <summary>
            Get or set the text string containing the arguments to pass to a disconnect script.
            </summary>
            <value>
            The default value is "".
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.DisconnectScriptFile">
            <summary>
            Gets or sets the text string containing the name of a Reflection Basic script to run 
            when the connection is closed.  
            </summary>
            <value>
            The default value is "".
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#DropDTROnDisconnect">
            <summary>
            When set to true, the Data Terminal Ready (DTR) signal is dropped when the connection is closed.
            </summary>
            <remarks>
            Set this value to false to keep the DTR signal high even after 
            closing the connection or quitting Reflection.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#DropDTROnDisconnect">
            <summary>
            When set to true, the Data Terminal Ready (DTR) signal is dropped when the connection is closed.
            </summary>
            <remarks>
            Set this value to false to keep the DTR signal high 
            even after closing the connection or quitting Reflection.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#DSRrequired">
            <summary>
            When set to true, Reflection does not transmit data unless 
            the RS-232 Data Set Ready (DSR) signal is active.
            </summary>
            <remarks>
            Set this value to false if ReceivePacing is set to Hardware.
            </remarks>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#DSRrequired">
             <summary>
             When set to true, Reflection does not transmit data 
             unless the RS-232 Data Set Ready (DSR) signal is active.
            </summary>
             <remarks>
             Set this value to dalse if ReceivePacing is set to Hardware.
             </remarks>
             
             <value>
             The default value is dalse.
             
             This value can be changed during an open connection.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Encryption">
            <summary>
            Specifies whether to encrypt the data transmitted between the host 
            and the Kerberos client during Kerberos sessions. 
            </summary>
            <remarks> 
            When this setting is false, 
            the authentication (login) process is encrypted, 
            but not subsequent data transmission. 
            Encrypting the data stream will decrease transmission
            speed. 
            
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.EnhancedSerialDataCom">
            <summary>
            Set this to true to use the Reflection enhanced communications driver. 
            </summary>
            <remarks>
            Set to false if you have a third-party driver that must use the standard 
            Windows data communications driver (Comm.drv).
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ExitAllowed">
            <summary>
            When set to true, users can exit Reflection and use the Disconnect command
            while connected to a host. 
            </summary>
            <remarks>
            When set to false, 
            the Exit and Disconnect commands are disabled and 
            users must quit all active host applications and log off 
            to terminate host connections.
            </remarks>
            <value>
            The default value is true.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ExitOnDisconnect">
             <summary>
             When set to true, Reflection closes automatically when you disconnect from the host.
             </summary>
            
             <value>
             The default value is false.
             
             This value can be changed during an open connection.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsSecureShell#HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsVTMgr#HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#LineDelay">
            <summary>
            Time delay (in tenths of a second) between lines.
            </summary>
            <value>
            The default value is 0.
            The range of values is 0 - 255 (tenths of a second).
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#LineDelay">
            <summary>
            Time delay (in tenths of a second) between lines.
            </summary>
            <value>
            The default value is 0.
            The range of values is 0 - 255 (tenths of a second).
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsRLogin#LowerCaseUserName">
            <summary>
            Specifies whether Reflection converts your user name to all lowercase letters.
            </summary>
            <value>
            The default value is false. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsSecureShell#LowerCaseUserName">
            <summary>
            Specifies whether Reflection converts your user name to all lowercase letters.
            </summary>
            <value>
            The default value is false. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemAreaCode">
            <summary>
            A string specifying the area code (or city code) of the number being dialed.
            </summary>
            <value>
            The default value is the current area code as configured using the Windows Control Panel.
            The string can be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemCountryName">
            <summary>
            A string specifying the country of the number being dialed.  
            </summary>
            <remarks>
            To see possible values, refer to the
            Country Code list in the Connection Setup dialog box.  
            Country code names contain spaces, so you should
            use quotation marks if you are using a literal string for the value.
            </remarks>
            <value>
            The default value is the current country as configured using the Windows Control Panel.
            This string can
            be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemInitString">
            <summary>
            Modem command string that initializes the modem.
            </summary>
            <value>
            The defult value is DEFAULT, meaning that the string for the selected modem name
            is used as the default.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemLocation">
            <summary>
            A string indentifying the current modem location. 
            </summary>
            <remarks>
            Modem locations are configured using Control Panel modems.
            If your modem location name includes spaces, you should put the string within quotation marks.
            </remarks>
            <value>
            The default value is the current modem location as configured using the Windows Control Panel.  This string can
            be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemMode">
            <summary>
            Identifies the modem's operating mode (Call, AutoAnswer, Answer, Direct or DialBack).
            </summary>
            <value>
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption.
            
            The default value is ModemModeOption.Call.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemName">
            <summary>
            Text string that identifies the type of modem being used.
            </summary>
            <value>
            A default value is configured automatically based on your current modem configuration.
            This string can be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemPhoneNumber">
            <summary>
            The phone number to dial.
            </summary>
            <remarks> If you use the Control Panel modems with ModemUseDialingRules set 
            to true (the default configuration), Reflection automatically adds 
            appropriate prefixes to the specified phone number, based on the current values
            of ModemAreaCode, ModemCountryName and ModemLocation.
            </remarks>
            <value>
            The default value is "".  This string can be up to 64 characters long.
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemShowDisconnectErrors">
            <summary>
            Determines whether the "Remote Party Disconnected" error message appears
            when the modem connection is dropped.
            </summary>
            <remarks>
            Set this value to false if you are creating fully scripted modem connections 
            and you want to ensure that they 
            can run without user interaction.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ModemUseDialingRules">
            <summary>
            When set to true, the TAPI modem dialer adds the appropriate dialing prefixes
            to the number you are dialing, based on the current values of ModemAreaCode, 
            ModemCountryName, and ModemLocation.  
            </summary>
            <remarks>
            When set to false, the modem dialer will dial the phone number exactly 
            as specified by ModemPhoneNumber.  Changing this value is 
            equivalent to changing the "Use Country code and Area code" 
            setting in the Connection Settings dialog box.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.MutualAuthentication">
            <summary>
            Specifies whether to enable mutual authentication during Kerberos sessions. 
            </summary>
            <remarks>
            When this setting is true, the service must authenticate itself to 
            the principal. 
            
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#NSVTPort">
            <summary>
            The port number to use when establishing the VT-MGR connection.
            </summary>
            <remarks>
            Port 1570 is used for streams; port 1537 is the standard port. 
            </remarks>
            <value>
            You can set this to any integer value between 1 and 65535. 
            The default is 0, which lets the NSVT protocol module choose the port. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsVTMgr#NSVTPort">
            <summary>
            The port number to use when establishing the VT-MGR connection.
            </summary>
            <remarks>
            Port 1570 is used for streams; port 1537 is the standard port. 
            </remarks>
            <value>
            You can set this to any integer value between 1 and 65535. 
            The default is 0, which lets the NSVT protocol module choose the port. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Parity">
            <summary>
            Gets or sets the type of parity on the connection.
            </summary>
            <value>
            The default value is Parity8None.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.PKIDisableCRL">
            <summary>
            Specifies whether Reflection checks for 
            certificate revocation when validating host certificates during a SSL/TLS connection. 
            </summary>
            <remarks>
            Select this setting to disable CRL (Certificate Revocation List) checking. 
            
            </remarks>
            <value>
            The default value of this setting is based on your current system setting
            for CRL checking. To view and edit the system setting, start Internet
            Explorer, and go to Tools > Internet Options > Advanced. Under Security, 
            determine if "Check for server certificate revocation" is selected.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Principal">
            <summary>
            Specifies the principal for which you want to obtain Kerberos credentials. 
            </summary>
            <remarks>
            A full principal name includes both the principal name and the
            realm name, in the format [principal]@[realm name]. Use Realm to specify the realm.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Realm">
            <summary>
            Specifies the realm portion of the full principal name.  
            </summary>
            <remarks>
            A full principal name includes both the principal name and the realm name, 
            in the format [principal]@[realm name]. Use Principal to specify the principal.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#ReceivePacing">
            <summary>
            Specifies the type of flow control to use for receiving data from the host.
            </summary>
            <value>
            The available settings are XonXoff, None, Hardware.
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption
            
            The default value is XonXoff.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#ReceivePacing">
            <summary>
            Specifies the type of flow control to use for receiving data from the host.
            </summary>
            <value>
            The available settings are XonXoff, None, Hardware.
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption
            
            The default value is XonXoff.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.RenewableTicket">
            <summary>
            Specifies the time period (in seconds) during which Kerberos Ticket Granting Tickets (TGT) 
            are renewable. 
            </summary>
            <value>
            The default value is "604,800" (7 days).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.RloginPort">
            <summary>
            The protocol port to use to establish the Rlogin connection.
            </summary>
            <value>
            The default value is 513.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.RloginTermType">
            <summary>
            The terminal type used during Rlogin connection negotiations to 
            set terminal characteristics for the session.
            </summary>
             
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ScriptArgs">
            <summary>
            Gets or sets the text string containing the arguments to pass to a connect script.
            </summary>
            <value>
            The default value is "".
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ScriptFile">
            <summary>
            Gets or sets the text string containing the name of a Reflection Basic script to run when the connection is established; for 
            example, a logon script.
            </summary>
            <value>
            The default value is "".
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.ScriptType">
            <summary>
            Gets or sets the type of script file, either Reflection Basic or Reflection command language.
            </summary>
            <value>
            The default value is ReflectionBasic.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SerialPort">
            <summary>
            Gets or sets the COM serial port number.
            </summary>
            <remarks>
            When you set this property, all connection settings 
            for this connection type are reset to their default values.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHConfigScheme">
            <summary>
            Specifies the SSH config scheme settings to use for making a Secure Shell connection.
            </summary>
            <remarks>
            Reflection uses the settings for that scheme when you make a Secure Shell connection. 
            When no 
            SSH config scheme is specified, Reflection looks for an SSH config scheme 
            that matches the current host name.
            If a matching scheme is found, Reflection uses the settings for that host. If no
            matching scheme is found, Reflection uses the default Secure Shell settings.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHPort">
            <summary>
            The protocol port to use to establish the Secure Shell connection.
            </summary>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHShowBannerDialog">
             <summary>
             Specifies whether Reflection displays banner information 
             in a dialog box before completing the Secure Shell connection. 
              </summary>
             <remarks>
             This setting is
             only relevant if your host is configured to display banners.
            
             Banner display can also be suppressed by setting the Secure Shell Logging Level to Quiet.
             </remarks>
             <value>
             The default value is true.
             
             This value cannot be changed if the connection is open.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHSetHostWindowSize">
             <summary>
             When this value is true, Reflection sends the number of rows and columns 
             to the host whenever they change, enabling the host 
             to control the cursor if the window size changes. 
             </summary>
            
             <value>
             The default value is true.
             
             This value cannot be changed if the connection is open.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHTermDefault">
            <summary>
            The terminal type string that should be sent as a backup 
            to the Telnet server if the server requests this information and doesn't 
            recognize the current value set for SSHTermType. 
            </summary>
            <remarks>
            During negotiations, some hosts that can successfully connect using your 
            preferred terminal type skip over this value and connect using the backup value
            specified by SSHTermDefault. 
            To correct this behavior, set SSHTermDefault to an empty string ("").
            
            </remarks>
            <value>
            The Reflection default value for UNIX and OpenVMS, and ReGIS 
            Graphics emulations is "VT100,DEC-VT100".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHTermType">
            <summary>
            The terminal type string that should be sent to the server 
            if the server requests this information during the suboption TERM 
            negotiation stage of the connection.
            </summary>
            <value>
            The Reflection default values are "VT100" for VT emulation, and "VT220" for 
            UNIX and OpenVMS, and ReGIS Graphics emulations.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHAllow2048BitDSAKeys">
            <summary>
            Gets or sets a value indicating whether SSH connections should allow 2048-bit keys in FIPS mode. When this value is true, 
            a Secure Shell connection will allow a non-FIPS 2048 bit host key verification outside the FIPS boundry.
            </summary>
            <value>
            The default value is False.
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSHTermWindowAuth">
            <summary>
            When this value is true, a Secure Shell connection will use the terminal window for the user authentication, 
            displaying the server banner and checking the host key (Normally, all these are done in separate dialogs).  
            This log-in behavior is similar to telnet and allows for scripting.
            </summary>
            <remarks>
            </remarks>
            <value>
            The default value is False.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#StopBits">
            <summary>
            The number of stop bits that follow each character during data transmission.
            </summary>
            <value>
            The available values are One and Two.  
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.StopBitsOption.
            
            The default value is One. 
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#StopBits">
            <summary>
            The number of stop bits that follow each character during data transmission.
            </summary>
            <value>
            The available values are One and Two.  
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.StopBitsOption.
            
            The default value is One. 
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetBinary">
            <summary>
            Gets or sets whether Reflection always requests a binary mode connection (an 8-bit data path). 
            </summary>
            <remarks>
            A binary connection is required for some types of data transfers, such as Xmodem file transfers.
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetBinary">
            <summary>
            Gets or sets whether Reflection always requests a binary mode connection (an 8-bit data path). 
            </summary>
            <remarks>
            A binary connection is required for some types of data transfers, such as Xmodem file transfers.
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetBreak">
            <summary>
            Gets or sets whether CTRL+BREAK sends the Telnet Break command or the Telnet Interrupt Process command. 
            </summary>            
            <value>
            The default value is false; CTRL+BREAK sends a Telnet Interrupt Process command.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetBreak">
            <summary>
            Gets or sets whether CTRL+BREAK sends the Telnet Break command or the Telnet Interrupt Process command. 
            </summary>            
            <value>
            The default value is false; CTRL+BREAK sends a Telnet Interrupt Process command.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetEcho">
            <summary>
            Controls how Reflection responds to a remote echo from a Telnet host.
            </summary>
            <value>
            The default value is Auto.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetEcho">
            <summary>
            Controls how Reflection responds to remote echo from a Telnet host.
            </summary>
            <value>
            The default value is Auto.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetNegotateInitOptions">
             <summary>
             Specifies whether certain connection options, 
             including whether to always request a binary mode connection, 
             are negotiated when the Telnet connection is established.
             </summary>
            
             <value>
             The default value is false (it doesn't negotiate Telnet options).
             
             This value cannot be changed if the connection is open.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetNegotateInitOptions">
             <summary>
             Specifies whether certain connection options, 
             including whether to always request a binary mode connection,
             are negotiated when the Telnet connection is established.
             </summary>
            
             <value>
             The default value is false (it doesn't negotiate Telnet options).
             
             This value cannot be changed if the connection is open.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetLFAfterCR">
            <summary>
            Specifies whether Reflection sends a linefeed character whenever a carriage return is sent.
            </summary>
            
            <value>
            The default value is False.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetLFAfterCR">
            <summary>
            Specifies whether Reflection sends a linefeed character whenever a carriage return is sent.
            </summary> 
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetLineMode">
             <summary>
             Specifies whether Reflection uses line mode for Telnet connections. 
             </summary>
             <remarks>
             Line mode allows Reflection to store characters in 
             a buffer until a carriage return is entered, 
             upon which the characters are sent to the host 
             one packet at a time (instead of 
             sending each single character as an individual packet). 
             <para>
             Line mode is useful for long network delays, 
             and allows you to reduce costs on networks that charge on a per packet basis. 
             </para>
             </remarks>
             <value>
             The default value is Never.
            
             This value cannot be changed if the connection is open.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetLineMode">
             <summary>
             Specifies whether Reflection uses line mode for Telnet connections. 
             </summary>
             <remarks>
             Line mode allows Reflection to store characters in 
             a buffer until a carriage return is entered, 
             upon which the characters are sent to the host 
             one packet at a time (instead of 
             sending each single character as an individual packet). 
             <para>
             Line mode is useful for long network delays, 
             and allows you to reduce costs on networks that charge on a per packet basis. 
             </para>
             </remarks>
             <value>
             The default value is Never.
            
             This value cannot be changed if the connection is open.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetLocation">
            <summary>
            Reflection supports the TELNET SEND-LOCATION option (specified in RFC 779). 
            </summary> 
            <remarks>
            TelnetLocation sends the user's location, 
            or other information, to a Telnet host. 
            </remarks>
            <value>
            By default, this value is not assigned. It only appears among the keywords
            listed by the ConnectionSettings property if you assigned it a value. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetLocation">
            <summary>
            Reflection supports the TELNET SEND-LOCATION option (specified in RFC 779). 
            </summary>
            <remarks>
            TelnetLocation sends the user's location, 
            or other information, to a Telnet host. 
            
            </remarks>
            <value>
            By default, this value is not assigned. It only appears among the keywords 
            listed by the ConnectionSettings property if you assigned it a value. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetPort">
            <summary>
            Gets or sets the port to use to establish the Telnet connection. 
            </summary>
            <value>
            The default value is 23 (the standard Telnet port number).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetPort">
            <summary>
            Gets or sets the port to use to establish the Telnet connection. 
            </summary>
            <value>
            The default value is 23 (the standard Telnet port number).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetSetWindowSize">
            <summary>
            When this value is true, Reflection sends the number of rows and columns 
            to the Telnet host whenever they change, enabling 
            the Telnet host to control the cursor if the window size changes. 
            </summary> 
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetSetWindowSize">
            <summary>
            When this value is true, Reflection sends the number of rows and columns 
            to the Telnet host whenever they change, enabling 
            the Telnet host to control the cursor if the window size changes. 
            </summary> 
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetTermDefault">
            <summary>
            The terminal type string that is sent as a backup to 
            the Telnet server if the server requests this information and doesn't 
            recognize the current value set for TelnetTermType. 
            </summary>
            <remarks>
            During negotiations, some hosts that could successfully connect 
            using your preferred terminal type skip over this value 
            and connect using the backup value specified by TelnetTermDefault.
            To correct this behavior, set 
            TelnetTermDefault to an empty string ("").
            </remarks>
            <value>
            The Reflection default value for UNIX and OpenVMS, 
            and ReGIS Graphics emulations is "VT100,DEC-VT100".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetTermDefault">
            <summary>
            The terminal type string that is sent as a backup to the Telnet server 
            if the server requests this information and doesn't 
            recognize the current value set for TelnetTermType. 
            </summary>
            <remarks>
            During negotiations, some hosts that could successfully connect using your preferred terminal type skip over this value 
            and connect using the backup value specified by TelnetTermDefault. To correct this behavior, set 
            TelnetTermDefault to an empty string ("")
            </remarks>
            <value>
            The Reflection default value for UNIX and OpenVMS, 
            and ReGIS Graphics emulations is "VT100,DEC-VT100".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetTermType">
            <summary>
            The terminal type string that is sent to the Telnet server if the 
            server requests this information during the suboption
            TERM negotiation stage of the connection.
            </summary> 
            <value>
            The Reflection default values are "VT100" for VT emulation, 
            and "VT220" for UNIX and OpenVMS, and ReGIS Graphics emulations.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetTermType">
            <summary>
            The terminal type string that is sent to the Telnet server if 
            the server requests this information during the suboption
            TERM negotiation stage of the connection.
            </summary> 
            <value>
            The Reflection default values are "VT100" for VT emulation 
            and "VT220" for UNIX and OpenVMS, and ReGIS Graphics emulations.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetTrace">
            <summary>
            When set to true, Reflection writes the negotiation process 
            for the various Telnet options to the screen. 
            </summary> 
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetTrace">
            <summary>
            When set to true, Reflection writes the negotiation process 
            for the various Telnet options to the screen. 
            </summary> 
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#TelnetUseEmulatorTermType">
            <summary>
            When this value is false, Reflection uses the current terminal setting 
            as determined by the value of TelnetTermType when the 
            server requests the terminal type.
            </summary>
            <remarks>
            When this value is true, Reflection uses terminal setting
            as determined by the value of the DAResponse property.
            
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#TelnetUseEmulatorTermType">
            <summary>
            When this value is false, Reflection uses the current terminal setting 
            as determined by the value of TelnetTermType when the 
            server requests the terminal type.
            </summary>
            <remarks>
            When this value is true, Reflection uses the terminal setting as
            determined by the value of the DAResponse property. 
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectingSettingsBestNetwork#Timeout">
            <summary>
            Specifies the time period (in milliseconds) during which Reflection attempts
            to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is 
            determined by your Windows operating system.
            
            The timeout period begins after the host name is resolved. This means an additional delay equal to the amount 
            of time required for host resolution, usually a few seconds beyond the value specified.
            </remarks>
            <value>
            The default value is 0. The range of values is 0 - 65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsRLogin#Timeout">
            <summary>
            Specifies the time period (in milliseconds) during which Reflection attempts
            to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is 
            determined by your Windows operating system.
            The timeout period begins after the host name is resolved. This means an
            additional delay equal to the amount 
            of time required for host resolution, usually a few seconds beyond the value specified.
            </remarks>
            <value>
            The default value is 0. The range of values is 0 - 65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsSecureShell#Timeout">
            <summary>
            Specifies the time period (in milliseconds) during which Reflection attempts 
            to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined
            by your Windows operating system.
            
            The timeout period begins after the host name is resolved. This means 
            an additional delay equal to the amount of time required for host resolution, 
            usually a few seconds beyond the value specified.
            </remarks>
            <value>
            The default value is 0. The range of values is 0 - 65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#Timeout">
            <summary>
            Specifies the time period (in milliseconds) during which Reflection attempts 
            to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined
            by your Windows operating system.
            
            The timeout period begins after the host name is resolved. This means 
            an additional delay equal to the amount of time required for host resolution, 
            usually a few seconds beyond the value specified.
            </remarks>
            <value>
            The default value is 0. The range of values is 0 - 65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsVTMgr#Timeout">
            <summary>
            Specifies the time period (in milliseconds) during which Reflection attempts 
            to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined
            by your Windows operating system.
            
            The timeout period begins after the host name is resolved. This means 
            an additional delay equal to the amount of time required for host resolution, 
            usually a few seconds beyond the value specified.
            </remarks>
            <value>
            The default value is 0. The range of values is 0 - 65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.TLSCertifyHostname">
            <summary>
            Specifies whether host name matching is required 
            when validating host certificates during SSL/TLS connections. 
            </summary>
            <remarks>
            When this setting is true (the default), the host name you configure
            in Reflection must exactly match one of the host names entered 
            in either the CommonName or the SubjectAltName field of the certificate.
            
            </remarks>
            <value>
            The default value is true.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.TLSStrength">
            <summary>
            Specifies the minimum allowable level of encryption for SSL/TLS connections. 
            </summary>
            <remarks>
            The connection will fail if this level cannot be provided. 
            This setting is only relevant when UseTLS is true. When this setting is 0, 
            Reflection negotiates with the host system to choose a level supported by 
            both the host and the PC.
            </remarks>
            <value>
            The default value is 0.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#TransmitPacing">
            <summary>
            Specifies the type of flow control to use for transmitting data to the host.
            </summary>
            <remarks>
            The available settings are XonXoff, None, Hardware.
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption.
            
            The default setting for VT, Unix and OpenVMS, and ReGIS Graphics emulations is XonXoff.
            </remarks>
            <value>
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#TransmitPacing">
            <summary>
            Specifies the type of flow control to use for transmitting data to the host.
            </summary>
            <remarks>
            The available settings are XonXoff, None, Hardware.
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption.
            
            The default setting for VT, Unix and OpenVMS, and ReGIS Graphics emulations is XonXoff.
            </remarks>
            <value>
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsRLogin#UsePCUserName">
            <summary>
            Specifies whether Reflection uses the current Windows user name 
            as the user name for Rlogin connections. 
            </summary>
            <remarks>
            When set to false, 
            Reflection uses the name specified in the User name box
            in the Connection Setup dialog box (or with the UserName Connection keyword). 
            When set to true, Reflection connects using the Windows user name and d
            isables User name in the Connection Setup dialog box.
            
            </remarks>
            <value>
            The default is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsSecureShell#UsePCUserName">
            <summary>
            Specifies whether Reflection uses the current Windows user name 
            as the user name for Rlogin connections. 
            </summary>
            <remarks>
            When set to false, 
            Reflection uses the name specified in the 
            User name box in the Connection Setup dialog box 
            (or with the UserName Connection keyword). 
            When set to true, Reflection connects using the 
            Windows user name and disables User name in the Connection Setup dialog box.
            </remarks>
            <value>
            The default is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsRLogin#UserName">
            <summary>
            A string specifying the user name. 
            </summary>
            <remarks>
            For Telnet connections, this setting is relevant only if Authentication is set to true. 
            </remarks>
            <value>
            For Rlogin connections, the Windows user name is the default value.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsSecureShell#UserName">
            <summary>
            A string specifying the user name. 
            </summary>
            <remarks>
            For Telnet connections, this setting is relevant only if Authentication is set to true. 
            </remarks>
            <value>
            For Rlogin connections, the Windows user name is the default value.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsTelnet#UserName">
            <summary>
            A string specifying the user name. 
            </summary>
            <remarks>
            For Telnet connections, this setting is relevant only if Authentication is set to true. 
            </remarks>
            <value>
            For Rlogin connections, the Windows user name is the default value.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.UseSOCKS">
            <summary>
            Lets you connect to a host via a SOCKS proxy server. 
            </summary>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.UseTLS">
            <summary>
            Enables Secure Socket Layer (SSL) and Transport Layer Security (TLS)
            security protocols for this connection. 
            </summary>
            <remarks>
            The level of 
            encryption is determined by the value you set for TLSStrength.
            </remarks>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.PKIUseOCSP">
            <summary>
            Gets or sets a value indicating whether  your client session checks for certificate revocation using 
            OCSP (Online Certificate Status Protocol) responders when validating host certificates. 
            </summary>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.TLSVersion">
            <summary>
            Gets or sets a value indicating which SSL or TLS version to use.
            </summary>
            <value>
            The default value is TLSVersion1_0.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.SSLValidateCertChain">
            <summary>
            Gets or sets a value indicating whether certificates presented for host authentication are checked
            to determine if they are valid and signed by a trusted CA. 
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#XoffRepeat">
             <summary>
             The number of characters that Reflection will accept after an XOFF 
             is received before sending another XOFF.
             </summary>
            
             <value>
             The default value is 32. The range is 0 - 9999.
             
             This value can be changed during an open connection.
             </value>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown if the set parameter is outside the range of valid values.
             </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#XoffRepeat">
            <summary>
            The number of characters that Reflection will accept after an XOFF
            is received before sending another XOFF.
            </summary> 
            <value>
            The default value is 32. The range is 0 - 9999.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsComSerialPort#XoffTimeout">
            <summary>
            The length of time (in seconds) to wait after sending data 
            before Reflection sends an XOFF character.
            </summary> 
            <value>
            The default value is 10 seconds. The range is 0 - 9999.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionSettings.Attachmate#Reflection#Emulation#OpenSystems#IConnectionSettingsModem#XoffTimeout">
            <summary>
            The length of time (in seconds) to wait after sending data before
            Reflection sends an XOFF character.
            </summary> 
            <value>
            The default value is 10 seconds. The range is 0 - 9999.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption">
            <summary>
            Specifies which statistics to return.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption.ReceiverOverRuns">
            <summary>
            Each time the host computer transmits a character, the datacomm hardware notifies the processor 
            that it has just received a character. Reflection must read that character before another one 
            is received or a receiver overrun error occurs.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption.ParityErrors">
            <summary>
            Returns the number of parity errors that have occurred.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption.FramingErrors">
            <summary>
            Framing errors often indicate that the baud rate is incorrect, the cable is bad or too long, 
            or the UART (universal asynchronous receiver/transmitter) received a character with the wrong number of stop bits.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption.ReceiveBufferOverflow">
            <summary>
            Reflection has a buffer where characters received from the host computer are held 
            until they can be processed. If Reflection can't keep up with the incoming 
            data, the buffer fills up and an overflow occurs.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption.BreakDetect">
            <summary>
            A break is an interruption in the transmitting signal. 
            Whenever the UART (universal asynchronous receiver/transmitter) 
            detects a break (a 200-millisecond signal), it increments this statistic.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption">
            <summary>
            Connection type option.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.BestNetwork">
            <summary>
            Connection type is set to Best Network.
            </summary>
            <remarks>
            When you set the connection type to Best Network, Reflection automatically selects the network protocol 
            (Telnet or VT-MGR) to use when connecting to a host. Reflection first attempts to connect using Telnet 
            and then VT-MGR. After Reflection has connected using a Best Network protocol, it makes subsequent connections 
            using the same protocol. If none of the Best Network protocols are available, this option is unavailable.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.Telnet">
            <summary>
            Connection type is set to Telnet protocol.
            </summary>
            <remarks>
            <list type="bullet">
            <listheader><term>Use Telnet protocol to do the following: </term></listheader>
            <item><description>· Establish secure connections using SSL/TLS.</description></item>
            <item><description>· Establish secure connections using Kerberos.</description></item>
            <item><description>· Use your PC as a virtual terminal over a TCP/IP connection.</description></item>
            <item><description>· Use an expanded IPv6 format IP address to connect to hosts.</description></item>
            <item><description>· Manage sessions in a way that is seamlessly integrated with Reflection. 
            Reflection gives you the flexibility to manage one or more terminal sessions with one or more hosts on the network.</description></item>
            <item><description>· Take advantage of "fast file transfer" support.</description></item>
            </list>
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.VT_MGR">
            <summary>
            Connection type is set to VT-MGR.
            </summary>
            <remarks>
            The VT-MGR connection type provides Network Services/Virtual Terminal (NS/VT) access to an HP 3000. 
            Network Services is a proprietary protocol from Hewlett-Packard; NS/VT uses the TCP/IP protocol stack. 
            NS/VT support requires Reflection for HP and TCP/IP protocol. 
            "Fast file transfer" to an HP 3000 is automatically invoked when using Reflection for HP with NS/VT.
            <para>Using SSL/TLS, this protocol can establish a secure connection.</para>
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.Rlogin">
            <summary>
            Connection type is set to Rlogin.
            </summary>
            <remarks>
            <list type="bullet">
            <listheader><term>Use Rlogin protocol to do the following: </term></listheader>
            <item><description>· Use your PC as a virtual terminal over a TCP/IP connection.</description></item>
            <item><description>· Manage sessions in a way that is seamlessly integrated with Reflection.</description></item>
            <item><description>· Reflection gives you the flexibility to manage one or more terminal sessions with one or more hosts on the network.</description></item>
            <item><description>· Take advantage of "fast file transfer" support.</description></item>
            </list>
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.SecureShell">
            <summary>
            Connection type is set to Secure Shell.
            </summary>
            <remarks>
            You can configure Reflection to use Secure Shell when you need secure, encrypted communications between a trusted host 
            and your PC over an insecure network. When you configure Reflection to use Secure Shell, all connections between 
            your PC and remote hosts are encrypted, protecting the data sent between these 
            machines. Passwords are never sent over the network in a clear text format as they are 
            when you use Telnet, FTP, Rlogin, or Rsh. 
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.Modem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.Demonstration">
            <summary>
            Connection type is set to Demonstration.
            </summary>
            The Demonstration option simulates connections to MPE, OpenVMS, and UNIX hosts, and modem connections. 
            Demonstration mode is useful for training users or demonstrating Reflection features when no host connection exists. 
            This mode also lets you simulate the transferring of files to or from a host 
            using the File Transfer and File Transfer Setup dialog boxes.
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.None">
            <summary>
            Connection type is set to None.
            </summary>
            <remarks>
            The network connection None is provided for compatibility with settings files and login scripts 
            that were created with earlier versions of Reflection. 
            You don't typically need to select this option when making a host connection.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption.COMSerialPort">
            <summary>
            Connection type is set to COM serial port.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu">
            <summary>
            Provides methods and properties for interacting with a terminal session's context menu
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.DefaultMenuName">
            <summary>
            The name of the default context menu
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.#ctor">
            <summary>
            Initializes a new instance of the ContextMenu class.
            </summary>
            <remarks>Do not use this constructor. It is only present for XML Serialization support.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContextMenu class.
            </summary>
            <param name="name">The name of the menu</param>
            <exception cref="T:System.ArgumentException">Thrown if <b>name</b> contains illegal characters</exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.Count">
            <summary>
            Gets a value indicating how many menu items (including separators) are in this menu.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.MappingCollection">
            <summary>
            Gets a value indicating the set of menu items comprising this context menu.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.Name">
            <summary>
            Gets a value indicating the descriptive name of this menu.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.AddSeparator">
            <summary>
            Adds a new separator to the end of the menu.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.AddMenuItem(Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem)">
            <summary>
            Adds a new context menu item to the end of the menu.
            </summary>
            <param name="item">A new context menu item</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.RemoveItem(System.Int32)">
            <summary>
            Removes a specified context menu item at a given position within the menu
            </summary>
            <param name="index">Identifies the position within the menu at which to remove a menu item.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.ClearAllItems">
            <summary>
            Removes all items from the context menu, resulting in an empty menu.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.GetContextMenuItem(System.String)">
            <summary>
            Returns a context menu item with the specified name.
            </summary>
            <param name="itemName">The name of the menu item, as it is displayed within the menu. 
            This applies only to items of type ContextMenuItemType.MenuItem</param>
            <returns>A ContextMenuItem with the specified name, or null if no such item exists.</returns>
            <remarks>This method cannot be used to return separator menu items, as they cannot be uniquely identified.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.GetSchema">
            <summary>
            Returns an in-memory representation of the XML schema used for SerializableList
            </summary>
            <returns>Null -- not currently implemented.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads in a list type from an xml file
            </summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes out a list to xml format
            </summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current ContextMenu</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.Equals(System.Object)">
            <summary>
            Determines whether two ContextMenu instances are equal.
            </summary>
            <param name="obj">The object to compare with the current ContextMenu</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.BothAreDefault(System.String,System.String)">
            <summary>
            Determines whether two menu names are both referring to the default context menu
            </summary>
            <param name="thisName">The left side operand</param>
            <param name="rightSideName">The right side operand</param>
            <returns>True if and only if both parameters refer to a default context menu. False otherwise</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.op_Equality(Attachmate.Reflection.Emulation.OpenSystems.ContextMenu,Attachmate.Reflection.Emulation.OpenSystems.ContextMenu)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="cm1">The first object to compare. </param>
            <param name="cm2">The second object to compare. </param>
            <returns>true if the specified objects are equal to each other; otherwise, false.  If both objA and objB are null, the method returns true.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenu.op_Inequality(Attachmate.Reflection.Emulation.OpenSystems.ContextMenu,Attachmate.Reflection.Emulation.OpenSystems.ContextMenu)">
            <summary>
            Determines whether the specified object is not equal to the current object.
            </summary>
            <param name="cm1">The first object to compare. </param>
            <param name="cm2">The second object to compare. </param>
            <returns>true if the specified objects are not equal to each other; otherwise, false.</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem">
            <summary>
            Represents an individual item within a context menu.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.Separator">
            <summary>
            Identifier for separator menu items
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.IllegalCharacterError">
            <summary>
            Error message for including illegal XML characters in a menu name or menu item name
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.name">
            <summary>
            Returns the menu item name 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.menuItemType">
            <summary>
            Gets a value indicating the type of menu item this item refers to.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.mapping">
            <summary>
            Gets a value indicating what this item is mapped to. 
            </summary>
            <remarks>
            If this item is not a ContextMenuItemType.MenuItem, this value will be irrelevant
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.#ctor">
            <summary>
            Initializes a new instance of the ContextMenuItem class.
            </summary>
            <remarks>Do not use this constructor -- only for XML Serialization support</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.#ctor(System.String,Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItemType,Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence)">
            <summary>
            Initializes a new instance of the ContextMenuItem class.
            </summary>
            <param name="name">The name of the item. This is the text that will appear within the context menu for the item. For separator
            menu items, this value is ignored.</param>
            <param name="type">What type of menu item this is</param>
            <param name="mapping">The action mapping for this item, if a menu item, otherwise ignored.</param>
            <exception cref="T:System.ArgumentException">Thrown if <b>name</b>contains any illegal characters.</exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.Name">
            <summary>
            Gets a value indicating the name of the menu item. For separator items, the value ContextMenuItem.Separator is returned.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.MenuItemType">
            <summary>
            Gets a value indicating the type of menu item this item refers to.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.Mapping">
            <summary>
            Gets a value indicating what this item is mapped to. 
            </summary>
            <remarks>
            If this item is not a ContextMenuItemType.MenuItem, this value will be irrelevant
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.GetSchema">
            <summary>
            Returns an in-memory representation of the XML schema used for SerializableList
            </summary>
            <returns>Null -- not currently implemented.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads in a list type from an xml file
            </summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes out a list to xml format
            </summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current ContextMenuItem</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.Equals(System.Object)">
            <summary>
            Determines whether two ContextMenuItem instances are equal.
            </summary>
            <param name="obj">The object to compare with the current ContextMenuItem</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.ConvertToXml(Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem)">
            <summary>
            Returns an xml version of a specified ContextMenuItem
            </summary>
            <param name="toConvert">The item to convert</param>
            <returns>A string representation of the equivalent XML</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.op_Equality(Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem,Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="cm1">The first object to compare. </param>
            <param name="cm2">The second object to compare. </param>
            <returns>true if the specified objects are equal to each other; otherwise, false.  If both objA and objB are null, the method returns true.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.op_Inequality(Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem,Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem)">
            <summary>
            Determines whether the specified object is not equal to the current object.
            </summary>
            <param name="cm1">The first object to compare. </param>
            <param name="cm2">The second object to compare. </param>
            <returns>true if the specified objects are not equal to each other; otherwise, false.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem.ContainsIllegalXmlCharacters(System.String)">
            <summary>
            Helper method to detect illegal XML characters
            </summary>
            <param name="input">The input string to test</param>
            <returns>True if <b>input</b> contains illegal XML characters, false if not</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItemType">
            <summary>
            Specifies a type of context menu item
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItemType.Separator">
            <summary>
            A separator line in between groups of menu items
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItemType.MenuItem">
            <summary>
            A menu item that, when invoked, performs some action that is mapped to it.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus">
            <summary>
            Defines properties and operations on the collection of context menus currently defined in the session document
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IContextMenus,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            Initializes a new instance of the ContextMenus object
            </summary>
            <param name="contextMenus">The remote ContextMenus instance</param>
            <param name="terminal">The parent of this object</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.Parent">
            <summary>
            Gets a value indicating the parent object of this object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.Count">
            <summary>
            Gets a value indicating how many ContextMenus are defined for this session document
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.DefaultContextMenu">
            <summary>
            Gets or sets the default context menu for this session document
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.Add(Attachmate.Reflection.Emulation.OpenSystems.IContextMenu)">
            <summary>
            Adds (or updates an existing) context menu to this session document 
            </summary>
            <param name="menu">The context menu to add</param>
            <returns>True if the add or update was successful, false if an error occurred</returns>
            <exception cref="T:System.ArgumentNullException">If the name passed is null or empty</exception>
            <exception cref="T:System.InvalidOperationException">If the ContextMenus object is not available or in an error state</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.Remove(System.String)">
            <summary>
            Removes a context menu from this session document
            </summary>
            <param name="name">The descriptive name of the menu to remove</param>
            <returns>True if the remove was successful, false if the menu name could not be found or an error occurred</returns>
            <exception cref="T:System.ArgumentNullException">If the name passed is null</exception>
            <exception cref="T:System.ArgumentException">If the name passed corresponds to the default menu, which cannot be deleted.
            This can be represented by an empty string, or the <b>ContextMenu.DefaultMenuName</b> constant</exception>
            <exception cref="T:System.InvalidOperationException">If the ContextMenus object is not available or in an error state</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.Contains(System.String)">
            <summary>
            Returns a value indicating whether a context menu of a given name exists in this session document.
            </summary>
            <param name="name">The descriptive name of the menu. If null or empty string is passed, this is equivalent to the default menu.</param>
            <returns>True if the menu exists, false if it does not</returns>
            <exception cref="T:System.InvalidOperationException">If the ContextMenus object is not available or in an error state</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.ItemByName(System.String)">
            <summary>
            Returns the context menu associated with the specified descriptive name.
            </summary>
            <param name="name">The descriptive name of the menu. If null or empty string is passed, this is equivalent to the default menu.</param>
            <returns>The context menu associated with <b>name</b>, or null if it does not exist</returns>
            <exception cref="T:System.InvalidOperationException">If the ContextMenus object is not available or in an error state</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.ItemByIndex(System.Int32)">
            <summary>
            Returns the context menu at the specified index in the session document's context menu collection
            </summary>
            <param name="index">The position within the collection to return a menu for.</param>
            <returns>The context menu at the specified position</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index argument is invalid.</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.Clear">
            <summary>
            Removes all non-default context menus from the session document
            </summary>
            <remarks>NOTE: the default menu is never removed.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ContextMenus.Items">
            <summary>
            Returns the collection of context menus currently defined for the session document
            </summary>
            <returns>An array of <b>ContextMenu</b> items currently defined in the session document</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySentEventHandler">
            <summary>
            ControlKeySentEventHandler Delegate.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySentEventArgs">
            <summary>
            Contains data related to the controlkeysent event. Defines properties to get the key code, row position, and column position. 
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySentEventArgs.#ctor(Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode,System.Int32,System.Int32)">
            <summary>
            ControlKeySentEventArgs constructor.
            </summary>
            <param name="key">Control key code object.</param>
            <param name="row">Row position.</param>
            <param name="column">Column position.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySentEventArgs.Key">
            <summary>
            Gets key code.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySentEventArgs.Row">
            <summary>
            Gets row position.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySentEventArgs.Column">
            <summary>
            Gets column position.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventHandler">
            <summary>
            CreditCardRecognized event handler.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="args">CreditCardRecognizedEventArgs event arguments.</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs">
            <summary>
            CreditCardRecognized event arguments.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.userId">
            <summary>
            The Windows user name of the current user.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.userDomainName">
            <summary>
            The domain that the user is logged onto, or an empty string if not logged onto a Windows domain.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.machineName">
            <summary>
            The machine name (as set up in the system control panel).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.eventType">
            <summary>
            The type of access that the credit card number was encountered in (eg., LiveScreen, OfficeTools, ScreenHistory, etc).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.dateTime">
            <summary>
            The date and time that the event occurred.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.success">
            <summary>
             Reserved for future use. This currently always returns a success return code.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.redactedAccountNumber">
            <summary>
            The card number (in redacted format) that was recognized.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the CreditCardRecognizedEventArgs class.
            </summary>
            <param name="accountNumber">The card number (in redacted format) that was recognized.</param>
            <param name="user">The Windows user name of the current user.</param>
            <param name="machineName">The machine name (as set up in the system control panel).</param>
            <param name="userDomainName">The domain that the user is logged onto, or an empty string if not logged onto a Windows domain.</param>
            <param name="dateTime">The date and time that the event occurred.</param>
            <param name="eventType">The type of access that the credit card number was encountered in (eg. LiveScreen, OfficeTools, ScreenHistory, etc).</param>
            <param name="success">Reserved for future use. This currently always returns a success return code.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.UserId">
            <summary>
            Gets the Windows user name of the current user.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.MachineName">
            <summary>
            Gets the machine name (as set up in the system control panel).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.UserDomainName">
            <summary>
            Gets the domain that the user is logged onto, or an empty string if not logged onto a Windows domain.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.EventType">
            <summary>
            Gets a description of the type of access that the credit card number was encountered in (eg. LiveScreen, OfficeTools, ScreenHistory, etc).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.DateTime">
            <summary>
            Gets the date and time that the event occurred.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.Success">
            <summary>
            Gets a success return code. (This is Reserved for future use. It currently always returns a success return code.)
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs.RedactedAccountNumber">
            <summary>
            Gets the card number (in redacted format) that was recognized.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CursorShapeOption">
            <summary>
            Specifies the shape of the text cursor.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CursorShapeOption.Block">
            <summary>
            The cursor is displayed as a full block.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CursorShapeOption.Underline">
            <summary>
            The cursor is displayed as an underline.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CursorShapeOption.VerticalBar">
            <summary>
            The cursor is displayed as a thin vertical bar.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CursorShapeOption.NoCursor">
            <summary>
            The cursor is invisible.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.DefaultHostSettingsOption">
            <summary>
            Specifies the host settings.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefaultHostSettingsOption.UNIX">
            <summary>
            Use UNIX defaults.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefaultHostSettingsOption.OpenVMS">
            <summary>
            Use OpenVMS defaults.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefaultHostSettingsOption.Unisys">
            <summary>
            Use Unisys defaults.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType">
            <summary>
            Specifies the host settings.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.Silence">
            <summary>
            No host activity for specified interval.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.KeyboardEnabled">
            <summary>
            Keyboard enabled for specified interval.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.CursorEnterPosition">
            <summary>
            Cursor enters specified position.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.CursorExitPosition">
            <summary>
            Cursor exits specified position.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.ReceiveString">
            <summary>
            Specified string received from host.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.DisplayString">
            <summary>
            Specified string displayed at designated coordinates.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.TimeOfDay">
            <summary>
            Time of Day specified as "HH:MM:SS.hh" occurs.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType.TimeElapsed">
            <summary>
            Passage of specified interval of time in "HH:MM:SS.hh" format occurs
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption">
            <summary>
             Specifies the device attributes.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT80">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT100">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT100J">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT101">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT102">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT102J">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT220">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT220J">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT240">
            <summary>
            Applies to ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT240J">
            <summary>
            Applies to ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT241">
            <summary>
            Applies to ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT282">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT286">
            <summary>
            Applies to ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT320">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT330">
            <summary>
            Applies to ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT340">
            <summary>
            Applies to ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT382">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT420">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT510">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT520">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.VT525">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DeviceAttributeResponseOption.WRQID">
            <summary>
            Applies to UNIX and OpenVMS, and ReGIS Graphics only.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption">
            <summary>
            Specifies what happens with transfers from the File Transfer dialog box if the
            destination file already exists.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.AskUser">
            <summary>
            A dialog box prompts the user to specify what should be done.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Overwrite">
            <summary>
            This value is relevant only for WRQ/Reflection transfers. Its effect is host specific.
            </summary>
            <remarks>
            <para>
            For transfers to an HP 3000 host, DestinationFileExistsOption.Overwrite replaces the data in the 
            destination file, but does not replace the file's attributes (characteristics). This can be 
            a problem in overwriting a smaller file with a larger one: new records are not allocated to 
            accommodate additional data, so only part of the file data is transferred. Use  
            DestinationFileExistsOption.Delete to avoid this problem.
            </para>
            <para></para>
            <para>For transfers to a VMS host, DestinationFileExistsOption.Overwrite only replaces the most recent 
            instance of the destination file.</para>
            <para></para>
            <para>
            For transfers to a UNIX host, DestinationFileExistsOption.Overwrite preserves existing symbolic 
            links to the host file.</para>
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Append">
            <summary>
            The contents of the source file are appended at the end of the destination file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Cancel">
            <summary>
            The transfer fails.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Delete">
            <summary>
            For transfers to a host, deletes both the contents of the host 
            (destination) file and its attributes. For transfers from the host, 
            replaces the local file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Rename">
            <summary>
            Renames the file being transferred if a file of the same name already exists. 
            </summary>
            <remarks>
            The last three characters of the file's name are changed to 001. If such a file already exists, the file's name
            is changed to 002, and so on up to 999.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Update">
            <summary>
            Transfers the file only if the source file is newer than the destination file.
            </summary>
            <remarks>
            This option is relevant only for WRQ/Reflection transfers.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Skip">
            <summary>
            Reflection does not transfer the file or return an error.
            </summary>
            <remarks>
            This option is relevant only for WRQ/Reflection and Zmodem transfers.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Resume">
            <summary>
            If the destination file exists, Reflection assumes it's the result of an aborted download and 
            resumes the file transfer from the point of interruption.
            </summary>
            <remarks>
            This option is relevant only for Zmodem transfers.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.UseRemote">
            <summary>
            Uses the IfFileExists option specified by the remote system. 
            </summary>
            <remarks>
            If the remote system doesn't 
            specify an IfFileExists option, this option is equivalent to Cancel. 
            This option is relevant only for Zmodem transfers.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption.Purge">
            <summary>
            This option is available when you're using the WRQ/Reflection protocol, and when you're connected
            to a VMS host or an HP 3000 host.
            </summary>
            <remarks>
            <para>
            If you send a PC file to a VMS host using the  DestinationFileExistsOption.Purge option, existing versions
            of the file on the host are purged following the transfer. For example, if you send NOTES.TXT 
            to the host, and NOTES.TXT;2 and NOTES.TXT;3 already exist, a successful transfer results in 
            a single file on the host called NOTES.TXT;4.</para>
            <para>
            When transferring to the PC, this option deletes the specified file on the PC (if it exists) 
            and a new file is created.</para>
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="fileTransfer"></param>
            <param name="terminal"></param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.Dispose(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.Parent">
            <summary>
            Gets the parent object (ITerminal).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ConvertEOLToSeparator">
            <summary>
            Returns or specifies whether Reflection instructs the WRQ/Reflection file transfer host program to 
            generate a new record every time it receives the carriage return/linefeed sequence from Reflection. 
            </summary>
            <remarks>
            This property applies to ASCII transfers to the host. 
            The equivalent property for transfers from the host is ConvertSeparatorToEOL, 
            which determines whether Reflection generates a 
            new line at the end of each record that it receives from the host during an ASCII transfer. 
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ConvertMCSToNRC">
            <summary>
            Returns or specifies whether Multinational Character Set (MCS) characters are converted to
            National Replacement Set (NRC) characters in files you send.
            
            </summary>
            <value>
            This property is relevant only for ASCII file transfers. 
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ConvertNRCToMCS">
            <summary>
            Returns or specifies whether National Replacement Set (NRC) characters are converted to
            Multinational Character Set (MCS) characters in files you receive.
            
            </summary>
            <value>
            This property is relevant only for ASCII file transfers. 
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ConvertISO7ToRoman8">
            <summary>
            Returns or specifies whether ISO-7 characters are converted to Roman 8 characters
            in files you receive. 
            This property is relevant only for ASCII file transfers. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ConvertRoman8ToISO7">
            <summary>
            Returns or specifies whether Roman 8 characters are converted to ISO-7 characters in files you send. 
             
            </summary>
            <value>
            This property is relevant only for ASCII file transfers.
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ConvertSeparatorToEOL">
            <summary>
            Returns or specifies whether Reflection generates a new line separator at the end of each 
            record it receives from the host during an ASCII transfer.
            </summary>
            
            <values>
            When set to true (the default), Reflection generates a new line at the end of each record it receives from the host.
            The equivalent property for 
            ASCII transfers to the host is ConvertEOLToSeparator, which determines whether the host 
            generates a new record every time it receives the carriage return/linefeed sequence from Reflection. 
            </values>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.DeleteTrailingSpaces">
            <summary>
            Returns or specifies whether Reflection deletes trailing spaces during ASCII file transfers.
            </summary>
            <remarks>
            Most text processing programs use delimited lines and paragraphs, and thus
            do not need blanks preceding a delimiter. Deleting trailing spaces during a file transfer
            can save a great deal of disk space. 
            </remarks>
            <value>
            The default is true.
            This property is relevant during ASCII file transfers from the host and for logging or copying to disk. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPHostName">
            <summary>
            Returns or specifies the name or IP address of the server for FTP file transfers. 
            </summary>
            <remarks>
            This can be a host name that is resolved by the Hosts file on your PC or by a domain name server on your network. 
            You can also specify an IP address.
            
            This property is relevant only for transfers that use the FTP protocol. You must already be 
            connected to a host before initiating FTP file transfer. Use this property if you want to initiate 
            FTP file transfer to a different host.
            </remarks>
            <value>
            The default value is "".
            The string cannot be more than 259 characters long.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPClearConnectionInformation">
            <summary>
            Returns or specifies how and if logon information is cleared from the FTP tab 
            of the File Transfer Setup dialog box (and not used to log in to new hosts). 
            </summary>
            <value>
            FTPClearConnectionOption.ClearAlways clears the logon information on disconnect or host name change.
            FTPClearConnectionOption.ClearOnDisconnect clears the logon information when you disconnect from 
            the current host connection. FTPClearConnectionOption.ClearOnHostNameChange	clears the logon information 
            when you change the host name (the default). FTPClearConnectionOption.ClearNever never clears logon information 
            from the FTP tab.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPPassiveMode">
            <summary>
            Returns or specifies whether the Reflection integrated FTP client sends a PASV 
            command to communicate with the server in passive mode (also called PASV mode). 
            </summary>
            <remarks>
            Passive mode is required for connections through some firewalls. This option configures 
            PASV mode connections to minimize connection problems with firewalls (for example, the 
            Windows firewall that's enabled by default in some versions of Windows XP).
            It initiates a separate data connection for directory listings and file transfers.
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPPassword">
            <summary>
            Returns or specifies the default password to use when logging in to an FTP server. 
            </summary>
            <remarks>
            If the value of this property is an empty string (the default), the user is prompted for a 
            password when FTP file transfer is initiated, (unless the FTPStartServer method is used 
            with its Options argument set to FTPServerOptions.NoLoginDialog). 
            
            This property is relevant only for transfers that use the FTP protocol.
            </remarks>
            <value>
            The default value is "".
            The string cannot be more than 259 characters long.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPTransferType">
             <summary>
             Returns or specifies the transfer type for FTP transfers from the File Transfer
             dialog box. 
             </summary>
             <remarks>
             Every time you perform an FTP transfer from the File Transfer dialog box, this property is set and its value becomes the default 
             for the next transfer from this dialog box. This property has no 
             effect on programmatic transfer; if you don't explicitly specify a transfer type
             with FTPSendFile or FTPReceiveFile, the default is always ASCII.
             </remarks>
             
             <value>
             The default value is TransferTypeOption.Binary.
            
             TransferTypeOption.ASCII sets the default transfer type for FTP transfers from the File Transfer dialog box to ASCII. 
                 If the FTPTranslateCharacters property is set to true, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
                 If FTPTranslateCharacters is set to false, record separator characters may still be translated to 
             carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to true), and a Ctrl-Z character 
             may be appended to the end of the file (if the WriteCtrlZAsEOF property is set to true), but no other translations are performed.
            
             TransferTypeOption.Binary
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to binary. 
                 Does not translate data in the transferred file.
             
             TransferTypeOption.AutoDetect	
                 The transfer type is determined by the file extension. Use these properties to determine 
                 which file extensions are linked to which transfer type:
            
             TransferAutoDetectDefaultType
             TransferAutoDetectASCIIExtensionList
             TransferAutoDetectBinaryExtensionList
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPCharacterSetTranslationEnabled">
            <summary>
            Returns or specifies how ASCII character set translations occur during FTP file transfers.
            </summary>
            <remarks>
            When this property is set to true, Reflection performs the character set translations 
            specified on the Translation tab in the File Transfer Setup dialog box, in addition to the 
            translations between the host character set and the PC character set, as specified on 
            the Emulation tab in the Terminal Setup dialog box.
            This property affects ASCII file transfers that use the FTP protocol.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPFileNamesTranslationEnabled">
            <summary>
            Returns or specifies whether filename translation occurs during FTP transfers of ASCII files. 
            </summary>
            <remarks>
            When this property is true, Reflection uses the filename translation options specified by 
            TransferSpacesToUnderscores, TransferUnderscoresToSpaces, and TransferReceiveAs8Dot3.
            </remarks>
            <value>The default value is false.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPUserName">
            <summary>
            Returns or specifies the default user name to be used when logging into an FTP server. 
            </summary>
            <remarks>
            If the value of this property is an empty string (the default), the user is prompted for a password 
            when FTP file transfer is initiated (unless the FTPStartServer method is used with its Options 
            argument set to FTPServerOptions.NoLoginDialog). 
            This property is relevant only for transfers that use the FTP protocol.
            </remarks>
            <value>
            The default value is "".
            The string cannot be more than 259 characters long.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPUseSftpStructuredListing">
             <summary>
             Returns or specifies the data listing style used for SFTP connections to Secure Shell servers.
             </summary>
             <remarks>
             When this property is false (the default), Reflection uses the standard UNIX-style data listing. For example: 
             -rw-r--r--    1 test1    users         877 Dec 12 08:36 scapilog.txt
            
             When it is true, Reflection uses the structured data list. For example: 
            
             scapilog.txt : flags(15), size(877), uid(506), gid(100), perm(33188), atime(1071246964), mtime(1071246964)
            
             This property is relevant only for Secure Shell sessions that use the SFTP protocol. 
             
             When the Secure Shell logging level is set to Debug3, both data listings are included in the logging display shown in the FTP command window.
             </remarks>
             <value>
             The default value is false.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPUseWRQFTP">
            <summary>
            Returns or specifies whether Reflection uses the Reflection implementation for FTP file transfers. 
            </summary>
            <remarks>
            When this property is true, Reflection uses Reflection FTP, which can transfer 
            files to an FTP server running on another PC, or on a UNIX, Unisys, VAX, HP, or other host. 
            When it is false, Reflection uses Microsoft FTP, which can transfer files only to 
            UNIX hosts. 
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.HostRecordSeparator">
             <summary>
             Returns or specifies the character to use as a record separator in the PC file when an ASCII
             files is transferred from the host. 
             </summary>
             <remarks>
             This property is only relevant when the UseHostRecordSeparator
             property is true. 
             For example, this statement specifies a linefeed as the record separator:
            
             FileTransfer.HostRecordSeparator = "\n"
            
             This property only applies to ASCII file transfers using the WRQ/Reflection protocol.
             </remarks>
             <value>
             The default value is a carriage return and linefeed, which is represented as:
            
             "\r\n"
            
             The string cannot be more than 259 characters long.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitAutomaticServer">
             <summary>
             Returns or specifies how Reflection interacts with the host Kermit program.
             </summary>
             <remarks>
             If this property is set to true, Reflection interacts with the host Kermit program as follows:
            
             ·	When the user first opens the File Transfer dialog box, no interaction with the host occurs.
             ·	When the user requests a Kermit transfer, the host is put into server mode by transmitting 
             the Server Startup command (specified with the KermitServerStartupCommand property). 
             If no sequence is specified, Reflection assumes that the host Kermit is already in server mode 
             and takes no action except to set a flag that indicates the host is in server mode. 
            
             ·	As long as the File Transfer dialog box remains open, the host Kermit program 
             is left in server mode; transfers occur as the user requests them.
             ·	When the user dismisses the file transfer dialog box, clicks on Setup, 
             or changes the protocol, the KermitStopServer method is used to shut down the host Kermit program.
            
             This property is only relevant for transfers from the File Transfer dialog box. For programmatic 
             transfers, use the KermitStartServer method to start the host Kermit server program.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitChecksum">
            <summary>
            Returns or specifies the level of error checking that's used, as supported by Kermit. 
            </summary>
            <remarks>
            Kermit supports three kinds of error checking: single-byte checksum, double-byte checksum, 
            and three-byte CRC. 
            During file transfers, Reflection uses the specified level of error checking, unless the Kermit 
            program at the other end of the transfer does not support that level. In that case, Reflection uses the highest 
            level that the remote system supports. CRC is the highest level of error checking and the most thorough. 
            Single-byte checksum is the lowest level, but is the fastest.
            </remarks>
            <value>
            <list type="bullet">
            <item><term>KermitChecksumOption.Checksum1Byte  </term><description>Kermit uses single-byte checksum.</description></item>
            <item><term>KermitChecksumOption.Checksum2Byte  </term><description>Kermit uses double-byte checksum.</description></item>
            <item><term>KermitChecksumOption.CRC  </term><description>Kermit uses three-byte CRC checksum. (The default.)</description></item>
            </list>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitPacketSize">
            <summary>
            Returns or specifies the desired packet size (in bytes) for Kermit transfers from the host. 
            </summary>
            <remarks>
            For transfers to the host, the host Kermit program determines the packet size; if it doesn't support 
            long packets, it adjusts them to 94 bytes. 
            Programs that support packet sizes greater than 94 bytes are referred to as "SuperKermit" programs.
            </remarks>
            <value>
            The default value is 512.
            The range of values is 32-2048.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitReceiveEndCharacter">
            <summary>
            Returns or specifies the character that indicates the end of a packet of data received 
            from the host. 
            </summary>
            <remarks>
            If this property is changed in Reflection, the corresponding value must 
            also be changed in the remote Kermit program.
            </remarks>
            <value>
            The default value is a carriage return character, which can be represented as "\r".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitReceiveStartCharacter">
            <summary>
            Returns or specifies the character that indicates the beginning of a packet of data 
            received from the host. 
            </summary>
            <remarks>
            The default is appropriate for most systems. If this property 
            is changed in Reflection, the corresponding value must be changed in the remote Kermit program.
            </remarks>
            <value>
            The default value is a start-of-header character, which can be represented as "\0x0001".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitReceiveStartupCommand">
            <summary>
            Returns or specifies the command that directs the host Kermit program to 
            receive a file from the local computer. 
            </summary>
            <remarks>
            This property is most useful for 
            sending files from the File Transfer dialog box, as a way of telling the host 
            Kermit what kinds of files to receive or how to receive them.
            </remarks>
            <value>
            The default value is "".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitSendEndCharacter">
            <summary>
            Returns or specifies the character that indicates the end of a packet of data sent
            to the host. 
            </summary>
            <remarks>
            If this property is changed in Reflection, the corresponding value must
            also be changed in the remote Kermit program.
            </remarks>
            <value>
            The default value is a carriage return character, which can be represented as "\r"
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitSendStartCharacter">
            <summary>
            Returns or specifies the character that indicates the beginning of a packet of data
            sent to the host. 
            </summary>
            <remarks>
            If this property is changed in Reflection, the corresponding value
            must also be changed in the remote Kermit program.
            </remarks>
            <value>
            The default value is a start-of-header character, which can be represented as "\0x0001".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitSendStartupCommand">
            <summary>
            Returns or specifies the command that directs the host Kermit program to send one or more
            files to the local computer. 
            </summary>
            <remarks>
            This property is most useful for receiving files from the File
            Transfer dialog box, as a way of telling the host Kermit what kinds of files to send or how
            to send them.
            </remarks>
            <value>
            The default value is "".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitServerStartupCommand">
            <summary> 
            Returns or specifies the string sent to the host to start the host Kermit server program,
            when the KermitStartServer method is executed or, if KermitAutomaticServer
            is set to true, when a Kermit file transfer is initiated from the
            File Transfer dialog box.
            </summary>
            <remarks>
            If this string is empty (""), it is assumed that the host Kermit
            is already in server mode, and no action is taken other than to update Reflection’s state
            so that it knows the host is in server mode. 
            </remarks>
            <value>
            The default value is "".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitTransferType">
            <summary>
            Returns or specifies the transfer type for Kermit transfers. 
            </summary>
            <remarks>
            Every time you perform a Kermit transfer from the File Transfer
            dialog box, this property is set and its value becomes the default for the next transfer from 
            this dialog box. This property has no effect on programmatic transfers; if you
            don't explicitly specify a transfer type, the default is always binary.
            </remarks>
            <value>
            The default value is TransferTypeOption.Binary.
            
            <para>TransferTypeOption.ASCII sets the default transfer type for Kermit transfers from the File Transfer dialog box to ASCII. 
                If the KermitTranslateCharacters property is set to true, the following translations are performed:</para>
            <para>·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). </para>
            <para>·	Relevant Translation options for ASCII transfers (as specified on the Translation tab in the File Transfer Setup dialog box). </para>
            <para>If KermitTranslateCharacters is set to False, record separator characters may still be still 
                translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set 
                to True), and a Ctrl-Z character may be still be appended to the end of the file (if the 
                WriteCtrlZAsEOF property is set to true), but no other translations are performed.</para>
            <para></para>
            <para></para>
            <para>TransferTypeOption.Binary	sets the default transfer type for Kermit transfers from the File Transfer dialog box to binary. 
                No characters are translated.</para>
            <para></para>
            <para></para>
            <para>TransferTypeOption.AutoDetect	determines the transfer type by the file extension. Use these properties to determine which 
                file extensions are linked to which transfer type: TransferAutoDetectDefaultType, TransferAutoDetectASCIIExtensionList, 
            and TransferAutoDetectBinaryExtensionList.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitCharacterSetTranslationEnabled">
            <summary>
            Specifies whether Reflection performs character set translations for ASCII transfers from the File Transfer dialog box.
            </summary>
            <remarks>
            When this property is set to true, Reflection translates the character sets specified on the Translation
            tab in the File Transfer Setup dialog box and on the Emulation tab in the Terminal Setup dialog box.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitFileNamesTranslationEnabled">
            <summary>
            Returns or specifies whether the filename translation options on the Translation tab
            in the File Transfer Setup dialog box are used for Kermit transfers. 
            </summary>
            <remarks>
            These options correspond to the following properties: Transfer8Dot3FilenameCase, 
            TransferReceiveAs8Dot3, TransferSpacesToUnderscores, and TransferUnderscoresToSpaces.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitWindowSize">
            <summary>
            If the remote Kermit program supports sliding windows, this property determines 
            the size (in packets) of a sliding window. 
            </summary> 
            <remarks>
            This value is zero-based, so the default value (1) actually configures Reflection for a two-packet sliding window under 
            Kermit. Kermit programs that support sliding windows are referred to as "SuperKermit" programs.
            </remarks>
            <value>
            The default value is 1.
            The range of possible values is 0-31.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.PCRecordSeparator">
             <summary>
             Returns or specifies the character that is interpreted as a record separator in a PC ASCII
             file when it is transferred to the host. 
             </summary>
             <remarks>
             This property is only relevant when the UsePCRecordSeparator property is true. 
             For example, this statement specifies that a linefeed (LF) should be interpreted as the record
             separator:
            
             <para>FileTransfer.PCRecordSeparator = "\n"</para>
            
             <para>This property only applies to ASCII file transfers using the WRQ/Reflection protocol.</para>
             </remarks>
             <value>
             The default value is a carriage return and linefeed, represented as follows:
            
             <para>"\r\n"</para>
            
             <para>The string cannot be more than 259 characters long.</para>
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ReadCtrlZAsEOF">
            <summary>
            Returns or specifies whether Reflection interprets Ctrl-Z as the end-of-file marker in ASCII
            files sent to the host. 
            </summary>   
            <remarks>
            When this property is set to true, Reflection interprets a 
            Ctrl-Z, represented as Chr$(rcSUB), as the end-of-file marker and removes it from the file. 
            When this property is set to false, file length is determined by the character count in the file folder. 
            <para>
            The equivalent property for ASCII transfers from the host is WriteCtrlZAsEOF, which determines
            whether a Ctrl-Z character should be appended to ASCII files being transferred from the host. 
            </para>
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ReadTabAsSpaces">
            <summary>
            Returns or specifies whether tab characters in local files are converted to space characters. 
            </summary>
            <remarks> 
            When this property is set to true, tab characters are converted to space characters as they 
            are sent to the host during ASCII transfers. The equivalent property for ASCII transfers from the host is WriteSpacesAsTab.
            </remarks>
            <value>
            The default depends on whether you have selected UNIX or OpenVMS defaults. See HostForDefaultSettings 
            for details.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.SpacesPerTab">
            <summary>
            Returns or specifies the number of consecutive spaces that make up a single tab 
            when converting these characters during ASCII file transfers.
            </summary>
            <remarks>
            WriteSpacesAsTab converts spaces to tabs. ReadTabAsSpaces converts tab characters to spaces. 
            When WriteSpacesAsTab or ReadTabAsSpaces is true, is property is relevant only for ASCII file transfers.
            </remarks>
            <value>
            The default value is 8. 
            The range of values is 1-20.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TextFileCharacterSet">
            <summary>
            Returns or specifies whether Reflection uses the ASCII or ANSI character set. 
            </summary>
            <remarks>
            The Windows character set
            (ANSI) is slightly different from the DOS character set (ASCII). If you are receiving an ASCII file
            to be used in the Windows environment, make sure this property is set to TextFileCharacterSetOption.WindowsCharacterSet. The
            value of this property can also affect printing if BypassPrinterDriver and TranslatePrintedCharacters
            are both set to true.
            </remarks>
            <value> 
            <list type="bullet">
            <item><term>TextFileCharacterSetOption.DOSCharacterSet  </term><description>Reflection uses the DOS (ASCII) character set.</description></item>
            <item><term>TextFileCharacterSetOption.WindowsCharacterSet  </term><description>Reflection use the Windows (ANSI) character set. (The default.)</description></item>
            </list>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferAutoDetectASCIIExtensionList">
            <summary>
            Returns or specifies which file extensions identify files to be transferred
            as ASCII files during file transfer using the Auto-Detect transfer type. 
            </summary>
            <value>
            The default value is "txt,bat,ini,rcl".
            To specify files with no file extension, use "&lt;&gt;".
            Use commas to separate file extensions included in the string. Do not include periods with
            the file extensions.
            The string can be up to 259 characters long.
            </value>
            <remarks>
            To link file extensions to other transfer types, 
            use TransferAutoDetectBinaryExtensionList, TransferAutoDetectImageLabelsExtensionList, 
            and TransferAutoDetectScanExtensionList.
            <para>
            To specify the type of transfer to use when a file 
            extension is not linked to any transfer type, use TransferAutoDetectDefaultType. 
            </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferAutoDetectBinaryExtensionList">
            <summary>
            Returns or specifies which file extensions identify files to be transferred
            as binary files during file transfer using the Auto-Detect transfer type. 
            </summary>
            <value>
            The default value is "exe,com,dll,gif,rbs".
            To specify files with no file extension, use "&lt;&gt;".
            Use commas to separate file extensions included in the string. Do not include periods with the 
            file extensions.
            The string can be up to 259 characters long.
            </value>
            <remarks>
            To link file extensions to other transfer types, use TransferAutoDetectASCIIExtensionList, 
            TransferAutoDetectImageLabelsExtensionList, and TransferAutoDetectScanExtensionList.
            <para>To specify the type of transfer to use when a file extension 
            is not linked to any transfer type, use TransferAutoDetectDefaultType. </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferAutoDetectDefaultType">
            <summary>
            Returns or specifies what type of file transfer to use when no transfer type has been associated
            with the file extension of a file to be transferred using the Auto-Detect transfer feature.
            </summary>
            
            <value>
            <list type="bullet">
            <item><term>TransferTypeOption.Binary  </term><description>Use binary file transfer.</description></item>
            <item><term>TransferTypeOption.ASCII  </term><description>Use ASCII file transfer.</description></item>
            <item><term>TransferTypeOption.Labels  </term><description>Use Labels or Image file transfer.</description></item>
            <item><term>TransferTypeOption.Scan  </term><description>Reflection determines the file transfer method. (The default.)</description></item>
            <item><term>TransferTypeOption.AskUser  </term><description>Display a dialog box prompting the user for a file transfer method.</description></item>
            </list>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferAutoDetectImageLabelsExtensionList">
            <summary>
            Returns or specifies which file extensions identify files to be transferred
            between two host computers during file transfer using the Auto-Detect transfer type.
            </summary>
            <remarks>
            This type of file transfer preserves host-specific information in the files. 
            </remarks>
            <value>
            The default value is "".
            Use "&lt;&gt;" to specify files with no file extension. Use commas to separate file extensions 
            included in the string. Do not include periods with the file extensions.
            The string can be up to 259 characters long.
            </value>
            <remarks>
            To link file extensions to other transfer types, use TransferAutoDetectASCIIExtensionList, 
            TransferAutoDetectBinaryExtensionList, and TransferAutoDetectScanExtensionList.
            <para>To specify the type of transfer to use when a file extension 
            is not linked to any transfer type, use TransferAutoDetectDefaultType.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferAutoDetectScanExtensionList">
            <summary>
            Returns or specifies file extensions for Reflection to scan when trying to determine a suitable file type 
            for file transfers using the Auto-Detect transfer feature. 
            </summary>
            <remarks>
            The following example tells Reflection to scan all files with .BAK file extensions
            and all files with no file extension.
            <para>FileTransfer.TransferAutoDetectScanExtensionList = "bak,&lt;&gt;"</para>
            <para></para>
            If you want Reflection to scan all files whose extensions have not been linked to a particular
            transfer type, use TransferAutoDetectDefaultType.
            To link file extensions to other transfer types, use TransferAutoDetectASCIIExtensionList, 
            TransferAutoDetectBinaryExtensionList, and TransferAutoDetectImageLabelsExtensionList.
            </remarks> 
            <value>
            The default value is "".
            Use "&lt;&gt;" to specify files with no file extension. Use commas to separate file extensions included
            in the string. Do not include periods with the file extensions. 
            The string can be up to 259 characters long.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferDefaultProtocol">
            <summary>
            Returns or specifies which of the five transfer protocols that Reflection supports is used 
            by default in the File Transfer dialog box. 
            </summary>
            <remarks>
            Programmatic transfers use methods that are specific to a particular protocol (for example, 
            KermitSendFile or WRQReceiveFile).
            </remarks>
            <value>
            <list type="bullet">
            <item><term>TransferProtocolOption.FTP  </term><description>Specifies FTP as the default protocol.</description></item>
            <item><term>TransferProtocolOption.Kermit  </term>><description>Specifies Kermit as the default protocol.</description></item>
            <item><term>TransferProtocolOption.WRQ  </term><description>Specifies WRQ/Reflection as the default protocol. (The default.)</description></item>
            <item><term>TransferProtocolOption.Xmodem  </term><description>Specifies Xmodem as the default protocol.</description></item>
            <item><term>TransferProtocolOption.Zmodem  </term><description>Specifies Zmodem as the default protocol.</description></item>
            </list>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferDownloadDirectory">
            <summary>
            Returns or specifies the default folder for transfers to the local computer. 
            </summary>
            <remarks>
            This property affects transfers under all supported protocols (WRQ/Reflection, FTP, 
            Kermit, Xmodem, and Zmodem). It does not affect programmatic transfers, which always
            use the current folder.
            </remarks>
            <value>
            The default is the User subfolder under the folder to which Reflection was installed.
            The maximum length for this string is 80 characters.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferIfFileExistsDefault">
            <summary>
            Returns or specifies what happens with transfers from the File Transfer dialog box if the
            destination file already exists. 
            </summary>
            <remarks>
            Every time you perform a transfer from the File Transfer dialog box, this property is set
            and its value becomes the default for the next transfer from this dialog box. 
            This property has no effect on programmatic transfers; if you don't explicitly specify an IfFileExists action when 
            you transfer files programmatically, the transfer fails if the destination file already exists 
            (equivalent to DestinationDestinationFileExistsOption.Cancel).
            <para>This property affects transfers under all supported protocols.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.Transfer8Dot3FilenameCase">
             <summary>
             Returns or specifies how case is handled in the names of files sent to the host.
             This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers. 
             </summary>
             <value>
             The default value is TransferCaseOption.Lowercase.
            
              TransferCaseOption.Uppercase	
                     Host file names are created using all uppercase letters, regardless of the case of
                     the local (source) file.
              TransferCaseOption.Lowercase	
                     Host file names are created using all lowercase letters, regardless of the case of
                     the local (source) file.
              TransferCaseOption.Preserve	
                     The case of the host file name exactly matches the case of the local file name.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferLoggingEnabled">
            <summary>
            Returns or specifies whether file transfer logging is enabled.
            When TransferLoggingEnabled is True, Reflection stores file transfer information to a 
            log file specified by TransferLogFileName. Use the StartTransferLogging and StopTransferLogging 
            methods to start and stop file transfer logging.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferLogFileName">
            <summary>
            Returns or specifies the name of the file transfer log file. When TransferLoggingEnabled is True
            (the default value), you can send file transfer information to this log file using the 
            StartTransferLogging method. Use TransferStopLogging to stop logging. 
            The contents of the log file are cleared each time you use the StartTransferLogging method.
            </summary>
            <value>
            By default, the transfer file is named "Transfer.log" and located in your Reflection user directory.         
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferPresetConfiguration">
             <summary>
             Returns or specifies a string identifying a preset configuration for file transfer.
             </summary>
             <remarks>
             Changing this property affects other transfer properties depending on the protocol and 
             preset you are using; it is equivalent to changing the Preset configuration on the Protocol 
             tab of the File Transfer dialog box.
             </remarks>
             <value>
             The default and valid values depend on the current value of TransferDefaultProtocol. 
             If WRQ/Reflection is the default protocol, possible values are:
            
             "(Current Configuration)"
             "To OpenVMS"
             "To UNIX"
             "Troubleshooting to OpenVMS"        
             "Troubleshooting to UNIX"
            
             If FTP is the default protocol, possible values are:
            
             "(Current Configuration)"
             "To OpenVMS Using Reflection FTP"
             "To Unisys Using Reflection FTP"
             "To UNIX Using Microsoft FTP"        
             "To UNIX Using Reflection FTP"
            
             If Zmodem is the default protocol, possible values are:
            
             "(Current Configuration)"
             "To BBS"        
             "To Host"
            
             If Kermit is the default protocol, possible values are:
            
             "(Current Configuration)"
             "To BBS"
             "To CompuServe"
             "To Kermit Server"
             "To Remote Kermit Command Mode"        
             "To UNIX Shell"
            
             If Xmodem is the default protocol, possible values are:
            
             "(Current Configuration)"
             "To BBS or Host{Xmodem}"
             "Using Xmodem-1K to BBS or Host"        
             "Using Xmodem-CRC to BBS or Host"
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferReceiveTimeout">
            <summary>
            Returns or specifies the maximum number of seconds to wait for a response from the host
            or Reflection during a transfer. If nothing is received within the period specified, 
            the file transfer program attempts to resynchronize. (The TransferRetryLimit property 
            determines how many times the file transfer program attempts to retransmit the block.)
            This property affects transfers under all supported protocols (WRQ/Reflection, FTP, Kermit, 
            Xmodem, and Zmodem).
            </summary>
            <value>
            The default value is 15. 
            The range of values is 1-9999.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferRetryLimit">
            <summary>
            Returns or specifies how many consecutive times to attempt to transmit a packet before 
            abandoning a file transfer. 
            The interval between retries is determined by the TransferReceiveTimeout property.
            This property affects transfers under all supported protocols (WRQ/Reflection, FTP, Kermit, 
            Xmodem, and Zmodem).
            </summary>
            <value>
            The default value is 10. 
            The range of values is 1-9999.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferStartTimeout">
            <summary>
            Returns or specifies the number of seconds the file transfer program should wait 
            for a response from the host before beginning a transfer. If no response is received 
            within this interval, the program abandons the transfer. 
            This property affects transfers under all supported protocols (WRQ/Reflection, FTP, Kermit, 
            Xmodem, and Zmodem).
            </summary>
            <value>
            The default value is 25. 
            The range of values is 5-9999.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferStatusWindowVisible">
            <summary>
            Returns or specifies whether the file transfer status window is displayed while a file transfer is occurring. 
            </summary>
            <value>
            The default value is true
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferReceiveAs8Dot3">
            <summary>
            Returns or specifies whether the names of received files are automatically truncated
            if they do not conform to the 8-dot-3 file naming convention. 
            This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferSpacesToUnderscores">
            <summary>
            Returns or specifies whether spaces in file names are converted to underscores
            when files are sent from Reflection. 
            This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers. 
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransferUnderscoresToSpaces">
            <summary>
            Returns or specifies whether underscores in file names are converted to spaces when files 
            are received to Reflection. 
            This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.UseHostRecordSeparator">
            <summary>
            Returns or specifies whether Reflection uses the record separator character specified by 
            HostRecordSeparator when an ASCII file is transferred from the host. 
            This property only applies to ASCII file transfers using the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is true
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.UsePCRecordSeparator">
            <summary>
            Returns or specifies whether Reflection uses the record separator character specified by 
            PCRecordSeparator when an ASCII file is transferred to the host. 
            This property only applies to ASCII file transfers using the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is true
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WriteCtrlZAsEOF">
            <summary>
            When this property is set to True, Reflection automatically adds an end-of-file marker at the 
            end of ASCII files received from the host. Some older PC programs require the Ctrl-Z end-of-file 
            marker. 
            The equivalent property for ASCII transfers to the host is ReadCtrlZAsEOF, which determines whether
            the Ctrl-Z at the end of PC files should be copied to the host during an ASCII file transfer. 
            This property is relevant only for ASCII file transfers from the host. 
            </summary>
            <value>
            The default value is false
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WriteSpacesAsTab">
            <summary>
            Returns or specifies whether Reflection replaces spaces with tabs during ASCII file transfers
            from the host. You can replace consecutive spaces with tabs by setting this property to True. 
            Replacing spaces with tabs can save a lot of disk space. The SpacesPerTab property determines h
            ow many consecutive spaces Reflection will translate into a single tab character.
            On the PC this value is also used to control replacement of tabs with spaces when logging to 
            disk or copying from display memory. 
            </summary>
            <value>
            The default value is false
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQCompression">
             <summary>
             Returns or specifies how file compression is handled.
             File compression speeds up file transfers. Huffman compression uses considerable processing power
             on the host and the local computer, but compresses very effectively. For most users, WRQCompressionOption.Huffman is
             recommended. Users with a very fast datacomm link or less computing power might prefer to use WRQCompressionOption.RLE
             (run-length compression) or WRQCompressionOption.None (no compression). You can try comparing transfer times using
             different compression values. 
            
             Compression is not always appropriate. For example, if you use Reflection compression to transfer a file
             that's already in a compressed format, you can slow the transfer. 
             If the WRQFastFileTransfer property is set to True, Reflection attempts to do fast file transfers. I
             f a fast file transfer takes place, the WRQCompression property is ignored.
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is WRQCompressionOption.Huffman. 
            
             WRQCompressionOption.Huffman	Perform Huffman compression on transfers.
             WRQCompressionOption.None	Perform no compression on transfers.
             WRQCompressionOption.RLE	Perform run-length compression on transfers.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQEndOfFrameCharacter">
            <summary>
            Returns or specifies the character that is to indicate the end of a file transfer frame. 
            If WRQFastFileTransfer is True, Reflection attempts to do fast file transfers. If a fast
            file transfer takes place, the WRQEndCharacter property is ignored.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default is the end of text character, represented "\0x0003" 
            The value can be any control character with an ASCII value of less than 32—that is, "\0x0000" 
            through "\0x001f" — or the close-parenthesis character, ")". 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQExtraCharacters">
             <summary>
             This property is relevant only when WRQTransferLink is set to TransferLinkOption.UserDefinedLink. 
             Returns or specifies characters to be converted into printable ASCII characters during
             file transfers. See the information on file transfer configuration in your Reflection help
             for further information. 
             If WRQFastFileTransfer is True, Reflection attempts to do fast file transfers. If a fast file 
             transfer takes place, the WRQExtraCharacters property is ignored.
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default is "" (no characters). 
             The value can be a string of control characters with a ASCII values of less than 32—that is, 
             "\0x0000" through "\0x001f" — or greater than 127.
             The maximum length of the string is 32 characters
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQFastCompression">
            <summary>
            Returns or specifies whether Reflection compresses files transferred using fast file transfer. 
            If you have a fast network but comparatively slow CPU, set this property to False so fast 
            file transfer won't use compression. However, if you have one of the faster CPUs currently 
            available in today's market (for both PCs and hosts), setting this property to True speeds up 
            the file transfer.
            Use WRQFastFileTransfer to specify whether Reflection should attempt to use the fast file transfer 
            feature. 
            </summary>
            <value>
            The default value is False.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQFastFileTransfer">
             <summary>
             Returns or specifies whether Reflection should attempt to use the fast file transfer feature. 
             With this feature, you can move files between your PC and the host many times faster than with 
             the standard file transfer protocol. 
             This property is relevant only when your host connection is through a network using the LAT, Telnet, 
             or NS/VT protocol. 
             Use WRQFastCompression to specify how compression is handled during fast file transfers.
            
             When fast file transfer is in effect, the following properties are ignored during file transfers: 
            
             WRQCompression
             WRQEndCharacter
             WRQExtraCharacters
             WRQFrameSize
             WRQStartCharacter
             WRQTransferLink
             WRQWindowSize
            
             If you use the StartTrace method when fast file transfer is in effect, you won't be able to capture the
             actual flow of data. If you run VAXLINK2 with the L parameter, a host log file is not created. 
             It may be necessary to set this property to WRQFastFileTransferOpton.Never for sending ASCII files with records larger than 
             32767 bytes. The transfer will fail and Reflection will display an error message if this is necessary. 
             
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is WRQFastFileTransferOption.Negotiate. 
            
             WRQFastFileTransferOption.Always	Fast file transfer is always used. The transfer fails if the fast file transfer feature cannot be used.
             WRQFastFileTransferOption.Never	    Fast file transfer is never used.
             WRQFastFileTransferOption.Negotiate	Reflection attempts to use the fast file transfer feature, but falls back to a standard transfer if a fast file transfer is not possible.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQFrameSize">
             <summary>
             Returns or specifies the total length of a file transfer packet (in characters), including
             the start and end characters, but not the delimiting character. 
             For a VMS host, if WRQFrameSize is set to a value higher than 512 and WRQWindowSize is set
             to a value higher than 1, the window size is temporarily adjusted down to 1 for file transfers. 
             If WRQFastFileTransfer is True, Reflection attempts to do fast file transfers. If a fast file
             transfer takes place, the WRQFrameSize property is ignored.
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default depends on whether you have selected UNIX or OpenVMS defaults. See HostForDefaultSettings
             for details. The range of values is 32-1024.
             </value>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown if a value outside the range of valid values is specified.
             </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQFrameTerminator">
            <summary>
            Returns or specifies which character comes at the end of a file transfer packet. This character
            causes a host read operation to complete. 
            If WRQFastFileTransfer is True, Reflection attempts to do fast file transfers. If a fast file
            transfer takes place, the WRQFrameTerminator property is ignored.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is a carriage return, represented in Basic as Chr$(13) or C# as "\r"       
            The value can be any control character with an ASCII value of less than 32—that is, 
            Chr$(0) through Chr$(31)—or the open parenthesis character. It is recommended that you not 
            set this property to Chr$(0), Chr$(2), Chr$(17), Chr$(19), or Chr$(25). 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQHostErrorMessage">
            <summary>
            Returns the host error message for a failed WRQ/Reflection protocol file transfer. 
            Use this property whenever WRQSendFile or WRQReceiveFile generates an error. 
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQHostRecordSize">
             <summary>
             Returns or specifies the record size (in bytes) for files transferred to the host.
             The default value—0—specifies that the record size for the host file is to be determined by the host. 
             When you send binary files they are divided up into fixed-length records containing n bytes, where 
             n is the value of WRQHostRecordSize. The last record contains the remainder (assuming the total 
             number of bytes in the file is not evenly divisible by n). 
            
             When you send an ASCII file, any records containing more than n bytes, where n is the value of 
             WRQHostRecordSize, are split up into smaller records. 
             A host record size specified with an attribute argument to the WRQSendFile method takes precedence 
             over the value of WRQHostRecordSize. 
             A value of 80 is standard for many text editors; 132 is appropriate for many printers. 
             If you don't know what size to use for a particular host program, check other host files used by 
             the same program. 
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is 0.
             The range of values is 0-32767.
             </value>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown if a value outside the range of valid values is specified.
             </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQHostSystem">
             <summary>
             Returns or specifies what type of host Reflection expects to be interacting with.
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default depends on whether you have selected UNIX or OpenVMS defaults. See HostForDefaultSettings for details.
             The possible values are:
            
             HostSystemTypeOption.HP1000	Defines the HP 1000 as the host system type.
             HostSystemTypeOption.HP3000	Defines the HP 3000 as the host system type.
             HostSystemTypeOption.VMS	Defines VMS as the host system type.
             HostSystemTypeOption.UNIX	Defines UNIX as the host system type.
             HostSystemTypeOption.Other	Defines Other as the host system type.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQKeepFile">
            <summary>
            Returns or specifies whether a copy of the file being sent should be kept
            on the host. This property is relevant for files being submitted to the default 
            print or batch queue, which are otherwise deleted automatically after they are 
            submitted to these queues.
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem
            is set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is False.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQMPEFileNames">
             <summary>
             Version 5.0 of the MPE operating system supports two naming systems for file names:
            
             ·	Traditional MPE file names. File names must be all uppercase, no longer than eight 
                 characters, and must conform to the FILENAME.GROUP.ACCOUNT folder structure format.
            
             ·	Version 5.0 POSIX file names. File names can be mixed case and of any length, using 
                 a fully hierarchical folder structure.
            
             MPE file names are a subset of POSIX names. All MPE file names are visible from within 
             POSIX (for example, PCLINK2.PUB.SYS appears as /SYS/PUB/PCLINK2), but only POSIX files 
             with names that are also valid as MPE file names are visible from MPE.
             Use this property to return (first syntax line) or specify (second syntax line) which 
             naming convention Reflection is to use. This file name structure is used for host file 
             names during file transfers, and it also determines how the file names appear in the 
             File Transfer dialog box if you choose the Show Host Files button. When WRQMPEFilenames 
             is set to WRQMPEFileNamesOption.MPE, files beginning with a period or a forward slash (. or /) are interpreted 
             as POSIX files.
            
             This property is only relevant for transfers to HP 3000 hosts (that is, when WRQHostSystem is 
             set to HostFileSystemOption.HP3000).
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is WRQMPEFileNamesOption.MPE. 
            
             WRQMPEFileNamesOption.Auto	The host program determines which naming system to use.
             WRQMPEFileNamesOption.MPE	Reflection uses traditional MPE file names, unless a name begins with a forward slash or a period, in which case the name is assumed to be a POSIX name.
             WRQMPEFileNamesOption.POSIX	Reflection uses POSIX file names.
             WRQMPEFileNamesOption.MPEOnly	Reflection uses traditional MPE file names, reporting any file name beginning with a forward slash or a period as invalid.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQMPEStream">
             <summary>
             Native POSIX files under version 5.0 of the MPE operating system support a record format known
             as "stream," which is just a stream of bytes. Files created under the POSIX shell or by POSIX
             programs have this format by default. Files created from the MPE command interpreter or by MPE
             programs can be stream files. 
             Interoperability between stream files and other record formats is automatic. This means an MPE
             program can read from a stream file and it will appear to be a traditional variable-length record
             file, and a POSIX program will see all files as stream files. MPE does the translation automatically. 
            
             If you want all files that you send to the host to have the stream format, set this property to True
             (when you receive files from the host, the WRQ/Reflection protocol automatically detects the record 
             format of the host file and performs the correct translation). When WRQMPEStream is set to False, 
             PCLINK2 defaults to a Fixed record format for ASCII files and a Variable record format for binary files. 
             This property is relevant only for transfers to MPE hosts (that is, when WRQHostSystem is set to WRQMPEFileNamesOption.HP3000).
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is false.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQPreserveCounts">
            <summary>
            Returns or specifies whether record byte counts are transferred with data during a binary 
            transfer to the host. 
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem is set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQPreserveDate">
            <summary>
            Returns or specifies whether the destination file receives its creation date and time 
            from the source file. When this property is set to False, the destination file receives 
            its creation date from the time of the transfer.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQQEditFormat">
            <summary>
            Returns (first syntax line) or specifies (second syntax line) whether HP 3000 host files 
            are created with the QEDIT format.
            This property is only relevant for transfers to HP 3000 hosts (that is, when WRQHostSystem 
            is set to HostSystemTypeOption.HP3000).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQRemoveFileExtension">
            <summary>
            Returns or specifies whether the DOS file name extension is automatically stripped when 
            files are sent to the host without explicit specification of the host file name.
            This property is only relevant for transfers to HP 3000 hosts (that is, when WRQHostSystem 
            is set to HostSystemTypeOption.HP3000).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQSendSpooled">
            <summary>
            Returns or specifies whether files are sent to a spooled device on the host.
            This property is only relevant for transfers to HP 3000 hosts (that is, when 
            WRQHostSystem is set to HostSystemTypeOption.HP3000).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQHiddenFoldersVisible">
             <summary>
             Returns or specifies whether hidden folders (with names beginning with a period) 
             on a UNIX host are displayed in the File Transfer dialog box, when the host folder 
             list is displayed.
             This property is only relevant for transfers to UNIX hosts (that is, when WRQHostSystem 
             is set to HostSystemTypeOption.UNIX).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is false.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQRecordSizeVisible">
            <summary>
            Returns or specifies whether the Host record size edit control is displayed in the
            File Transfer dialog box.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQStartOfFrameCharacter">
            <summary>
            Returns or specifies which character is to indicate the beginning of a file transfer frame. 
            If WRQFastFileTransfer is True, Reflection attempts to do fast file transfers. If a fast 
            file transfer takes place, the WRQStartCharacter property is ignored.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default is the start-of-text character, which can be represented as Chr$(2). 
            The value can be any control character with an ASCII value of less than 32—that is, Chr$(0) through Chr$(31)
            or the open-parenthesis character. (It is recommended that you not set this property to Chr$(0),
            Chr$(13), Chr$(17), Chr$(19), or Chr$(25).
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQStartupCommand">
            <summary>
            Returns or specifies the host startup command for the WRQ/Reflection transfer protocol.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default depends on whether you have selected UNIX or OpenVMS defaults. 
            See HostForDefaultSettings for details.
            This string can be up to 80 characters long; if you attempt to set it to a string of 
            more than 80 characters, all characters after the 80th character are stripped.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQSubmitBatch">
            <summary>
            Returns or specifies whether a file is submitted to the batch queue upon completion of
            an ASCII transfer to a VMS host. Once a file has been submitted to the batch queue, it is 
            automatically deleted on the host unless the WRQKeepFile property is True.
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem is 
            set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQSubmitPrint">
            <summary>
            Returns or specifies whether a file is submitted to the print queue upon completion of
            an ASCII transfer to a VMS host. Once a file has been submitted to the print queue, it is
            automatically deleted on the host unless the WRQKeepFile property is True.
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem is
            set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQTransferLink">
             <summary>
             Returns or specifies the extent to which nonprinting ASCII characters are automatically 
             converted to printing ASCII characters during file transfers. 
             If WRQFastFileTransfer is True, Reflection attempts to do fast file transfers. If a 
             fast file transfer takes place, the WRQTransferLink property is ignored.
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is TransferLinkOption.EightBitLink. 
            
             TransferLinkOption.EightBitLink	
                 Only a small number of nonprinting ASCII characters are converted. Setting WRQTransferLink to 
                 EightBitLink automatically sets WRQStartCharacter to the start-of-text character, represented as 
                 Chr$(2), and sets WRQEndCharacter to the end-of-text character, represented as Chr$(3). It also
                 specifies that characters specified with WRQExtraCharacters should be ignored. 
             
             TransferLinkOption.SevenBitLink	
                 All nonprinting ASCII characters are converted. Using this value may cause a noticeable slowdown
                 in the speed of the transfer. Setting WRQTransferLink to SevenBitLink automatically sets 
                 WRQStartCharacter to "(" and WRQEndCharacter to ")". It also specifies that characters 
                 specified with WRQExtraCharacters should be ignored.
             
             TransferLinkOption.UserDefinedLink	
                 All characters that would be converted under EightBitLink are converted, along with additional 
                 characters as specified with the WRQExtraCharacters property.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQTransferType">
             <summary>
             Returns or specifies the transfer type for transfers from the File Transfer dialog box. 
             This property is automatically set every time you perform a WRQ/Reflection transfer 
             from the dialog box. The value also becomes the default for the next transfer from 
             the dialog box. This property has no effect on programmatic transfers—if you don't 
             explicitly specify a transfer type with WRQSendFile or WRQReceiveFile, the default is always ASCII.
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is TransferTypeOption.ASCII.
             
             TransferTypeOption.ASCII:
            
                 Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
                 on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
                 transferred.
            
             TransferTypeOption.Binary
            
                 Specifies binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
                 File transfer type is determined by the file extension. Use these properties to determine which file extensions are linked to which transfer type:
            
                TransferAutoDetectDefaultType
                TransferAutoDetectASCIIExtensionList
                TransferAutoDetectBinaryExtensionList
                TransferAutoDetectImageLabelsExtensionList
                TransferAutoDetectScanExtensionList 
             
             TransferTypeOption.Image
            
                Host to host Image/Labels transfer (TransferTypeOption.Labels is a valid synonym).
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQTransferWithAttributes">
            <summary>
            Returns or specifies whether attribute information is included with a file being received
            from the host.
            This property is relevant only for transfers that use the WRQ/Reflection protocol. 
            For binary transfers, WRQTransferWithAttributes is equivalent to using TransferTypeOption.Image
            as the value of the TransferType argument with the WRQSendFile method. The main use of this
            property is to receive ASCII files from the host and retain their attribute information.
            </summary>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQTranslateCarriageCtrl">
            <summary>
            Returns or specifies whether FORTRAN and PRINT carriage control characters in VMS files are translated. 
            This property is only relevant for receiving files from VMS hosts (that is, when WRQHostSystem is set
            to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <value>
            The default value is false
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQUseBlockReads">
             <summary>
             Returns or specifies whether VAXLINK2, the VMS host transfer program, is forced to read files
             in block mode rather than record mode. For certain files in non-standard formats, this transfers
             every byte in the file without regard to record lengths or carriage controls. Setting this property
             to True is equivalent to using TransferTypeOption.Image as the TransferType (with WRQReceiveFile),
             but omitting the image header information.
            
             This property is only relevant for transfers from VMS hosts (that is, when WRQHostSystem is 
             set to HostSystemTypeOption.VMS).
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is false.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQWindowSize">
             <summary>
             The WRQ/Reflection file transfer protocol is a sliding-window protocol. This property returns or
             specifies the number of packets that one side can receive before sending an acknowledgment. For 
             transfers to or from HP 3000 hosts, this property must be set to 1. 
             If WRQFastFileTransfer is True, Reflection attempts to do fast file transfers. If a fast file 
             transfer takes place, the WRQWindowSize property is ignored.
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is 2.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.XmodemExtension">
             <summary>
             Returns or specifies what type of Xmodem error checking is performed, 
             as well as the Xmodem packet size.
             </summary>
             <value>
             The default value is XModemErrorCheckingOption.XmodemCRC. 
            
             XModemErrorCheckingOption.None	    Specifies 1-byte checksum and 128-byte packets.
             XModemErrorCheckingOption.XmodemCRC	Specifies 2-byte CRC and 128-byte packets.
             XModemErrorCheckingOption.Xmodem1k	Specifies 2-byte CRC and 1024-byte packets.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.XmodemTransferType">
             <summary>
             Returns or specifies the transfer type for Xmodem transfers from the File Transfer dialog box.
             This property is automatically set every time you perform an Xmodem transfer from the dialog box.
             The value also becomes the default for the next transfer from the dialog box. This property has
             no effect on programmatic transfers—if you don't explicitly specify a transfer type, the default
             is always binary.
             </summary>
             <value>
             Values
            
             The default value is TransferTypeOption.Binary.
            
             TransferTypeOption.ASCII	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to ASCII. 
                 If the FTPTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
                 If FTPTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl-Z character may be still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to binary. 
                 Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect	
                 The transfer type is determined by the file extension. Use these properties to determine 
                 which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.XmodemCharacterSetTranslationEnabled">
            <summary>
            When this property is set to True, Reflection performs the character set translations
            specified on the Translation tab in the File Transfer Setup dialog box, as well as the
            translations between the host character set and the PC character set, as specified on the
            Emulation tab in the Terminal Setup dialog box.
            
            This property affects ASCII transfers.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemAutoDownload">
            <summary>
            Returns or specifies whether Reflection takes advantage of Zmodem's automatic download feature.
            With this feature, Reflection immediately starts receiving a remote file as soon as it detects a
            Zmodem header. When you set this property to False, you must start the remote system Zmodem send
            program and then use ZmodemReceiveFile to initiate a download. 
            </summary>    
            <value>The default value is true.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemDeleteCancelledReceives">
            <summary>
            Returns or specifies what happens when you cancel a Zmodem receive. If this property is set
            to True, the partially received file is deleted; if it's set to False, the partially received
            file is kept. If a Zmodem receive is not explicitly canceled by the user, the partially received
            file is always kept.
            </summary>
            <value>The default value is true.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemPacketSize">
            <summary>
            Returns or specifies the sub-packet size for file transfers to the remote system; 
            this tells Zmodem how many bytes of data to transfer at a time. The default value works
            in most situations. 
            </summary>
            <value>
            The default value is 1024. 
            The range of values is 32-1024.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemReceiveStartupCommand">
            <summary>
            When you send a file from the PC to the host using the Zmodem protocol, this command is
            transmitted to the host. It should contain the name of the program that starts the Zmodem
            receive command on the host. If you do not specify a receive startup command, you must
            manually start the host's Zmodem receive program before you can send files. 
            This property is only necessary when sending files to a host system; it is not required for
            transferring files to a bulletin board. 
            </summary>
            <value>
            The default value is "".
            This string can be up to 80 characters long. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemSendStartupCommand">
            <summary>
            When you initiate a receive from the host using the Zmodem protocol, this command and the host
            file name are transmitted to the host. This value should contain the name of the program that
            starts Zmodem sends on the host. If you do not indicate a send startup command, you must manually
            start the host's Zmodem send program before you can receive the host file. For VMS hosts,
            this command must be defined as a foreign command. 
            This property is only necessary for receiving files from a host system; it is not required for
            downloading files from a bulletin board. 
            </summary>
            <value>
            The default value is "".
            This string can be up to 80 characters long. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemTransferType">
             <summary>
             Returns or specifies the transfer type for Zmodem transfers from the File Transfer dialog
             box. This property is automatically set every time you perform a Zmodem transfer from the
             dialog box. The value also becomes the default for the next transfer from the dialog box.
             This property has no effect on programmatic transfers—if you don't explicitly specify a
             transfer type, the default is always binary.
             </summary>
             <value>
             Values
            
             The default value is TransferTypeOption.Binary.
            
             TransferTypeOption.ASCII	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to ASCII. 
                 If the FTPTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
                 If FTPTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl-Z character may be still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to binary. 
                 Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect	
                 The transfer type is determined by the file extension. Use these properties to determine 
                 which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemCharacterSetTranslationEnabled">
            <summary>
            When this property is set to True, Reflection performs the character set translations specified
            on the Translation tab in the File Transfer Setup dialog box, as well as the translations between
            the host character set and the PC character set, as specified on the Emulation tab in the Terminal
            Setup dialog box.
            This property affects ASCII transfers.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemFileNamesTranslationEnabled">
             <summary>
             Returns or specifies whether the File name translation options on the Translation tab in the
             File Transfer Setup dialog box are used for Zmodem transfers. These options correspond to the
             following properties:
            
             Transfer8Dot3FilenameCase
             TransferReceiveAs8Dot3
             TransferSpacesToUnderscores
             TransferUnderscoresToSpaces
             </summary>
             <value>
             The default value is false.
             </value>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.AbortTransfer">
            <summary>
            Aborts a file transfer in progress (for any of the supported transfer protocols: Kermit, 
            WRQ/Reflection, Xmodem, or Zmodem) without communicating with the host program. This method is 
            more drastic than CancelTransfer, and may leave the host in an unpredictable state. Use 
            AbortTransfer only if you believe the host transfer program has stopped responding; otherwise
            use CancelTransfer.
            
            This method is not likely to be useful in a macro because all transfer methods must complete 
            execution before subsequent commands are executed. AbortTransfer can be useful for mapping to
            custom items such as toolbar buttons, keystrokes or events. You could also use this method if
            you are using Automation to control Reflection. For example, you could use stand-alone Visual 
            Basic .NET to create a form with an Abort button to abort a transfer in progress.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.CancelTransfer">
            <summary>
            Attempts to cancel a file transfer in progress (for any of the supported transfer protocols: Kermit,
            WRQ/Reflection, Xmodem, or Zmodem) by shutting down the host program. Use AbortTransfer if you think
            the host program has stopped responding.
            
            This method is not likely to be useful in a macro because all transfer methods must complete execution
            before subsequent commands are executed. AbortTransfer can be useful for mapping to custom items such
            as toolbar buttons, keystrokes or events. You can also use this method if you are using Automation
            to control Reflection. For example, you could use stand-alone Visual Basic .NET to create a form with a
            Cancel Transfer button to cancel a transfer in progress.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPGetCurrentHostDirectory">
            <summary>
            Returns the current host directory used for FTP file transfers. This method is only valid when 
            Reflection is connected to the host FTP server; use FTPStartServer to connect to the server before
            using this method.
            </summary>
            <returns>The current host directory.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String)">
             <summary>
             Transfers one or more files from the host to the PC using FTP (file transfer protocol). Use
             FTPStartServer to connect to the host server before using this method. Use FTPStopServer to
             disconnect from the host server after file transfer is complete. 
             </summary>
             <param name="localFile">Specifies a local file. This string can be empty or can contain just drive and path information, in which case the host filename is used to generate a local filename. This string cannot contain wildcard characters.</param>
             <param name="remoteFile">Specifies a host file or files to be transferred. This string can contain wildcard characters (to transfer multiple files). The wildcard characters must be appropriate for the host system.</param>
             <param name="transferType">
             TransferTypeOption.ASCII:
            
             Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
             on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
             transferred.
            
             TransferTypeOption.Binary
            
             Specifies binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileExists">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
             Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
             Stops the transfer.
            
             DestinationFileExistsOption.Update
            
             Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
             Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
             Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
             Renames the file being transferred. The existing file retains the original name. The last three 
             characters of the file being transferred are changed to 001. If such a file already exists, the file's 
             name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
             Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String)">
             <summary>
             Transfers one or more files from the PC to the host using FTP file transfer protocol. Use FTPStartServer
             to connect to the host server before using this method. Use FTPStopServer to disconnect from the host
             server after file transfer is complete. 
             </summary>
             <param name="localFile">Specifies a local file. This string can be empty or can contain just drive and path information, in which case the host filename is used to generate a local filename. This string cannot contain wildcard characters.</param>
             <param name="remoteFile">Specifies a host file or files to be transferred. This string can contain wildcard characters (to transfer multiple files). The wildcard characters must be appropriate for the host system.</param>
             <param name="transferType">
             TransferTypeOption.ASCII:
            
             Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
             on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
             transferred.
            
             TransferTypeOption.Binary
            
             Specifies binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
             File transfer type is determined by the file extension. Use these properties to determine which file
             extensions are linked to which transfer type:
            
             TransferAutoDetectDefaultType
             TransferAutoDetectASCIIExtensionList        
             TransferAutoDetectBinaryExtensionList
             </param>
             <param name="fileExists">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
             Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
             Stops the transfer.
            
             DestinationFileExistsOption.Update
            
             Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
             Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
             Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
             Renames the file being transferred. The existing file retains the original name. The last three 
             characters of the file being transferred are changed to 001. If such a file already exists, the file's 
             name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
             Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPSetCurrentHostDirectory(System.String)">
            <summary>
            Sets the current host directory used for FTP file transfers. This method is only valid when Reflection
            is connected to the host FTP server; use FTPStartServer to connect to the server before using this
            method.
            </summary>
            <param name="hostDirectory">The host directory.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPStartServer(System.String,System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.FTPServerOption)">
             <summary>
             Connects to a host server in preparation for FTP file transfers. Use FTPSendFile and FTPReceiveFile
             to transfer files. Use FTPStopServer to disconnect from the host FTP server. 
             If your settings file is not already configured for FTP protocol, use TransferDefaultProtocol to set 
             the transfer protocol, and TransferPreset to set the host server type.
             Most menu commands and all toolbar buttons are disabled when Reflection is in server mode.
             </summary>
             <param name="userName">
             Specifies the user name. If this argument is null or empty, Reflection uses the current FTP User Name 
             (which can be set using the FTP tab of the File Transfer dialog box, or using the FTPUserName property). 
             If no FTP User Name has been set, Reflection displays the FTP Log In dialog box unless FTPServerOptions.NoLoginDialog
             is specified in the Options argument. If FTPServerOptions.NoLoginDialog is specified, FTPStartServer
             returns an error when UserName is not specified and no FTP User Name has been set. If FTPServerOptions.Anonymous
             is specified in the Options argument, the UserName argument is ignored. 
             </param>
             <param name="password">
             Specifies the FTP password. If this argument is null or empty, Reflection uses the current FTP Password
             (which can be set using the FTP tab in the File Transfer dialog box, or using the FTPPassword property).
             If no password has been set, Reflection displays the FTP Log In dialog box unless FTPServerOptions.NoLoginDialog
             is specified in the Options argument. If FTPServerOptions.NoLoginDialog is specified, FTPStartServer
             generates an error when Password is not specified and no password has been set. 
             </param>
             <param name="hostName">
             Specifies the host name or IP address. If this argument is null or empty, the current value of 
             FTPHostName is used. 
             </param>
             <param name="options">
             Specifies additional, non-default behavior for the method. The possible values are:
            
             FTPServerOption.Anonymous
            
                 Specifies that Reflection should use anonymous FTP when performing this transfer.
            
             FTPServerOption.NoLogInDialog
            
                 Specifies that no FTP Log In dialog should appear if the FTP user name or password is not supplied.
            
             You can combine the two options by adding these values.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FTPStopServer">
            <summary>
            Disconnects from a host server connected by FTPStartServer. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption)">
             <summary>
             Transfers one or more files from a remote computer running a Kermit program to the local computer, using the Kermit file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain drive and path information. It can also be just a 
             folder name, in which case the remote file name is used to generate a local file name. This string 
             cannot contain wildcard characters. If this string is empty (""), the remote filename is used to 
             generate a local filename.
             </param>
             <param name="remoteFile">
             Specifies a file on the remote system. This string can contain wildcard characters. If this string is 
             empty (""), the filename must be specified by the remote Kermit program.
             </param>
             <param name="transferType">
             Specifies what type of file is being transferred. The TransferTypeOption.Binary option is generally appropriate
             for most transfers, including transfers from bulletin boards. Use TransferTypeOption.ASCII when 
             you're sure you want characters translated. The possible values are:
            
             TransferTypeOption.ASCII
            
             Specifies an ASCII file transfer. If the KermitTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
             If KermitTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
             Specifies a binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileExists">
             Specifies what to do if the received file already exists on the PC. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
             Prompts the user to specify what to do.
            
             DestinationFileExistsOption.Cancel
            
             Stops the transfer.
            
             DestinationFileExistsOption.Delete
            
             Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
             Appends the data to the existing file.
            
             DestinationFileExistsOption.Rename
            
             Renames the file being transferred. The existing file retains the original name. The last three 
             characters of the file being transferred are changed to 001. If such a file already exists, the 
             file's name is changed to 002, and so on, up to 999.
             </param>
             <returns></returns>        
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption)">
             <summary>
             Transfers a file from the local computer to the remote system using the Kermit file transfer protocol. 
             There is no IfFileExists option for this method because that aspect of the transfer is controlled by 
             the remote system.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain wildcard characters.
             </param>
             <param name="remoteFile">
             Specifies a file on the remote system. This string cannot contain wildcard characters. If this string is empty, the local 
             file name is used to generate a remote filename.
             </param>
             <param name="transferType">
             Specifies what type of file is being transferred. The TransferTypeOption.Binary option is generally appropriate
             for most transfers, including transfers from bulletin boards. Use TransferTypeOption.ASCII when 
             you're sure you want characters translated. The possible values are:
            
             TransferTypeOption.ASCII
            
             Specifies an ASCII file transfer. If the KermitTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
             If KermitTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
             Specifies a binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <returns></returns> 
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitStartServer">
            <summary>
            Starts a remote Kermit program in server mode. The command used to start the server is defined by the 
            KermitServerStartupCommand property. If that command fails to start the remote Kermit program, 
            this method will still set the local flag indicating that the remote program is in server mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.KermitStopServer(Attachmate.Reflection.Emulation.OpenSystems.KermitStopServerOption)">
             <summary>
             Instructs a remote Kermit program running in server mode to shut down.
             </summary>
             <param name="option">
             Specifies whether this method logs off from the remote computer, in addition to shutting down the server 
             Kermit program. The values are:
             
             KermitStopServerOption.NoLogoff
            
                 KermitStopServer does not log off the remote server when shutting down the server Kermit program. 
                 This is the default action if no Logoff argument is included.
            
             KermitStopServerOption.Logoff
            
                 KermitStopServer does log off the remote server when shutting down the server Kermit program.
             </param>
             <returns>ReturnCode object.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.StartTransferLogging">
            <summary>
            Initiates file transfer logging.
            When TransferLoggingEnabled is True (the default value), Reflection stores file transfer 
            information to a log file specified by the TransferLogFileName property. Use StopTransferLogging 
            method to stop logging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.StopTransferLogging">
            <summary>
            Stops file transfer logging. 
            When TransferLoggingEnabled is True (the default value), Reflection stores file transfer 
            information to a log file specified by the TransferLogFileName property. Use StartTransferLogging 
            method to start logging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.TransmitFile(System.String,System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransmitFileOption)">
             <summary>
             Transmits the specified file to the host. 
             </summary>
             <remarks>
             If the ReadTabAsSpaces property is True and the TransmitFilesOption.NoTranslation option is not specified, 
             tab characters in the file are converted to spaces as they are transmitted to the host.
             If the ReadCtrlZAsEOF property is True and the TransmitFilesOption.NoTranslation option is not specified, 
             a Ctrl+Z character in the file will terminate the method.
             </remarks>
             <param name="fileName">
             The name of the file to transmit. Supply complete path information if the file isn't on the 
             Reflection macro path.
             </param>
             <param name="pause">
             Specifies the amount of time to pause between each line of the file, in HH:MM:SS.hh format. 
             If this argument is empty (""), Reflection does not pause between lines 
             (though it may wait for PromptChar if one is specified).
             </param>
             <param name="promptChar">
             Specifies a character Reflection is to wait for between lines of the file. 
             </param>
             <param name="option">
             Specifies additional, non-default behavior for the method. There are two options for this method:
             
             TransmitFileOption.NoTranslation
            
                 Indicates that the file contains binary data, and should not be translated from the PC character set into the host character set. Use this option if the file contains characters that are already in the host character set.
            
             TransmitFileOption.NoDisplay
            
                 Specifies that incoming characters should not be displayed in the terminal window while waiting for the PromptChar or for PauseTime at the end of a line. If both of the PauseTime and PromptChar arguments are not specified,
                 this option has no effect (the method does not read incoming data from the host).
            
             To combine the two options, use the addition operator: TransmitFileOption.NoTranslation + TransmitFileOption.NoDisplay.
             </param>
             <returns>ReturnCode object.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String)">
             <summary>
             Transfers one or more files from the host to the PC using the WRQ/Reflection file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can be empty or can contain just drive and path information, 
             in which case the host file name is used to generate a local file name. This string cannot contain 
             wildcard characters.
             </param>
             <param name="remoteFile">
             Specifies a host file. This string can contain wildcard characters (to transfer multiple files). 
             The wildcard characters must be appropriate for the host system. You can also append "switches" 
             to the host file name to modify the way the file is handled during the transfer.
             </param>
             <param name="transferOption">
             TransferTypeOption.ASCII:
            
                 Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
                 on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
                 transferred.
            
             TransferTypeOption.Binary
            
                 Specifies binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.Image
            
                Host to host Image/Labels transfer (rcLabels is a valid synonym).
            
             </param>
             <param name="fileOption">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Update
            
                 Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
                 Renames the file being transferred. The existing file retains the original name. The last three 
                 characters of the file being transferred are changed to 001. If such a file already exists, the file's 
                 name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
                 Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String,System.String)">
             <summary>
             Transfers one or more files from the PC to the host using the WRQ/Reflection file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain PC wildcard characters 
             (to transfer multiple files).
             </param>
             <param name="remoteFile">
             Specifies a host file. This string cannot contain wildcard characters. If this string is an empty 
             string (""), the local file name is used to generate the host file name. You can also append 
             "switches" to the host file name to modify the way the file is handled during the transfer.
             </param>
             <param name="transferType">
             TransferTypeOption.ASCII:
            
                 Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
                 on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
                 transferred.
            
             TransferTypeOption.Binary
            
                 Specifies binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
                 File transfer type is determined by the file extension. Use these properties to determine which file extensions are linked to which transfer type:
            
                TransferAutoDetectDefaultType
                TransferAutoDetectASCIIExtensionList
                TransferAutoDetectBinaryExtensionList
                TransferAutoDetectImageLabelsExtensionList
                TransferAutoDetectScanExtensionList 
             
             TransferTypeOption.Image
            
                Host to host Image/Labels transfer (rcLabels is a valid synonym).
            
             </param>
             <param name="fileExists">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Update
            
                 Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
                 Renames the file being transferred. The existing file retains the original name. The last three 
                 characters of the file being transferred are changed to 001. If such a file already exists, the file's 
                 name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
                 Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <param name="attributes">Specifies host file attributes to be used. </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQStartServer">
            <summary>
            Starts the WRQ/Reflection protocol host server in preparation for multiple file transfers.
            Most menu commands and all toolbar buttons are disabled when Reflection is in server mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.WRQStopServer">
            <summary>
            Stops the WRQ/Reflection protocol host server started by WRQStartServer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.XmodemReceiveFile(System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption)">
             <summary>
             Transfers a file from the host to the PC, using the Xmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies the local file name to use for the file. This string can contain drive and path information. 
             This string cannot contain wildcard characters.
             </param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileOption">
             Specifies what to do if the sent file already exists on the PC. The default is DestinationFileExistsOption.Cancel.
             The possible values are:
            
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the contents of the host file to the existing PC file.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.XmodemSendFile(System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption)">
             <summary>
             Transfers a file from the PC to the host, using the Xmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string cannot contain wildcard characters.
             </param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
                 File transfer type is determined by the file extension. Use these properties to 
                 determine which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList           
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption)">
             <summary>
             Transfers one or more files from the host to the PC, using the Zmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies the local file name to use for the file. This string can contain drive and path information.
             It can also be just a folder name or an empty string, in which case the host file name is used
             to generate a local file name. This string cannot contain wildcard characters.
             </param>
             <param name="remoteFile">
             Specifies the remote file name to use for the file.
             </param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileOption">
             Specifies what to do if the sent file already exists on the PC. The default is DestinationFileExistsOption.Cancel. The possible values are:
            
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the data to the existing file.
            
             DestinationFileExistsOption.Rename
            
                 Renames the file being transferred if a file of the same name already exists on the destination system. The last three characters of the existing file's name are changed to 001. If such a file already exists, the file's name is changed to 002, and so on, up to 999.
            
             DestinationFileExistsOption.Resume
            
                 Resumes a canceled receive. If the file already exists on the PC, Reflection assumes it is there as the result of an aborted transfer. Reflection therefore resumes the transfer at the point of interruption.
            
             DestinationFileExistsOption.Update
            
                 Performs the transfers only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.UseRemote
            
                 Uses the IfFileExists option specified by the remote system. If the remote system doesn't specify an IfFileExists , this option is equivalent to DestinationFileExistsOption.Cancel.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.ZmodemSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption)">
             <summary>
             Transfers one or more files from the host to the PC, using the Zmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain wildcard characters (to send multiple files).
             </param>
             <param name="remoteFile">
             Specifies a host file. This string cannot contain wildcard characters. If this string is empty or contains a path but no file name, 
             the local file name is used to generate a host filename.
             </param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
                 File transfer type is determined by the file extension. Use these properties to 
                 determine which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList                   
             </param>
            <returns></returns>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FileTransferDone">
            <summary>
            The event occurs when a file transfer completes.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.OnFileTransferDone(System.EventArgs)">
            <summary>
            Fire KeyboardLocked event
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.FileTransfer.FileTransferDoneEventSink(System.Object,System.EventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.FTPClearConnectionOption">
            <summary>
            Specifies how logon information on the FTP tab of the File Transfer Setup
            dialog box is cleared (and not 
            used to log in to new hosts). 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FTPClearConnectionOption.ClearNever">
            <summary>
            Never clears logon information from the FTP tab.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FTPClearConnectionOption.ClearOnDisconnect">
            <summary>
            Clears the logon information when you disconnect from the current host connection. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FTPClearConnectionOption.ClearOnHostNameChange">
            <summary>
             Clears the logon information when you change the host name. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FTPClearConnectionOption.ClearAlways">
            <summary>
            Clears the logon information on disconnect or host name change.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.FTPServerOption">
            <summary>
            Options for specifying additional, non-default behavior for the FTPStartServer method
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FTPServerOption.None">
            <summary>
            Specifies no options.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FTPServerOption.Anonymous">
            <summary>
            Specifies that Reflection use anonymous FTP when performing transfers.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FTPServerOption.NoLogInDialog">
            <summary>
            Specifies that no FTP Log In dialog appears if the FTP user name or password is not provided.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.GraphicDestinationOption">
            <summary>
            Destination of graphic images.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicDestinationOption.ToPrinter">
            <summary>
            Images are sent to a digital printer.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicDestinationOption.ToHost">
            <summary>
            Images are sent to the host.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.GraphicsLevelOption">
            <summary>
            Graphics level option.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsLevelOption.Level1">
            <summary>
            Level 1 sixel devices have an aspect ratio of 2:1 (two horizontal pixels to one vertical pixel), 
            and a horizontal grid size of about 188 by 0.025 mm (7.5 by 0.001 inches). 
            </summary>
            <remarks>
            Level 1 devices, which include Digital's LA50 printer, do not support the following sixel commands: 
            <para>·	Set raster attributes </para>
            <para>·	Background select</para>
            <para>·	Horizontal grid size</para>
            <para>·	Macro parameter</para>
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsLevelOption.Level2">
            <summary>
            Level 2 sixel devices, which include Digital's LA75 and LN03 printers, have a variable aspect ratio and variable horizontal grid size; the default 
            aspect ratio is 1:1. 
            </summary>
            <remarks>
            These devices also support the sixel commands that level 1 devices don't. 
            If you want to print expanded or rotated images on an 
            LA75 printer, use rcLevel1 instead; this compensates for differences between
            Reflection and the printer. In general, level 2 printers can also operate
            at level 1. Digital's LA210 printer is similar to a level 2 device, but does not
            recognize the set raster attributes command.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsLevelOption.LA210">
            <summary>
            The LA210 uses a 1:1 aspect ratio with a horizontal grid size of about 338 by 0.025 mm 
            (13 by 0.001 inches). 
            </summary>
            <remarks>
            Some printers understand only a certain level of graphics.
            The LA50, for example, is a Level 1 printer and cannot operate at Level 2. 
            By contrast, if you use an LA210 printer, you can select either LA210 or Level 1.
            </remarks>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.GraphicsPrintModeOption">
            <summary>
            Graphic print mode options.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsPrintModeOption.Compress">
            <summary>
            Prints the page vertically (that is, with the longest edge of the paper on the sides).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsPrintModeOption.Rotate">
            <summary>
            Prints the page horizontally (that is, with the longest edge of the paper on the top and bottom).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsPrintModeOption.Expand">
            <summary>
            Prints the page vertically, but with characters twice as high and twice as wide as for rcCompress.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.GraphicsTerminalTypeOption">
            <summary>
            Defines which terminal is emulated, and how many shades or colors are available.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsTerminalTypeOption.VT240">
            <summary>
            Emulates a VT240 terminal, with 4 monochrome shades.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsTerminalTypeOption.VT241">
            <summary>
            Emulates a VT241 terminal, with 4-color capability.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsTerminalTypeOption.VT330">
            <summary>
            Emulates a VT330 terminal, with 4 monochrome shades.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.GraphicsTerminalTypeOption.VT340">
            <summary>
            Emulates a VT340 terminal, with 16-color capability.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption">
            <summary>
            Host character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Bit7Hebrew">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Big5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.CCDC">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DECCyrillic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DECGreek">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DECHebrew">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DECKanji1978">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DECKanji1983">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DECSupplemental">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DECTurkish">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.DGInternational">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Eastern_Europe_7bit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.EUCKanji">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.GBChinese">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.HPGreek">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.HPHebrew">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.HPRoman8">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.HPRoman9">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.HPTurkish">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ISOCyrillic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ISOGreek">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ISOHebrew">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ISOLatin_1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ISOLatin_2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ISOLatin_5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ISOLatin_9">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.JIS1978">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.JIS1983">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.JIS1990">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.JISKatakana">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Korean">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.LatinGreek7">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.NECN88">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC220_Spanish">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC437_English">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC437G_Greek">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC437T_Turkish">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC850_Multilingual">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC852_Slavic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC855_Cyrillic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC857_Turkish">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC860_Portuguese">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC861_Icelandic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC862_Hebrew">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC863_CanadianFrench">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC865_Nordic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC866_Cyrillic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.PC869_ModernGreek">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.SBig5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ShiftJIS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.SuperDECKanji">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Thai988TISO">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ThaiKU">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ThaiPrime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.ThaiTISO">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.TraditionalChinese">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.UnisInternat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Windows1250">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Windows1251">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Windows1252">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Windows1253">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Windows1254">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.Windows1257">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.TVIMultinational">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostCharacterSetOption.UTF8">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.HostStatusLineOption">
            <summary>
            Host status line dislay options.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostStatusLineOption.NoStatusLine">
            <summary>
            Does not display the VT status line.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostStatusLineOption.Indicator">
            <summary>
            When HostStatusLine is set to rcIndicator, it shows the current row and column of the text cursor 
            and the printer status. 
            </summary>
            <remarks>
            The position of the text cursor is always relative to the display and starts from row 1,
            column 1 at the top left. 
            <para>The printer status appears as "Printer: [mode]."</para>
            The [mode] depends on whether logging is enabled in the Logging Settings dialog box.   
            (To open this dialog box, click the Logging group on the Tools ribbon.)
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostStatusLineOption.HostWritable">
            <summary>
            The control function DECSASD determines whether the terminal window or the 
            status line is the active area for displaying messages from host applications.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.HostSystemTypeOption">
            <summary>
            Options for specifying the type of host with which Reflection expects to interact.
            </summary>
            <remarks>
            This is relevant only for transfers that use the WRQ/Reflection protocol.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostSystemTypeOption.Hp1000">
            <summary>
            Defines the HP 1000 as the host system type.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostSystemTypeOption.Hp3000">
            <summary>
            Defines the HP 3000 as the host system type.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostSystemTypeOption.Vms">
            <summary>
            Defines VMS as the host system type.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostSystemTypeOption.Unix">
            <summary>
            Defines UNIX as the host system type.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HostSystemTypeOption.Other">
            <summary>
            Defines Other as the host system type.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.Hotspot">
            <summary>
            Defines an individual hotspot instance
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.#ctor">
            <summary>
            Initializes a new instance of the Hotspot class.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.#ctor(System.String,Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence)">
            <summary>Initializes a new instance of the Hotspot class.</summary>
            <param name="text">The action type.</param>
            <param name="actionSequence">Optional parameters associated with the action. If there are no parameters needed
            for the action, null may be specified for this parameter.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.Text">
            <summary>
            Gets or sets a value indicating the hotspot text. The text can be up to 80 characters.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.Tooltip">
            <summary>
            Gets or sets the text to display when the mouse cursor is over the hotspot.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.Row">
            <summary>Gets or sets whether the hotspot will appear only if the text is in the specified row.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.Column">
            <summary>Gets or sets whether the hotspot will appear only if the text is in the specified column.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.OtherDelimiters">
            <summary>
            Gets or sets the list of characters to use as hotspot delimiters when UseOtherDelimiters is true.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.MatchCase">
            <summary>
            Gets or sets a value indicating whether to make the hotspot case sensitive.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.PrecededByDelimiter">
            <summary>Gets or sets a value indicating whether the hotspot must be preceded by a delimiter, usually a space.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.FollowedByDelimiter">
            <summary>
            Gets or sets a value indicating whether the hotspot must be followed by a delimiter, usually a space.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.MatchUntilDelimiter">
            <summary>Gets or sets a value indicating whether to define the end of the hotspot as a delimiter, usually a space.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.AutoInvoke">
            <summary>
            Gets or sets a value indicating whether to cause the hotspot to be invoked as soon as it appears on the screen.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.SpaceDelimiter">
            <summary>Gets or sets a value indicating whether to use the white space created by pressing the SPACEBAR as a hotspot delimiter.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.UseOtherDelimiters">
            <summary>Gets or sets a value indicating whether to use other characters as hotspot delimiters.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.ActionSequence">
            <summary>
            Gets or sets the action sequence to invoke when this hotspot is invoked.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.GetSchema">
            <summary>Returns an in-memory representation of the XML schema used for Hotspot.</summary>
            <returns>Null -- not currently implemented</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.ReadXml(System.Xml.XmlReader)">
            <summary>Reads in a list type from an xml file.</summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.WriteXml(System.Xml.XmlWriter)">
            <summary>Writes out a list to xml format.</summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.op_Equality(Attachmate.Reflection.Emulation.OpenSystems.Hotspot,Attachmate.Reflection.Emulation.OpenSystems.Hotspot)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="hs1">The first object to compare. </param>
            <param name="hs2">The second object to compare. </param>
            <returns>true if the specified objects are equal to each other; otherwise, false.  If both objA and objB are null, the method returns true.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.op_Inequality(Attachmate.Reflection.Emulation.OpenSystems.Hotspot,Attachmate.Reflection.Emulation.OpenSystems.Hotspot)">
            <summary>
            Determines whether the specified object is not equal to the current object.
            </summary>
            <param name="hs1">The first object to compare. </param>
            <param name="hs2">The second object to compare. </param>
            <returns>true if the specified objects are not equal to each other; otherwise, false.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.GetHashCode">
            <summary>
            Serves as the default hash function. 
            </summary>
            <returns>A hash code for the current object</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Hotspot.ToString">
            <summary>
            Returns a string representation of this Hotspot.
            </summary>
            <returns>A string representation of this Hotspot</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags">
            <summary>
            Hotspot options
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.None">
            <summary>No options specified.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.MatchCase">
            <summary>Hotspot is case sensitive.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.PrecededByDelimiter">
            <summary>Hotspot must be preceded by a space.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.FollowedByDelimiter">
            <summary>Hotspot must be followed by a space.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.MatchUntilDelimiter">
            <summary>Defines a space as the end of the hotspot.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.AutoInvoke">
            <summary>Cause the hotspot to be invoked as soon as it appears on the screen.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.SpaceDelimiter">
            <summary>Use the white space created by pressing the spacebar as a hotspot delimiter.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotOptionFlags.UseOtherDelimiters">
            <summary>Use characters other than space as hotspot delimiters.</summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.HotSpots">
            <summary>
            Defines methods to configure hotspots and properties to 
            get and set hotspot visibility, position, and other attributes.   
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IHotSpots)">
            <summary>
            Initializes a new instance of the HotSpots class.
            </summary>
            <param name="hotspots">
            The server side hotspots instance
            </param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotSpotsEnabled">
            <summary>
            Gets or sets a value indicating whether hotspots are enabled.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotSpotsVisible">
            <summary>
            Gets or sets a value indicating whether hotspots are visible.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.MRUHotSpotColumn">
            <summary>
            Gets the most recently used hotspot column position.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.MRUHotSpotLength">
            <summary>
            Gets the most recently used hotspot length.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.MRUHotSpotRow">
            <summary>
            Gets the most recently used hotspot row position.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.MRUHotSpotText">
            <summary>
            Gets the most recently used hotspot text.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotSpotStyle">
            <summary>
            Gets or sets a value indicating the way that hotspots should appear on the screen.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotspotsMouseButton">
            <summary>Gets or sets a value indicating the mouse button used to invoke hotspots.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotspotsDoubleClick">
            <summary>Gets or sets a value indicating whether a double click is required to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotspotsShiftKey">
            <summary>Gets or sets a value indicating whether the Shift key must be used in conjunction with the mouse to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotspotsCtrlKey">
            <summary>Gets or sets a value indicating whether the Ctrl key must be used in conjunction with the mouse to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotspotsAltKey">
            <summary>Gets or sets a value indicating whether the Alt key must be used in conjunction with the mouse to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.MatchCase">
            <summary>Gets or sets a value indicating whether hotspots are case sensitive.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.SpaceDelimiter">
            <summary>Gets or sets a value indicating whether the whitespace created by pressing the spacebar is to be used as a hotspots delimiter.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.UseOtherDelimiters">
            <summary>
            Gets or sets a value indicating whether the contents of the OtherDelimiters property are to be used as additional hotspots delimiters.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.OtherDelimiters">
            <summary>
            Gets or sets a value indicating other character(s) to use as hotspot delimiters when the UseOtherDelimiters property is set to true.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.HotspotsMap">
            <summary>Gets or sets the current hotspots definition file.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.MappingCollection">
            <summary>
            Gets a set of all the hotspots that have been mapped in the current hotspot map.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.DefaultHotspotMapName">
            <summary>Gets the path and filename that the Save method saves a hotspot to when the location defined by the HotspotsMap property is read-only.</summary>
            <remarks>The Save method saves the in-memory hotspot collection to the hotspot file defined by the HotspotsMap property. However, if that location points at a read-only
            location such as the built-ins folder underneath program files\Micro Focus\reflection where files cannot be written to, then the Save method saves the file in
            the user's documents area (e.g. Documents\Micro Focus\Reflection\Hotspots Maps) under the name of the active session.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.ConfigureHotSpots(System.String)">
            <summary>
            Loads the hotspots file as the current hotspots definitions.
            </summary>
            <param name="hotSpotsFilePath">Hotspots file path</param>
            <returns>Method return code</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.Clear">
            <summary>
            Removes all items from the hotspots map, resulting in an empty map.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.AddHotspot(Attachmate.Reflection.Emulation.OpenSystems.Hotspot)">
            <summary>
            Adds a new hotspot to the current hotspot map. If a hotspot with the specified text already
            exists, subject to the existing hotspot's case sensitivity property, it is removed prior to the new hotspot being added.
            </summary>
            <param name="hs">The hotspot to be added</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.RemoveHotspotByText(System.String,System.Boolean)">
            <summary>
            Removes all hotspots with the specified text from the currrent hotspot map. 
            </summary>
            <param name="hotspotText">Remove all hotspots with this text value</param>
            <param name="caseSensitive">Whether to remove hotspots with the specified text, regardless of case</param>
            <remarks>Does nothing if no match is found.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.RemoveHotspot(Attachmate.Reflection.Emulation.OpenSystems.Hotspot)">
            <summary>
            Removes a hotspot with the specified characteristics from the currrent hotspot map. 
            </summary>
            <param name="hotspot">The hotspot to remove</param>
            <remarks>Does nothing if no match is found.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.Contains(System.String,System.Boolean)">
            <summary>
            Gets a value indicating whether there is a hotspot with the specified text in the current hotspot map.
            </summary>
            <param name="hotspotText">The hotspot text</param>
            <param name="caseSensitive">Whether to look for hotspots with the specified text, regardless of case</param>
            <returns>True if there is a hotspot with the specified text in the current hotspot map, false if not</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.Save">
            <summary>
            Saves changes to current hotspots map. If the current hotspots map (identified by the HotspotsMap property)
            resides in the installation directory and cannot be written to, the map is saved to the current user's Hotspots Maps subfolder
            underneath the Reflection folder, using the terminal session name as the hotspot map filename. 
            </summary>
            <returns>One of the ReturnCode enumerated values, unless an exception has been thrown</returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the hotspots map.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the hotspots map.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.SaveAs(System.String)">
            <summary>
            Saves current hotspots map contents to a file.
            </summary>
            <param name="pathName">The path to the new hotspots map file</param>
            <returns>One of the ReturnCode enumerated values</returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the hotspots map.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the hotspots map.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.HotSpots.ApplyCurrentHotspots">
            <summary>Sends and applies the current hotspot map contents to the host session.</summary>
            <returns>One of the ReturnCode enumeration values</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.HotspotsMouseButtonOption">
            <summary>
            Specifies options for mouse button to use when invoking hotspots
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotsMouseButtonOption.Left">
            <summary>
            Left mouse button
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotsMouseButtonOption.Right">
            <summary>
            Right mouse button
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotsMouseButtonOption.Middle">
            <summary>
            Middle mouse button
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.HotspotStyleOption">
            <summary>
            Specifies options for how hotspots appear on the screen
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotStyleOption.Button">
            <summary>
            Hotspot appears as a push button.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.HotspotStyleOption.Invisible">
            <summary>
            Hotspots are active but not visible
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmBackspace">
            <summary>
            Indicates what the BACKSPACE key does in a IBM 3151 session. 
            </summary>
            <remarks>
            Options are described in pairs that indicate the unshifted and shifted states. For example, the value 
            BackspaceBackspace indicates that both BACKSPACE and SHIFT+BACKSPACE send the Backspace function.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmBackspace.BackspaceDelete">
            <summary>
            Both BACKSPACE and SHIFT+DELETE send the Backspace function.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmBackspace.DeleteBackspace">
            <summary>
            Both DELETE and SHIFT+BACKSPACE send the Backspace function.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmBackspace.DeleteCancel">
            <summary>
            Both DELETE and SHIFT+CANCEL send the Backspace function.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmBackspace.BackspaceBackspace">
            <summary>
            Both BACKSPACE and SHIFT+BACKSPACE send the Backspace function.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmEnterKeyOption">
            <summary>
            Indicates what the Enter key does in a IBM 3151 terminal session (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmEnterKeyOption.Return">
            <summary>
            Operates as a Return key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmEnterKeyOption.Send">
            <summary>
            Operates as a Send key.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmInsertionOption">
            <summary>
            Indicates what the Insert key does in a IBM 3151 terminal session (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmInsertionOption.InsertSpace">
            <summary>
            Inserts a space.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmInsertionOption.ModeToggle">
            <summary>
            Switches insert mode on and off.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmPrintCharactersOption">
            <summary>
            Indicates how characters print in a IBM 3151 emulation (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmPrintCharactersOption.National">
            <summary>
            Prior to printing, the following characters are converted to spaces: linedraws; superscripts and subscripts;
            field and character attributes; reverse question marks; send marks; and control characters (0 to 31, and 127).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmPrintCharactersOption.All">
            <summary>
            Prior to printing, escape sequences initialize the print device and characters are translated.
            </summary>
            <remarks>
            The following character translations occur:
            <list type="bullet">
            <item><description>Trailing nulls are omitted.</description></item>
            <item><description>Control characters 0 to 31 are translated to spaces.</description></item>
            <item><description>Field attributes are sent as a pair of character attributes.</description></item>
            <item><description>Character attributes are sent prior to the associated character if the attribute changed between characters.</description></item>
            <item><description>Reverse question marks are sent as spaces.</description></item>
            <item><description>A sent mark is sent as a null.</description></item>        
            </list>
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmPrintCharactersOption.CharOnly">
            <summary>
            Only ASCII characters between 32 and 126 are sent to the printer.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmprintLineTerminatorOption">
            <summary>
            Indicates which end line characters to use when printing in a IBM 3151 emulation (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmprintLineTerminatorOption.CR">
            <summary>A carriage return is appended to each line.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmprintLineTerminatorOption.CRLF">
            <summary>Both a carriage return and a line feed are appended to each line.</summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmprintPageTerminatorOption">
            <summary>
            Indicates which end page character to use when printing in a IBM 3151 emulation (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmprintPageTerminatorOption.NONE">
            <summary>No end character is appended to the page end.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmprintPageTerminatorOption.FF">
            <summary>A form feed character is appended to the page end.</summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmReceivedCROption">
            <summary>
            Indicates how a received carriage return is interpreted in a IBM 3151 terminal session 
            (TerminalType = rcIBM3151).    
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmReceivedCROption.CR">
            <summary>A received carriage return is interpreted as a carriage return.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmReceivedCROption.CRLF">
            <summary>A received carriage return is interpreted as a carriage return followed by a line feed.</summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmReceivedLFOption">
            <summary>
            Indicates how a line feed is interpreted in a IBM 3151 terminal session (TerminalType = IBM3151).    
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmReceivedLFOption.LF">
            <summary>A received line feed is interpreted as a line feed.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmReceivedLFOption.LFCR">
            <summary>A received carriage return is interpreted as a line feed followed by a carriage return.</summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmReturnKeyOption">
            <summary>
            Indicates what the RETURN key does in a IBM 3151 terminal session (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmReturnKeyOption.Newline">
            <summary>
            Transmits a new line.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmReturnKeyOption.Field">
            <summary>
            Moves to the next field.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmSendKeyOption">
            <summary>
            Indicates what the SEND key does in a IBM 3151 terminal session (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmSendKeyOption.Page">
            <summary>
            Sends the page.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmSendKeyOption.Line">
            <summary>
            Sends the current line.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmTabKeyOption">
            <summary>
            Indicates what the TAB key does in a IBM 3151 terminal session (TerminalType = rcIBM3151).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmTabKeyOption.Column">
            <summary>
            Moves to the next tab stop.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmTabKeyOption.Field">
            <summary>
            Moves to the next unprotected field (formatted screen).
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IbmTurnAroundCharOption">
            <summary>
            The definition of the LineTurnAround (LTA) character for IBM 3151 terminal sessions 
            (TerminalType = rcIBM3151).    
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmTurnAroundCharOption.ETX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmTurnAroundCharOption.CR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmTurnAroundCharOption.EOT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.IbmTurnAroundCharOption.DC3">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort">
            <summary>
            ConnectionSettingsComSerialPort interface.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.Baud">
            <summary>
            Sets the baud rate. 
            </summary>
            <remarks>
            The available settings are Baud300, Baud600, Baud1200, Baud1800, Baud2400, Baud3600, Baud4800, Baud7200, 
            Baud9600, Baud14400, Baud19200, Baud38400, Baud57600, Baud115200, DEFAULT.
            These values are defined in Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.
            </remarks>
            <value>
            The default setting for connection types COM1 through COM8 is Baud9600.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.CharDelay">
            <summary>
            Gets or sets the time delay (in milliseconds) between characters.
            </summary>
            <value>
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.CheckParity">
             <summary>
             Gets or sets the parity check state on all received characters, when set to true (the default) 
             and Parity is other than 8/None.
             </summary>
            
             <value>
             This value can be changed during an open connection.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.CTSrequired">
            <summary>
            When set to true, Reflection transmits only if the RS-232 Clear To Send (CTS) signal is active. 
            </summary>
            <remarks>
            Set the value to false (the default) if ReceivedPacing is set to Hardware.
            </remarks>
            <value>
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.DropDTROnDisconnect">
            <summary>
            When set to true (the default), the Data Terminal Ready (DTR) signal is dropped when the connection closes.
            </summary>
            <remarks>
            Set this value to false to keep the DTR signal high even after closing the connection or quitting Reflection.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.DSRrequired">
            <summary>
            When set to true, Reflection transmits data only if the RS-232 Data Set Ready (DSR) signal is active.
            </summary>
            <remarks>
            Set this value to false (the default) if ReceivePacing is set to Hardware.</remarks>
            <value>
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.EnhancedSerialDataCom">
            <summary>
            Specifies the Reflection enhanced communications driver (when set to true). 
            </summary>
            <remarks>
            Set this value to false (the default) if you have a third-party driver that must use the standard 
            Windows data communications driver (Comm.drv).
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.LineDelay">
            <summary>
            Gets or sets the time delay (in tenths of a second) between lines.
            </summary>
            <value>
            The default value is 0.
            The range of values is 0 - 255 (tenths of a second).
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.ReceivePacing">
            <summary>
            Gets or sets the type of flow control to use for receiving data from the host.
            </summary>
            <value>
            The available settings are None, Hardware, and XonXoff (the default).
            These settings are defined in Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption.
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.StopBits">
            <summary>
            Gets or sets the number of stop bits that follow each character during data transmission.
            </summary>
            <value>
            The available settings are One and Two.  
            These settings are defined in Attachmate.Reflection.Emulation.OpenSystems.StopBitsOption.
            
            The default value is One. 
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.SerialPort">
            <summary>
            Gets or sets the COM serial port number.
            </summary>
            <remarks>
            Setting this property resets all connection settings for this connection type to their default values.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.TransmitPacing">
            <summary>
            Gets or sets the type of flow control to use for transmitting data to the host.
            </summary>
            <value>
            The available settings are: XonXoff, None, and Hardware.
            These settings are defined in Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption.
            
            XonXoff is the default setting for VT, UNIX and OpenVMS, and ReGIS Graphics emulation. 
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.XoffRepeat">
            <summary>
            Specifies the number of characters that Reflection accepts after receiving an XOFF and before sending another XOFF.
            </summary>
            <value>
            The default value is 32. The range is 0 - 9999.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsComSerialPort.XoffTimeout">
            <summary>
            Specifies the length of time (in seconds) to wait after sending data and before Reflection sends an XOFF character.
            </summary>
            
            <value>
            The default value is 10 seconds. The range is 0 - 9999.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu">
            <summary>
            Provides methods and properties for interacting with a terminal session's context menu
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.Count">
            <summary>
            Gets a value indicating how many menu items (including separators) are in this menu.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.MappingCollection">
            <summary>
            Gets a value indicating the set of menu items comprising this context menu.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.Name">
            <summary>
            Gets a value indicating the descriptive name of this menu.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.AddSeparator">
            <summary>
            Adds a new separator to the end of the menu.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.AddMenuItem(Attachmate.Reflection.Emulation.OpenSystems.ContextMenuItem)">
            <summary>
            Adds a new context menu item to the end of the menu.
            </summary>
            <param name="item">A new context menu item</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.RemoveItem(System.Int32)">
            <summary>
            Removes a specified context menu item at a given position within the menu
            </summary>
            <param name="index">Identifies the position within the menu at which to remove a menu item.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.ClearAllItems">
            <summary>
            Removes all items from the context menu, resulting in an empty menu.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenu.GetContextMenuItem(System.String)">
            <summary>
            Returns a context menu item with the specified name.
            </summary>
            <param name="name">The name of the menu item, as it is displayed within the menu. 
            This applies only to items of type ContextMenuItemType.MenuItem</param>
            <returns>A ContextMenuItem with the specified name, or null if no such item exists.</returns>
            <remarks>This method cannot be used to return separator menu items, as they cannot be uniquely identified.</remarks>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus">
            <summary>
            Defines properties and operations on the collection of context menus currently defined in the session document
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.Parent">
            <summary>
            Gets a value indicating the parent object of this object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.Count">
            <summary>
            Gets a value indicating how many ContextMenus are defined for this session document
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.DefaultContextMenu">
            <summary>
            Gets or sets the default context menu for this session document
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.Add(Attachmate.Reflection.Emulation.OpenSystems.IContextMenu)">
            <summary>
            Adds (or updates an existing) context menu to this session document 
            </summary>
            <param name="menu">The context menu to add</param>
            <returns>True if the add or update was successful, false if an error occurred</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.Remove(System.String)">
            <summary>
            Removes a context menu from this session document
            </summary>
            <param name="name">The descriptive name of the menu to remove</param>
            <returns>True if the remove was successful, false if the menu name could not be found or an error occurred</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.Contains(System.String)">
            <summary>
            Returns a value indicating whether a context menu of a given name exists in this session document.
            </summary>
            <param name="name">The descriptive name of the menu</param>
            <returns>True if the menu exists, false if it does not</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.ItemByName(System.String)">
            <summary>
            Returns the context menu associated with the specified descriptive name.
            </summary>
            <param name="name">The descriptive name of the menu</param>
            <returns>The context menu associated with <b>name</b>, or null if it does not exist</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.ItemByIndex(System.Int32)">
            <summary>
            Returns the context menu at the specified index in the session document's context menu collection
            </summary>
            <param name="index">The position within the collection to return a menu for.</param>
            <returns>The context menu at the specified position</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index argument is invalid.</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.Clear">
            <summary>
            Removes all non-default context menus from the session document
            </summary>
            <remarks>NOTE: the default menu is never removed.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IContextMenus.Items">
            <summary>
            Returns the collection of context menus currently defined for the session document
            </summary>
            <returns>An array of <b>ContextMenu</b> items currently defined in the session document</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter.CharCode">
            <summary>
            Gets the character code for this screen character.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter.IsPlain">
            <summary>
            Plain text.  No attributes defined.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter.IsBlinking">
            <summary>
            Blink attribute is set.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter.IsReverse">
            <summary>
            Reverse/inverse video attribute is set.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter.IsUnderline">
            <summary>
            Underline attribute is set.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter.IsBold">
            <summary>
            Bold attribute is set.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreenCharacter.IsNoCharacter">
            <summary>
            No character exists at this position.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork">
            <summary>
            Connection settings for best network.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.NSVTPort">
            <summary>
            The port number to use when establishing the VT-MGR connection.
            </summary>
            <remarks>
            Port 1570 is used for streams; port 1537 is the standard port. 
            </remarks>
            <value>
            You can set this to any integer value between 1 and 65535. 
            The default is 0, which lets the NSVT protocol module choose the port. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetBinary">
            <summary>
            Gets or sets whether Reflection always requests a binary mode connection (an 8-bit data path). 
            </summary>
            <remarks>
            A binary connection is required for some types of data transfers, such as Xmodem file transfers.
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetBreak">
            <summary>
            Gets or sets whether CTRL+BREAK sends the Telnet Break command or the Telnet Interrupt Process command. 
            </summary>            
            <value>
            The default value is false; CTRL+BREAK sends a Telnet Interrupt Process command.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetEcho">
            <summary>
            Controls how Reflection responds to a remote echo from a Telnet host.
            </summary>
            <value>
            The default value is Auto.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetNegotateInitOptions">
            <summary>
            Specifies whether certain connection options, including whether to always request a binary mode connection, 
            are negotiated when the Telnet connection is established.
            </summary>
            <value>
            The default value is false (does not negotiate Telnet options).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetLFAfterCR">
            <summary>
            Specifies whether Reflection sends a linefeed character whenever a carriage return is sent.
            </summary>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetLineMode">
            <summary>Line mode and faux line mode for Telnet connections are supported.</summary>
            <remarks>Line mode allows the emulator to store characters in a buffer until a carriage return is entered. Then, characters are sent to the host one packet at a time
            (instead of sending a single character as an individual packet).
            <para>Line mode is useful for long network delays and may reduce costs on networks that charge on a per packet basis.</para></remarks>
            <value>
             The default value is Never.
             This value cannot be changed if the connection is open.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetLocation">
            <summary>The TELNET SEND-LOCATION option (specified in RFC 779) is supported.</summary>
            <remarks>
            TelnetLocation sends the user's location or other information to a Telnet host. 
            </remarks>
            <value>
            By default, this value is not assigned. It appears among the keywords listed by the ConnectionSettings property 
            only you have assigned it a value. 
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetPort">
            <summary>
            Gets or sets the port to use to establish the Telnet connection. 
            </summary>
            <value>
            The default value is 23 (the standard Telnet port number).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetSetWindowSize">
            <summary>
            When this value is true, Reflection sends the number of rows and columns to the Telnet host whenever they change, enabling 
            the Telnet host to control the cursor if the window size changes. 
            </summary>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetTermDefault">
            <summary>
            The terminal type string that is sent as a backup to the Telnet server if the server requests this information and doesn't 
            recognize the current value set for TelnetTermType. 
            </summary>
            <remarks>
            During negotiations, some hosts that can successfully connect using the preferred terminal type skip this value 
            and connect using the backup value specified by TelnetTermDefault. To correct this behavior, set 
            TelnetTermDefault to an empty string ("").
            </remarks>
            <value>
            The default value for UNIX and OpenVMS, and ReGIS Graphics is "VT100,DEC-VT100".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetTermType">
            <summary>
            The terminal type string that is sent to the Telnet server if the server requests this information during the suboption
            TERM negotiation stage of the connection.
            </summary>
            <value>
            The default values are "VT100" for VT emulation and "VT220" for UNIX and OpenVMS, and ReGIS Graphics.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetTrace">
            <summary>
            When set to true, Reflection writes the negotiation process for the various Telnet options to the screen. 
            </summary>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.TelnetUseEmulatorTermType">
            <summary>
            When this value is false, Reflection uses the current terminal setting as determined by the value of TelnetTermType when the 
            server requests the terminal type.
            </summary>
            <remarks>
            When this value is true, Reflection uses the terminal setting as determined by the value of the DAResponse property.
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectingSettingsBestNetwork.Timeout">
            <summary>
            Specifies the time (in milliseconds) during which Reflection attempts to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined by your Windows operating system.
            
            The timeout period begins after the host name is resolved. 
            </remarks>
            <value>
            The default value is 0. The range of values is 0 - 65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon">
            <summary>
            Defines Properties that get and set connection settings common to all types of conections.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.ConnectMacro">
            <summary>
            Gets or specifies the name of a macro that runs automatically after a
            connection is established.
            </summary>
            <remarks>
            You can use the ConnectMacroData property to specify information to be passed to this macro.
            A connect macro runs after the terminal has successfully made a connection to the host and should not 
            include session setup information.       
            </remarks>
            <value>
            The default value is "".
            This string can be up to 260 characters long.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.ConnectMacroData">
            <summary>
            Gets or specifies a string that passes information to a connect macro.
            When the connect macro runs, the value of MacroData is set equal to the value of ConnectMacroData.
            </summary>
            <remarks>
            The value of the MacroData property changes whenever you pass macro data
            to a macro. (If you run a macro using the Macros dialog box, macro data is
            specified in the Macro data box. If you run a macro using the RunMacro method,
            macro data is specified with the second argument.) The ConnectMacroData
            property stores a fixed value that sets the value of MacroData whenever your
            connect macro runs. 
            </remarks>
            <value>
            The default value is "".
            This string can be up to 260 characters long.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.DisconnectScriptArgs">
            <summary>
            <c>Gets</c> or <c>sets</c> the text string that contains the arguments to pass to a disconnect script.
            </summary>
            <value>
            The default value is "".
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.DisconnectScriptFile">
            <summary>
            Gets or sets the text string that contains the name of a Reflection Basic script to run when the connection is closed. 
            </summary>
            <value>
            The default value is "".
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.ExitAllowed">
            <summary>
            When set to <c>true</c>, users can quit Reflection and use the Disconnect command while connected to a host. 
            </summary>
            <remarks>
            When set to <c>false</c>, the Exit and Disconnect commands are disabled and users must quit all 
            active host applications and log off to terminate host connections.
            </remarks>
            <value>
            The default value is true.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.ExitOnDisconnect">
            <summary>
            When set to <c>true</c>, Reflection quits automatically when you disconnect from the host.
            </summary>
            <value>
            The default value is false. 
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.Parity">
            <summary>
            <c>Gets</c> or <c>sets</c> the type of parity on the connection.
            </summary>
            <value>
            The default value is Parity8None. 
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.ScriptArgs">
            <summary>
            <c>Gets</c> or <c>sets</c> the text string that contains arguments to pass to a connect script.
            </summary>
            <value>
            The default value is "". 
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.ScriptFile">
            <summary>
            <c>Get</c> or <c>set</c> the text string that contains the name of a Reflection Basic script 
            to run when the connection is established (for example, a logon script). 
            </summary>
            <value>
            The default value is "". 
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsCommon.ScriptType">
            <summary>
            <c>Gets</c> or <c>sets</c> the type of script file, either Reflection Basic (RBS) or Reflection Command Language (RCL).
            </summary>
            <value>
            The default value is Reflection Basic (RBS).
            </value>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem">
            <summary>
            Defines Properties that get and set connection settings for Modem connections.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.Baud">
            <summary>
            Baud rate setting.
            </summary>
            <remarks>
            The available settings are Baud300, Baud600, Baud1200, Baud1800, Baud2400, Baud3600, Baud4800, Baud7200, 
            Baud9600, Baud14400, Baud19200, Baud38400, Baud57600, Baud115200, and DEFAULT.
            These values are defined in Attachmate.Reflection.Emulation.OpenSystems.BaudRateOption.
            </remarks>
            <value>
            The default setting for connecton type MODEM is Default.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.CharDelay">
            <summary>
            Gets or sets the time delay (in milliseconds) between characters.
            </summary>
            <value>
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.CheckParity">
            <summary>
            Gets or sets the parity check state. 
            </summary>
            <remarks>
            When set to true and Parity is other than 8/None, Reflection checks parity on all received characters.
            </remarks>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.CTSrequired">
            <summary>
            When set to true, Reflection does not transmit unless the RS-232 Clear To Send (CTS) signal is active. 
            </summary>
            <remarks>
            Set this keyword to false if ReceivedPacing is set to Hardware.
            </remarks>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.DropDTROnDisconnect">
            <summary>
            When set to true, the Data Terminal Ready (DTR) signal is dropped when the connection is closed.
            </summary>
            <remarks>
            Set this value to false, to keep the DTR signal after closing the connection or quitting Reflection.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.DSRrequired">
            <summary>
            When set to true, Reflection does not transmit data unless the RS-232 Data Set Ready (DSR) signal is active.
            </summary>
            <remarks>
            Set this value to false if ReceivePacing is set to Hardware.
            </remarks>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.LineDelay">
            <summary>
            Time delay (in tenths of a second) between lines.
            </summary>
            <value>
            The default value is 0.
            The range of values is 0 - 255 (tenths of a second).
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemAreaCode">
            <summary>
            A string that specifies the area code (or city code) of the number being dialed.
            </summary>
            <value>
            The default value is the current area code as configured using the Windows Control Panel.
            The string can be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemCountryName">
            <summary>
            A string that specifies the country of the number being dialed. 
            </summary>
            <remarks>
            To see possible values, refer to the Country Code list in the Connection Settings dialog box.
            If the country code name you choose for this value contains spaces, enclose the string in quotation marks.
            </remarks>
            <value>
            The default value is the current country as configured using the Windows Control Panel.  This string can
            be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemInitString">
            <summary>
            The modem command string that initializes the modem.
            </summary>
            <value>
            The default value (DEFAULT) uses the string for the selected modem name.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemLocation">
            <summary>
            A string that indentifies the current modem location. Modem locations are configured using Control Panel modems.
            </summary>
            <remarks>
            If the modem location name you choose includes spaces, enclose the string in quotation marks.
            </remarks>
            <value>
            The default value is the current modem location as configured using the Windows Control Panel.  This string can
            be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemMode">
            <summary>
            Identifies the operating mode for the modem.  
            </summary>
            <remarks>
            The available modes are Call, AutoAnswer, Answer, Direct and DialBack.
            Their values are defined in Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption.
            </remarks>
            <value>
            The default value is ModemModeOption.Call.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemName">
            <summary>
            The text string that identifies the type of modem being used.
            </summary>
            <remarks>
            A default value is configured automatically based on your current modem configuration.
            </remarks>
            <value>
            This string can be up to 64 characters long.
            
            This value cannot be changed if the connection is open.
            </value>>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemPhoneNumber">
            <summary>
            The phone number to dial.
            </summary>
            <remarks>
            If you use the Control Panel modems with ModemUseDialingRules set to true (the default configuration),
            Reflection automatically adds the appropriate prefix to the specified phone number, based on the current values
            of ModemAreaCode, ModemCountryName and ModemLocation.
            </remarks>
            <value>
            The default value is "".  This string can be up to 64 characters long.
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemShowDisconnectErrors">
            <summary>
            Determines whether the "Remote Party Disconnected" error message appears when the modem connection is dropped.
            </summary>
            <remarks>
            Set this value to false to ensure that fully scripted modem connections 
            can run without user interaction.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ModemUseDialingRules">
            <summary>
            When set to true, the TAPI modem dialer adds the appropriate prefix to the number you are dialing,
            based on the current values of ModemAreaCode, ModemCountryName, and ModemLocation.  
            </summary>
            <remarks>
            When set to false, the
            modem dialer dials the phone number exactly as specified by ModemPhoneNumber.  
            
            
            Changing this value is 
            the equivalent to changing the "Use Country code and City code" setting in the Connection Settings dialog box.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.ReceivePacing">
            <summary>
            Type of flow control to use for receiving data from the host.
            </summary>
            <value>
            The available settings are XonXoff, None, Hardware.
            These settings are defined in Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption.
            
            The default value is XonXoff.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.StopBits">
            <summary>
            The number of stop bits that follow each character during data transmission.
            </summary>
            <value>
            The available settings are One and Two.  
            These settings are defined in Attachmate.Reflection.Emulation.OpenSystems.StopBitsOption.
            
            The default value is One. 
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.TransmitPacing">
            <summary>
            Type of flow control to use for transmitting data to the host.
            </summary>
            <remarks>
            The available settings are XonXoff, None, Hardware.
            These settings are defined in Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption.
            </remarks>
            <value>
            The default setting for VT, Unix and OpenVMS, and ReGIS Graphics emulation is XonXoff.
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.XoffRepeat">
            <summary>
            The number of characters that Reflection accepts after receiving an XOFF and before sending another XOFF.
            </summary>
            <value>
            The default value is 32. The range is 0 - 9999.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsModem.XoffTimeout">
            <summary>
            The length of time (in seconds) to wait after sending data before Reflection sends an XOFF character.
            </summary>
            <value>
            The default value is 10 seconds. The range is 0 - 9999.
            
            This value can be changed during an open connection.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsRLogin">
            <summary>
            Defines Properties that get and set Rlogin connection settings including:
            user names, port, terminal types, and timeout values.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsRLogin.LowerCaseUserName">
            <summary>
            Specifies whether Reflection converts your user name to lowercase letters.
            </summary>
            <value>
            The default value is false. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsRLogin.RloginPort">
            <summary>
            The protocol port used to establish the Rlogin connection.
            </summary>
            <value>
            The default value is 513.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsRLogin.RloginTermType">
            <summary>
            The terminal type used during Rlogin connection negotiations to set terminal characteristics for the session.
            </summary>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsRLogin.Timeout">
            <summary>
            Specifies the time (in milliseconds) during which Reflection attempts to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined by your Windows operating system.
            
            The timeout period begins after the host name is resolved. 
            </remarks>
            <value>
            The default value is 0. The range of values is 0 - 65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsRLogin.UsePCUserName">
            <summary>
            Specifies whether Reflection uses the current Windows user name for Rlogin connections. 
            </summary>
            <remarks>
            When set to false, 
            Reflection uses the name specified in the User name box in the Connection Settings dialog box 
            (or with the UserName Connection keyword). 
            When set to true, Reflection connects using the Windows user name and disables the User name specified 
            in the Connection Settings dialog box.
            </remarks>
            <value>
            The default is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsRLogin.UserName">
            <summary>
            A string that specifies the user name. 
            </summary>
            <remarks>
            For Telnet connections, this setting is relevant only if Authentication is set to true. 
            </remarks>
            <value>
            For Rlogin connections, the Windows user name is the default value.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell">
            <summary>
            Defines Properties that get and set connections settings for Secure Shell connections.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.LowerCaseUserName">
            <summary>
            Specifies whether Reflection converts your user name to lowercase letters.
            </summary>
            <value>
            The default value is False. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHAllow2048BitDSAKeys">
            <summary>
            Gets or sets a value indicating whether SSH connections should allow 2048-bit keys in FIPS mode. When this value is true, 
            a Secure Shell connection will allow a non-FIPS 2048 bit host key verification outside the FIPS boundry.
            </summary>
            <exclude/>
            <value>
            The default value is False.
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHConfigScheme">
            <summary>
            Specifies the SSH config scheme settings to use for making a Secure Shell connection.
            </summary>
            <remarks>
            Reflection uses the SSH config scheme settings when you make a Secure Shell connection. 
            If a SSH config scheme is not specified, Reflection uses a SSH config scheme that matches the current host name 
            (if one exists) or the default Secure Shell settings (if a matching SSH config scheme doesn't exist).
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHPort">
            <summary>
            The protocol port to use to establish the Secure Shell connection.
            </summary>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHShowBannerDialog">
            <summary>
            Specifies whether Reflection displays banner information in a dialog box 
            before completing the Secure Shell connection. 
            </summary>
            <remarks>
            This setting is relevant only if your host is configured to display banners.
            Banner display can be surpressed by setting the Secure Shell Logging Level to Quiet.
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHSetHostWindowSize">
            <summary>
            When this value is true, Reflection sends the number of rows and columns to the host whenever they change, 
            enabling the host to control the cursor if the window size changes. 
            </summary>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHTermDefault">
            <summary>
            The terminal type string that is sent as a backup to the Telnet server if the server requests this information and doesn't 
            recognize the current value set for SSHTermType.
            </summary>
            <remarks>
            During negotiations, some hosts that can successfully connect using your 
            preferred terminal type skip this value and connect using the backup value specified by SSHTermDefault. 
            To correct this behavior, set SSHTermDefault to an empty string ("").
            </remarks>
            <value>
            The default value for UNIX and OpenVMS, and ReGIS 
            Graphics emulations is "VT100,DEC-VT100".       
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHTermType">
            <summary>
            The terminal type string that is sent to the server if the server requests this information during the suboption TERM 
            negotiation stage of the connection.
            </summary>
            <remarks>
            The default values are "VT100" for VT emulation, and "VT220" for UNIX and OpenVMS, and ReGIS Graphics emuations.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.SSHTermWindowAuth">
            <summary>
            When this value is true, a Secure Shell connection will use the terminal window for the user authentication, 
            displaying the server banner and checking the host key (Normally, all these are done in separate dialogs).  
            This log-in behavior is similar to telnet and allows for scripting.
            </summary>
            <remarks>
            </remarks>
            <value>
            The default value is False.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.Timeout">
            <summary>
            Specifies the time (in milliseconds) during which Reflection attempts to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined by your Windows operating system.
            <para>
            The timeout period begins after the host name is resolved. </para>
            </remarks>
            <value>
            The default value is 0. The range of values is 0-65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.UsePCUserName">
            <summary>
            Specifies whether Reflection uses the current Windows user name for Rlogin connections. 
            </summary>
            <remarks>
            When set to false, Reflection uses the name specified in the User name box in the Connection Settings 
            dialog box (or with the UserName Connection keyword). 
            When set to true, Reflection connects using the Windows user name and disables User name in the Connection Settings dialog box.
            The default is false.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsSecureShell.UserName">
            <summary>
            A string that specifies the user name. 
            </summary>
            <remarks>
            For Telnet connections, this setting is relevant only if Authentication is set to true. 
            </remarks>
            <value>
            For Rlogin connections, the Windows user name is the default value.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet">
            <summary>
            Defines Properties that get and set settings for telnet connections.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.Authentication">
            <summary>
            This option enables Reflection to use Kerberos authentication.  
            </summary>
            <remarks>
            To configure Kerberos connections, use these settings: Authentication, Encryption, MutualAuthentication, 
            Principal, Realm, RenewableTicket, TicketForwarding.
            <para>Do not set Authentication to true if you use Kerberos authentication in conjuction with Secure Shell 
            (ConnectionType = SECURE SHELL). This and other configuration information from the Secure Shell Settings dialog box 
            is saved in the Secure Shell configuration file.</para>
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.CacheName">
            <summary> 
            A string that specifies the path and filename of a credentials cache. 
            </summary>
            <remarks>
            Use this setting if you have already connected a Reflection session to 
            a kerberized host and want to start an additional session that connects to a different kerberized host.
            </remarks>
            <value>
            The default cache name is used if no other cache name is specified. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.Encryption">
            <summary>
            Specifies whether to encrypt the data transmitted between the host and the Kerberos client during Kerberos sessions. 
            </summary>
            <remarks>
            When this setting is false, 
            the authentication (login) process is encrypted, but the subsequent data transmission is not. 
            Encrypting the data stream decreases transmission speed. 
            </remarks>
            <value>
            The default value is false.
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.MutualAuthentication">
            <summary>
            Specifies whether to enable mutual authentication during Kerberos sessions. 
            </summary>
            <remarks>
            When this setting is true, the service must authenticate itself to 
            the principal. 
            </remarks>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.PKIDisableCRL">
            <summary>
            Specifies whether Reflection checks for certificate revocation when validating host certificates 
            for SSL/TLS connections. 
            </summary>
            <remarks>
            Select this setting to disable CRL (Certificate Revocation List) checking. 
            
            </remarks>
            <value>
            The default value of this setting is based on the current Internet Explorer setting for CRL checking. 
            To view or change this setting, start Internet Explorer, and select Tools > Internet Options > Advanced. 
            Under Security, view the "Check for server certificate revocation" setting.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.Principal">
            <summary>
            Specifies the principal for which you want to obtain Kerberos credentials. 
            </summary>
            <remarks>
            A full principal name includes both the principal name and the
            realm name, in the format [principal]@[realm name]. Use Realm to specify the realm.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.Realm">
            <summary>
            Specifies the the realm portion of the full principal name. 
            </summary>
            <remarks>
            A full principal name includes both the principal name and the realm name, 
            in the format [principal]@[realm name]. Use Principal to specify the principal.
            </remarks>
            <value>
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.RenewableTicket">
            <summary>
            Specifies the time (in seconds) for which Kerberos Ticket Granting Tickets (TGT) are renewable. 
            </summary>
            <value>
            The default value is "604,800" (7 days).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetBinary">
            <summary>
            Gets or sets whether Reflection always requests a binary mode connection (an 8-bit data path). 
            </summary>
            <remarks>
            A binary connection is required for some types of data transfers, such as Xmodem file transfers.
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetBreak">
            <summary>
            Gets or sets whether CTRL+BREAK sends the Telnet Break command or the Telnet Interrupt Process command. 
            </summary>            
            <value>
            The default value is false; CTRL+BREAK sends a Telnet Interrupt Process command.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetEcho">
            <summary>
            Controls how Reflection responds to a remote echo from a Telnet host.
            </summary>
            <value>
            The default value is Auto.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetNegotateInitOptions">
            <summary>
            Specifies whether certain connection options, including whether to always request a binary mode connection, 
            is negotiated when the Telnet connection is established.
            </summary>
            <value>
            The default value is false (does not negotiate Telnet options).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetLFAfterCR">
            <summary>
            Specifies whether Reflection sends a linefeed character whenever a carriage return is sent.
            </summary>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetLineMode">
            <summary>Line mode and faux line mode for Telnet connections are supported.</summary>
            <remarks>
             Line mode allows Reflection to store characters in a buffer until a carriage return is entered.
             Then, characters are sent to the host one packet at a time (instead of 
             sending each character as an individual packet). 
             
             <para>Line mode is useful for long network delays and may reduce costs on networks that charge on a per packet basis. 
             The default value is Never.</para>
             This value cannot be changed if the connection is open.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetLocation">
            <summary>The TELNET SEND-LOCATION option (specified in RFC 779) is supported.</summary>
            <remarks>
            TelnetLocation sends the user's location, 
            or other information, to a Telnet host. 
            </remarks>
            <value>
            By default, this value is not assigned. It appears among the keywords listed by the ConnectionSettings property 
            only if you have assigned it a value. 
            <para>This value cannot be changed if the connection is open.</para></value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetPort">
            <summary>
            Gets or sets the port to use to establish the Telnet connection. 
            </summary>
            <value>
            The default value is 23 (the standard Telnet port number).
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetSetWindowSize">
            <summary>
            When this value is true, Reflection sends the number of rows and columns to the Telnet host whenever they change, enabling 
            the Telnet host to control the cursor if the window size changes. 
            </summary>
            <value>
            The default value is true.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetTermDefault">
            <summary>
            The terminal type string that is sent as a backup to the Telnet server 
            if the server requests this information and doesn't 
            recognize the current value set for TelnetTermType. 
            </summary>
            <remarks>
            During negotiations, some hosts that can successfully connect using your preferred terminal type skip this value 
            and connect using the backup value specified by TelnetTermDefault. To correct this behavior, set 
            TelnetTermDefault to an empty string ("").
            </remarks>
            <value>
            The default value UNIX and OpenVMS, and ReGIS Graphics emulations is "VT100,DEC-VT100".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetTermType">
            <summary>
            The terminal type string that is sent to the Telnet server if the server requests this information during the suboption
            TERM negotiation stage of the connection.
            </summary>
            <value>
            The default values are "VT100" for VT emulation and "VT220" for UNIX and OpenVMS, and ReGIS Graphics emulations.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetTrace">
            <summary>
            When set to true, Reflection writes the negotiation process for the various Telnet options to the screen. 
            </summary>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TelnetUseEmulatorTermType">
            <summary>
            When this value is false, Reflection uses the current terminal setting as determined by the value of TelnetTermType 
            when the server requests the terminal type.
            </summary>
            <remarks>
            When this value is true, Reflection uses the terminal setting as determined by the value of the DAResponse property 
            when the server requests the terminal type.
            </remarks>
            <value>
            The default value is false.
            
            This value cannot be changed if the connection is open.
            </value>    
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.Timeout">
            <summary>
            Specifies the time (in milliseconds) during which Reflection attempts to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined by your Windows operating system.
            The timeout period begins after the host name is resolved.  
            </remarks>
            <value>
            The default value is 0. The range of values is 0-65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TLSCertifyHostname">
            <summary>
            Specifies whether host name matching is required when validating host certificates for SSL/TLS connections.
            </summary>
            <remarks>
            When this setting is true (the default), the host name you configure in Reflection must exactly 
            match one of the host names in the CommonName or the SubjectAltName field of the certificate.
            </remarks>
            <value>
            The default value is true.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TLSStrength">
            <summary>
            Specifies the minimum allowable level of encryption for SSL/TLS connections. 
            </summary>
            <remarks>
            The connection fails if this level isn't provided. 
            This setting is only relevant when UseTLS is True. 
            When this setting is 0, Reflection negotiates with the host system 
            to choose a level of encryption that's supported by both the host and the PC.
            </remarks>
            <value>
            The default value is 0.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.UserName">
            <summary>
            A string that specifies the user name. 
            </summary>
            <remarks>
            For Telnet connections, this setting is relevant only if Authentication is set to true. 
            </remarks>
            <value>
            For Rlogin connections, the Windows user name is the default value.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.UseSOCKS">
            <summary>
            Enables connections to a host via a SOCKS proxy server. (Available only with Reflection Network Series 
            version 6.0.) 
            </summary>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.UseTLS">
            <summary>
            Enables Secure Socket Layer (SSL) and Transport Layer Security (TLS) security protocols for this connection.
            </summary>
            <remarks>
            The level of encryption is determined by the value you set for TLSStrength.
            </remarks>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.PKIUseOCSP">
            <summary>
            Gets or sets a value indicating whether  your client session checks for certificate revocation using 
            OCSP (Online Certificate Status Protocol) responders when validating host certificates. 
            </summary>
            <value>
            The default value is false.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.TLSVersion">
            <summary>
            Gets or sets a value indicating which SSL or TLS version to use.
            </summary>
            <value>
            The default value is TLSVersion1_0.
            
            This value can be changed during an open connection.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsTelnet.SSLValidateCertChain">
            <summary>
            Gets or sets a value indicating whether certificates presented for host authentication are checked
            to determine if they are valid and signed by a trusted CA. 
            </summary>
            <remarks>CAUTION: Setting this property to false can make connections vulnerable to man-in-the-middle attacks, which could compromise the security of the
            connection.</remarks>
            <exception caption="" cref="T:System.InvalidOperationException">
            This exception is thrown when you modify this property while the Reflection or InfoConnect products are running in DoD PKI mode.
            </exception>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsVTMgr">
            <summary>
            Defines Properties that get and set settings for VT-MGR connections.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsVTMgr.HostAddress">
            <summary>
            Gets or sets the name of the host to which to connect. 
            </summary>
            <value>
            The default value is "".
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsVTMgr.NSVTPort">
            <summary>
            The port number to use when establishing the VT-MGR connection.
            </summary>
            <remarks>
            Port 1570 is used for streams; port 1537 is the standard port. 
            </remarks>
            <value>
            You can set this number to any integer value between 1 and 65535. 
            The default is 0, which lets the NSVT protocol module determine the port. 
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettingsVTMgr.Timeout">
            <summary>
            Specifies the time (in milliseconds) during which Reflection attempts to make a connection before timing out.
            </summary>
            <remarks>
            When this setting is 0 (the default), Reflection timeout behavior is determined by your Windows operating system.
            The timeout period begins after the host name is resolved.  
            </remarks>
            <value>
            The default value is 0. The range of values is 0-65535.
            
            This value cannot be changed if the connection is open.
            </value>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ImageDitherOption">
            <summary>
            Indicates the results when a 256-color image is pasted from the Clipboard to the Reflection Graphics terminal window. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ImageDitherOption.None">
            <summary>
            Pasted images are smooth in texture with distinct color boundaries.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ImageDitherOption.Full">
            <summary>
            Color boundaries are less precise, but images can have a grainy, textured appearance.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ImageDitherOption.Partial">
            <summary>
            Midway between rcNoDither and rcFullDither.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction">
            <summary>
            An action that can be mapped to an item in an input map.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.#ctor">
            <summary>
            Initializes a new instance of the InputMapAction class.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.#ctor(Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID,System.Object[])">
            <summary>Initializes a new instance of the InputMapAction class.</summary>
            <param name="actionID">The action type.</param>
            <param name="parameters">Optional parameters associated with the action. If there are no parameters needed
            for the action, null may be specified for this parameter.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.ActionID">
            <summary>
            Gets the action ID associated with this action.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.Parameters">
            <summary>
            Gets the parameters associated with this action. If there are no parameters,
            null is returned.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.VerifyActionParameters(System.Boolean)">
            <summary>
            Verify InputMapAction parameters
            </summary>
            <param name="checkSystemTypesOnly">Check only system types</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.GetSchema">
            <summary>
            Returns an in-memory representation of the XML schema used for SerializableList
            </summary>
            <returns>Null -- not currently implemented.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads an input map action from an XML reader
            </summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapAction.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes an input map action out to an XML writer
            </summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence">
            <summary>
            Contains a set of actions that are mapped to an input mapping.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence.#ctor">
            <summary>
            Initializes a new instance of the InputMapActionSequence class.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence.Actions">
            <summary>
            Gets the actions.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence.Add(Attachmate.Reflection.Emulation.OpenSystems.InputMapAction)">
            <summary>
            Adds an action to the action sequence.
            </summary>
            <param name="action">The action to add.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence.GetSchema">
            <summary>
            Returns an in-memory representation of the XML schema used for SerializableList
            </summary>
            <returns>Null -- not currently implemented.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads in an input map action sequence from an xml file
            </summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes out an input map action sequence to xml format
            </summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.OpenUrlActionLocationOption">
            <summary>
            Valid values for the second parameter to the openURLAction action. This determines
            where the URL specified in the first parameter is opened.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.OpenUrlActionLocationOption.ExternalBrowser">
            <summary>
            Opens the specified URL in a new browser instance.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.OpenUrlActionLocationOption.NewTab">
            <summary>
            Opens the specified URL in a new Reflection tab.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.OpenUrlActionLocationOption.NamedTab">
            <summary>
            Opens the specified URL in an existing Reflection tab. The tab name must be specified 
            as a string in the third parameter to openURLAction.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID">
            <summary>
            Actions that can be mapped to keyboard maps or mouse maps.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowHelpAboutAction">
            <summary>
            Opens the Help/About dialog box. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.AppointmentAction">
            <summary>
            Creates a new appointment Office document 
            This action does nothing if
            the current Office Suite does not support appointment documents.
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.LaunchSupportWebsiteAction">
            <summary>
            Opens the Attachmate support Web site. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.BackHistoryAction">
            <summary>
            Navigates to the previous screen in the screen history sequence. 
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ClearSelectionAction">
            <summary>
            Deselects an active selection in the host session document. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ClipboardSettingsAction">
            <summary>
            Opens the Clipboard settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CloseAction">
            <summary>
            Closes the current document. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ConnectAction">
            <summary>
            Connects the current host session document to the host. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ContactAction">
            <summary>
            Creates a new contact Office document. 
            This action does nothing if
            the current Office Suite does not support contact documents.
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ContextMenuEditorAction">
            <summary>
            Opens the Context Menu Editor. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CopyAction">
            <summary>
            Copies selected text to the Clipboard. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CutAction">
            <summary>
            Cuts selected text and places it on the Clipboard. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.DisconnectAction">
            <summary>
            Disconnects the current host session document from the host. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SettingsAction">
            <summary>
            Opens the configuration settings for the current document. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.EmailMessageAction">
            <summary>
            Creates a new e-mail message Office document. This action does nothing if
            the current Office Suite does not support e-mail. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ExitAction">
            <summary>
            Quits Reflection. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.FileTransferAction">
            <summary>
            Opens the File Transfer dialog box to transfer files between your PC and the host. 
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ForwardHistoryAction">
            <summary>
            Navigates to the next host screen in the screen history sequence. 
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.FtpFileTransferAction">
            <summary>
            Opens the Reflection FTP client for FTP file transfer. 
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.FullScreenViewAction">
            <summary>
            Puts the Reflection frame in full screen mode. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.HelpAction">
            <summary>
            Opens the Help system in a separate window. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.HostConnectionSettingsAction">
            <summary>
            Opens the Connection Settings configuration for the host. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.HotspotsSettingsAction">
            <summary>
            Opens the Hotspots Settings configuration for the host session. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.KeyboardMapperAction">
            <summary>
            Opens the Keyboard Map Editor. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.LaunchApplicationAction">
            <summary>Starts an external application, if the required parameters are provided. This action requires the following three parameters (in order):
            <list type="bullet"><item>The complete path to the application executable file, of type string.</item><item>Optional arguments for the application's command line of type string. Specify an empty string if no arguments are necessary.</item><item>An optional working directory for the application of type string. Specify an empty string if no working directory is desired.</item></list></summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowLiveScreenAction">
            <summary>
            Returns to the current host session document's current host screen. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.VbaMacroDialogAction">
            <summary>
            Opens the Visual Basic for Applications Macro dialog box. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ManualCaptureAction">
            <summary>
            Performs a screen capture of the current host screen and adds it to the screen history sequence.
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowMouseMapperAction">
            <summary>
            Opens the Mouse Map Editor. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.MoveCursorAction">
            <summary>
            Moves the cursor in the host session. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.NewDocumentAction">
            <summary>
            Creates a new document in the Reflection Desktop frame. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.NoteAction">
            <summary>
            Creates a new note Office document. This action does nothing if
            the current Office Suite does not support note documents. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.OfficeToolsPaneAction">
            <summary>
            Displays the Office Tools task pane. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.OpenAction">
            <summary>
            Opens a document in the Reflection frame. Requires one parameter of type string (the complete path 
            of the document to open).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.OpenURLAction">
            <summary>
            Opens a URL, if the required parameters are provided. 
            This action requires up to three parameters:
            <list type="bullet">
            <item><description>A URL string value (required).</description></item>
            <item><description>An open location of type OpenUrlActionLocationOption (required). 
            This determines how the URL opens (for example, via an external browser, a new Reflection tab, 
            or an existing named Reflection tab).</description></item>
            <item><description>The tab name of type string, if the second parameter is 
            OpenUrlActionLocationOption.NamedTab.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PageSetupAction">
            <summary>
            Opens the Page Setup dialog box. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PasteAction">
            <summary>
            Pastes data from the Clipboard to the current cursor position in the host session document. 
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PrintAction">
            <summary>
            Opens the Print dialog box. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PrintSetupAction">
            <summary>
            Opens the Print Setup dialog box. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowPrivacyFilterAction">
            <summary>
            Opens the Information Privacy configuration settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.QuickPrintAction">
            <summary>
            Prints the current document immediately. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ToggleMacroRecordAction">
            <summary>
            Starts or stops the Macro Recorder. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.GlobalSettingsAction">
            <summary>
            Opens the Reflection Desktop global configuration settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunLegacyExtraMacroAction">
            <summary>
            Runs a legacy EXTRA! macro, if the required parameters are provided.
            This action requires two parameters:
            <list type="bullet">
            <item><description>The complete path to the EXTRA! macro file, of type string. 
            This can be empty if the prompt at runtime flag is set to false.</description></item>
            <item><description>A boolean value that determines whether the user is prompted for a macro 
            to run at runtime. The first parameter value is ignored if this value is true.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunLegacyReflectionMacroAction">
            <summary>
            Runs a legacy Reflection macro, if the required parameters are provided.
            This action requires three parameters:
            <list type="bullet">
            <item><description>The name of the macro (type string),</description></item>
            <item><description>Optional macro data (type string) to be passed to the macro at runtime. 
            If no macro data is needed, this can be specified as an empty string.</description></item>
            <item><description>A boolean value that determines whether the user is prompted for a macro 
            to run at runtime. The first two parameter values are ignored if this value is true.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunMacroAction">
            <summary>Runs a macro, if the required parameters are provided. This action requires three parameters with an optional fourth parameter:
            <list type="bullet"><item>The macro name of type string (for example, "Module1.TestMacro"). Include the VBA project namespace in the name, if necessary.</item><item>The VBA project location where the macro is located (type MacroEnumerationOption). Specify MacroEnumerationOption.CommonProject if the macro is located
                in the Common project, or MacroEnumerationOption.Document if it's located in the current document's VBA project.</item><item>A boolean value that determines whether the user is prompted for a macro to run at runtime. The first two parameters are ignored if this value is
                true.</item><item>Optional macro data (type string) to be passed to the macro at runtime. If no macro data is needed, do not add this to the  parameter list.</item></list><para><br/></para></summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SaveAction">
            <summary>
            Saves the current document. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SaveAsAction">
            <summary>
            Saves the current document with a new name or location. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SaveLayoutAction">
            <summary>
            Saves all currently open documents in a layout. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SaveRSFTAction">
            <summary>
            Saves the current document configuration as a template. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ScratchPadPaneAction">
            <summary>
            Opens the Scratch Pad task pane. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ScreenHistoryPaneAction">
            <summary>
            Opens the Screen History task pane. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowScreenHistorySettingAction">
            <summary>
            Opens the Screen History configuration settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SelectAllAction">
            <summary>
            Selects all of the text in the current document. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SendHostKeyAction">
            <summary>
            Transmits a host key to the host. This requires one parameter of type ControlKeyCode,
            which specifies which host key to send.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SendHostTextAction">
            <summary>
            Sends a string of text to a host session. This requires one parameter of type string,
            which is the text to transmit at the current cursor position.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowContextMenuAction">
            <summary>
            Opens a context menu in the current document. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ThemesSoundSettingsAction">
            <summary>
            Opens the sound configuration settings for the current document's theme. 
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.TaskAction">
            <summary>
            Creates a new task Office document. This action does nothing if
            the current Office Suite does not support task documents. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ThemeSettingsAction">
            <summary>
            Opens the theme configuration settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowUIDesignerAction">
            <summary>
            Opens the UI Designer application to customize the ribbon. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.LaunchVbaAction">
            <summary>
            Starts the Visual Basic for Applications Editor. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.WordDocumentAction">
            <summary>
            Creates a new word-processing document. This action does nothing if
            the current Office Suite does not support word-processing documents. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ToggleRibbonStateAction">
            <summary>
            Switches the visibility of the workspace Ribbon on and off. Requires no parameters.
            This action does nothing if the workspace is running
            in Classic Mode. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.LayoutCascadeAction">
            <summary>
            Rearranges all open document windows in the workspace to overlap in a cascade. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.StopMacroAction">
            <summary>
            Stops the currently running macro, if any, in the current document. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.TogglePauseMacroAction">
            <summary>
            Pauses or resumes recording a macro. Does nothing if a recording is not in progress. Requires no
            parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.SetupLoggingAction">
            <summary>
            Opens the logging configuration settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.StartLoggingAction">
            <summary>
            Starts logging text from a host session to a printer or file. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.StopLoggingAction">
            <summary>
            Stops logging if it is currently active. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.MacroSecurityAction">
            <summary>
            Opens the API and Macro Security configuration settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ClearDisplayAction">
            <summary>
            Clears text from the cursor position to the end of the screen,
            without putting it on the Clipboard. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ClearAllAction">
            <summary>
            Clears all of the display memory without putting it on the Clipboard.
            Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.StartTraceAction">
            <summary>Opens the Start Trace dialog box, used to enter the name of the file in which to save the trace data. Requires no parameters.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.StopTraceAction">
            <summary>Stops recording a trace. Requires no parameters.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PlayBackTraceAction">
            <summary>Opens the Playback Trace dialog box, used to open the file that contains the trace data. Requires no parameters.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PreviousDocumentAction">
            <summary>
            Make the previous session document or Web page active on an MDI workspace, whether you are viewing your
            documents as tabs or windows. Or make the next Workspace active if SDI mode is used. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.NextDocumentAction">
            <summary>
            Make the next session document or Web page active on an MDI workspace, whether you are viewing your
            documents as tabs or windows. Or make the next Workspace active if SDI mode is used. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.QuickPadSettingsAction">
            <summary>
            Opens the QuickPad configuration settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ManageRibbonSettingsAction">
            <summary>
            Opens the user interface settings for configuring the selected ribbon or classic UI mode file, 
            modifying the current file, or creating a new file. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunSupportToolAction">
            <summary>
            Runs a utility to help Attachmate Technical Support collect Reflection application data. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunHostExplorerMacroAction">
            <summary>Runs a HostExplorer macro. This action requires one parameter:
            <para><br/>
            The full path to the HostExplorer macro file, of type string.</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.DocumentPropertiesAction">
            <summary>
            Displays document settings. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ShowSpecificContextMenuAction">
            <summary>
            Shows a specified context menu.
            <remarks>
            This action requires four parameters:
            <para>The name of the context menu to show, of type string.</para>
            <para>Whether to show the menu at the current mouse cursor position, of type bool.</para>
            <para>The row in the host screen to show the menu at, of type int.</para>
            <para>The column in the host screen to show the menu at, of type int.</para>
            </remarks>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunExternalLegacyReflectionMacroAction">
            <summary>
            Runs an external legacy Reflection macro.
            This requires four parameters:
            <list type="bullet">
            <item><description>The name of the macro (type string).</description></item>
            <item><description>The name of the session file or external macro file (*.RMA) in which the macro resides (type string).</description></item>
            <item><description>Optional macro data (type string) to be passed to the macro at runtime. 
            If no macro data is needed, this can be specified as an empty string.</description></item>
            <item><description>A boolean value that determines whether the user is prompted for a macro to run at runtime. 
            The first three parameter values are ignored if this value is true.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunExternalLegacyReflectionBasicMacroAction">
            <summary>Runs an external legacy Reflection Basic Macro. This requires two parameters:
            <para>The name (type string) of the macro file (*.RBS).</para><para>Optional macro data (type string) to be passed to the macro at runtime. If no macro data is needed, this can be specified as an empty string.</para></summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunExternalLegacyReflectionRclScriptAction">
            <summary>Runs an external legacy Reflection Command Language (RCL) script. This requires one parameter:
            <para>The name (type string) of the RCL script file (*.RCL).</para></summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.LayoutVerticalAction">
            <summary>
            Rearranges all open document windows in the workspace to be tiled vertically. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.LayoutHorizontalAction">
            <summary>
            Rearranges all open document windows in the workspace to be tiled horizontally. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.EventUIMapperAction">
            <summary>
            Shows the Event UI mapping dialog
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ToggleTerminalKeyboardAction">
            <summary>
            Show or hide the on-screen terminal keyboard for the active session.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.RunExpressMacroAction">
            <summary>
            Runs an EML macro.
            </summary>
            <remarks>
            This action may be run with no parameters, in which case the user will be prompted for a macro to run when the action is executed.
            Otherwise, you need to pass in the following two parameters:
            <para>The full path to the EML macro file to run.</para>
            <para>A boolean value that determines whether the user is prompted to select a macro when the action is executed
            The first parameter is ignored if this value is true</para>
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ToggleClassicMenuBarAction">
            <summary>
            Toggle Menu and Tool bar in Classic mode
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ToggleClassicStatusBarAction">
            <summary>
            Toggle status bar in Classic mode
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CopyToBuffer1Action">
            <summary>
            Copies the selected text to the clipboard and saves a copy of it in one of 4 buffers.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CopyToBuffer2Action">
            <summary>
            Copies the selected text to the clipboard and saves a copy of it in one of 4 buffers.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CopyToBuffer3Action">
            <summary>
            Copies the selected text to the clipboard and saves a copy of it in one of 4 buffers.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CopyToBuffer4Action">
            <summary>
            Copies the selected text to the clipboard and saves a copy of it in one of 4 buffers.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PasteFromBuffer1Action">
            <summary>
            Retrieves saved text from one of 4 buffers and places it in the clipboard, then
            pastes it to the current cursor position in the host session document.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PasteFromBuffer2Action">
            <summary>
            Retrieves saved text from one of 4 buffers and places it in the clipboard, then
            pastes it to the current cursor position in the host session document.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PasteFromBuffer3Action">
            <summary>
            Retrieves saved text from one of 4 buffers and places it in the clipboard, then
            pastes it to the current cursor position in the host session document.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.PasteFromBuffer4Action">
            <summary>
            Retrieves saved text from one of 4 buffers and places it in the clipboard, then
            pastes it to the current cursor position in the host session document.
            This requires one parameter:
            <para>The index (1-4) of the buffer to use</para>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.ToggleLoggingAction">
            <summary>
            Starts or Stops logging text from a host session to a printer or file. Requires no parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID.CaptureIncomingDataAction">
            <summary>
            Starts or stops capturing incoming data.
            </summary>
            <remarks>
            This action may be run with no parameters, in which case the user will be prompted for a filename when the action is executed.
            Otherwise, you need to pass in the following three parameters:
            <para>The full path to a file to save captured data.</para>
            <para>A boolean value that determines whether to append data to the file. If it's false, the existing content in the file
            will be erased before data is saved. Default value is true.</para>
            <para>A boolean value that determines whether to save the data as text to the file. Default value is false.</para>
            </remarks>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IThemeCursor">
            <summary>
            Defines the attributes (such as shape) of the cursor displayed within a Reflection theme.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeCursor.Parent">
            <summary>
            Gets the parent object. The parent is the ITheme object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeCursor.CursorShape">
            <summary>Gets or sets the appearance of the cursor in the terminal window.</summary>
            <remarks>This is stored as a string in the theme.</remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeCursor.CursorBlink">
            <summary>Gets or sets whether the cursor blinks or not.</summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements">
            <summary>
            Interface for configuring additional theme display features
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements.Parent">
            <summary>
            Gets the parent object. The parent is the ITheme object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements.EnableBlink">
            <summary>
            Gets or sets whether blinking characters are enabled or not. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements.EnableUnderline">
            <summary>
            Gets or sets whether underlining of characters is enabled or not. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements.EnableBold">
            <summary>
            Gets or sets whether bold characters are enabled or not. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements.InverseVideo">
            <summary>
            Gets or sets whether foreground and background colors are reversed for all
            display attributes. Not applicable to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements.ColorCursor">
            <summary>
            Gets or sets whether the cursor color can be mapped. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IThemeFont">
            <summary>Defines the font attributes (such as font name, font size) for terminal fonts within a Reflection theme.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeFont.Parent">
            <summary>
            Gets the parent object. The parent is the ITheme object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeFont.FontName">
            <summary>
            Gets or sets the face name of the terminal font to use
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeFont.Bold">
            <summary>
            Gets or sets whether the terminal font has the bold attribute
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeFont.AutoFontSize">
            <summary>
            Gets or sets whether font size is auto adjusted when terminal window size changed.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeFont.FontSize">
            <summary>
            Gets or sets the size of the terminal session font in points
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IThemeSounds">
            <summary>Defines the sounds played when events (such as Connected and Disconnected) occur during Reflection sessions.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeSounds.Parent">
            <summary>
            Gets the parent object. The parent is the ITheme object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeSounds.ConnectEventSound">
            <summary>
            Gets or sets the path to the sound file that plays when
            the session is connected.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeSounds.DisconnectEventSound">
            <summary>
            Gets or sets the path to the sound file that plays when
            the session is disconnected.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IUiControlActionMapper">
            <summary>
                Methods and properties associated with accessing and setting the input map action sequence for a given user interface control.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IUiControlActionMapper.Parent">
            <summary>
                Gets the parent object. The parent is the ITerminal object.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IUiControlActionMapper.Add(Attachmate.Reflection.UserInterface.IUiControl,Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence)">
            <summary>
                Adds the input map action sequence to the the given user interface control.
            </summary>
            <param name="uiControl">Object containing properties and operations on the control.</param>
            <param name="inputMapActionSequence">Object containing a set of actions that are mapped to an input mapping.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IUiControlActionMapper.Get(Attachmate.Reflection.UserInterface.IUiControl)">
            <summary>
                Returns the input map action sequence from a given user interface control.
            </summary>
            <param name="uiControl">Object containing properties and operations on the control.</param>
            <returns>Object containing a set of actions that are mapped to an input mapping.</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption">
            <summary>
            Denotes how Reflection manages data that enters display memory.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy1">
            <summary>
            No more than one line can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy2">
            <summary>
            No more than two lines can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy4">
            <summary>
            No more than four lines can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy8">
            <summary>
            No more than eight lines can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy16">
            <summary>
            No more than 16 lines can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy32">
            <summary>
            No more than 32 lines can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy64">
            <summary>
            No more than 64 lines can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollBy128">
            <summary>
            No more than 128 lines can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.ScrollByPage">
            <summary>
            No more than a page of text can enter display memory before the screen is refreshed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.JumpScrollSpeedOption.UnlimitedScroll">
            <summary>
            The display is refreshed as opportunity allows. Some text may not actually appear on the screen as it's 
            read into display memory.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KermitChecksumOption">
            <summary>
            Specifies the level of error checking used for Kermit file transfers.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.KermitChecksumOption.Checksum1Byte">
            <summary>
            Kermit uses single-byte checksum.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.KermitChecksumOption.Checksum2Byte">
            <summary>
            Kermit uses double-byte checksum.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.KermitChecksumOption.Crc">
            <summary>
            Kermit uses three-byte CRC checksum.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KermitStopServerOption">
            <summary>
            Options for whether the KermitStopServer method logs off from the remote computer, 
            when it quits the server Kermit program
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.KermitStopServerOption.NoLogoff">
            <summary>
            KermitStopServer does not log off the remote computer.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.KermitStopServerOption.Logoff">
            <summary>
            KermitStopServer does log off the remote computer.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper">
            <summary>
            Provides the ability to view keyboard mappings for the terminal session, and to
            remap keys programmatically.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="keyboardMapper"></param>
            <param name="terminal"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.Parent">
            <summary>
            Gets the parent object (ITerminal).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.KeyMap">
            <summary>
            Gets or sets the name of the keymap file. 
            </summary>
            <remarks>
            When setting the keymap file, if the value is not a full path, Reflection searches
            for the file in the user's Reflection document folder and the 
            Built-Ins/Keyboard Maps folder.
            <para>
            If the file cannot be found there, or if the full path that's passed in does not exist,
            a FileNotFoundException is thrown.
            </para>
            </remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property 
            that was secured via the Permissions Manager, or that 
            can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.MappingCollection">
            <summary>
            Returns a set of all the keys that have been remapped in the current keyboard map.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.AddMapping(Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping)">
            <summary>
            Adds a key mapping to the current keyboard map.
            </summary>
            <param name="mapping">
            A mapping between a key sequence and a set of actions to perform when
            that key sequence is pressed in a host session.
            </param>
            <remarks>
            A key can also be remapped to do nothing if the InputMapActionSequence specified in 
            mapping.Mapping has no InputMapActions added to it.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.RemoveMapping(System.Windows.Forms.Keys)">
            <summary>
            Removes a key mapping from the keyboard map. This method should only be used to
            remove non-extended keys.
            </summary>
            <param name="key">The key sequence for which to remove the mapping.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.RemoveMapping(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Removes a key mapping from the keyboard map.
            </summary>
            <param name="key">The key sequence for which to remove the mapping.</param>
            <param name="isExtendedKey">
            Indicates whether this key is an extended key. For IBM Enhanced 101-key and 102-key keyboards, 
            extended keys are the right ALT and the right CTRL keys on the main keyboard; 
            the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys
            to the left of the numeric keypad; and the slash (/) and ENTER
            keys in the numeric keypad.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.Contains(System.Windows.Forms.Keys)">
            <summary>
            Returns whether there is a mapping for a specified key combination
            in the current keyboard map. This method only works for non-extended keys.
            </summary>
            <param name="key">The key sequence for which to query.</param>
            <returns>True if the current keyboard map contains a mapping for key, false if not.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.Contains(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Returns whether there is a mapping for a specified key combination
            in the current keyboard map. 
            </summary>
            <param name="key">The key sequence for which to query.</param>
            <param name="isExtendedKey">
            Indicates whether this key is an extended key. For IBM Enhanced 101-key and 102-key keyboards, 
            extended keys are the right ALT and the right CTRL keys on the main keyboard; 
            the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys
            to the left of the numeric keypad; and the slash (/) and ENTER
            keys in the numeric keypad.
            </param>
            <returns>True if the current keyboard map contains a mapping for key, false if not.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.Save">
            <summary>
            Saves changes to the current keyboard map.
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O (input/output) error occurred while trying to save the keyboard map.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the keyboard map.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapper.SaveAs(System.String)">
            <summary>
            Saves the current keyboard map contents to a file.
            </summary>
            <param name="pathName">The path to the new keyboard map.</param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the keyboard map.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the keyboard map.
            </exception>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping">
            <summary>
            Maps a key to a sequence of one or more input actions.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.#ctor">
            <summary>
            Initializes a new instance of the KeyboardMapping class.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.#ctor(System.Windows.Forms.Keys,Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence)">
            <summary>
            Initializes a new instance of the KeyboardMapping class.
            </summary>
            <param name="key">The key being mapped.</param>
            <param name="mapping">
            Optional parameters associated with the action. If there are no parameters needed
            for the action, null may be specified for this parameter.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.#ctor(System.Windows.Forms.Keys,Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="key">The key being mapped.</param>
            <param name="mapping">
            Optional parameters associated with the action. If there are no parameters needed
            for the action, null may be specified for this parameter.
            </param>
            <param name="isExtendedKey">
            Indicates whether this key is an extended key. For IBM Enhanced 101-key and 102-key keyboards, 
            extended keys are the right ALT and the right CTRL keys on the main keyboard; 
            the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys
            to the left of the numeric keypad; and the slash (/) and ENTER
            keys in the numeric keypad.
            </param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.Key">
            <summary>
            Gets the key associated with the keyboard mapping.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.Mapping">
            <summary>
            Gets the action sequence associated with the keyboard mapping.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.IsExtendedKey">
            <summary>
            Gets or sets whether this mapping is of an extended key.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.GetSchema">
            <summary>
            Returns an in-memory representation of the XML schema used for SerializableList
            </summary>
            <returns>Null -- not currently implemented.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads in a keyboard mapping from an xml file
            </summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes out a keyboard mapping to xml format
            </summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KeysSentEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KeysSentEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeysSentEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeysSentEventArgs.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeysSentEventArgs.Row">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeysSentEventArgs.Column">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventHandler">
            <summary>
            Cancel connection event handler.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs">
            <summary>
            This class to retrieve information about the current connection.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs.#ctor(System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption,Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettings)">
            <summary>
            CancelableConnectionEventArgs Constructor.
            </summary>
            <param name="connectionId">The current connection ID.</param>
            <param name="connectionSettings">The current connection type.</param>
            <param name="connnectionType">The current connection settings.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs.ConnectionId">
            <summary>
            The current connection ID. ConnectionId is not relevant in the Connecting event.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs.ConnectionType">
            <summary>
            The current connection type.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs.ConnectionSettings">
            <summary>
            The current connection settings. 
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CharacterAttributes">
            <summary>
            Character attributes for UNIX, OpenSystems, and ReGIS terminal sessions.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CharacterAttributes.Plain">
            <summary>
            No attributes set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CharacterAttributes.Blink">
            <summary>
            Blink character attribute.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CharacterAttributes.Reverse">
            <summary>
            Displays as reverse video attribute.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CharacterAttributes.Underline">
            <summary>
            Displays underlined attribute.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CharacterAttributes.Bold">
            <summary>
            Displays text in bold attribute. Relevant only for UNIX, OpenSystems, and ReGIS terminal types.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CharacterAttributes.NoCharacter">
            <summary>
            No character exists at this position.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventHandler">
            <summary>
            Connection EventHandler.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs.m_connectionId">
            <summary>
            Identifies the connection. Obtained from suspended connection which is used to resume connection.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs.m_connectionType">
            <summary>
            Connection type associated with this connection event.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs.#ctor(System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ConnectionTypeOption,Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettings)">
            <summary>
            ConnectionEventArgs constructor.
            </summary>
            <param name="connectionId">Connection ID.</param>
            <param name="connectionSettings">Connection settings.</param>
            <param name="connnectionType">Connection type option.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs.ConnectionId">
            <summary>
            Connection ID.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs.ConnectionType">
            <summary>
            Connection type option.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs.ConnectionSettings">
            <summary>
            Connection settings.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode">
            <summary>
            Defines the valid values for control keys.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.InvalidKey">
            <summary>
            An invalid key value.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Tab">
            <summary>
            Tab forward.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.BackTab">
            <summary>
            Tab backward. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Down">
            <summary>
            Down Arrow key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Up">
            <summary>
            Up Arrow key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Right">
            <summary>
            Right Arrow key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Left">
            <summary>
            Left Arrow key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Insert">
            <summary>
            Insert key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PA1">
            <summary>
            PA1 function key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PA2">
            <summary>
            PA2 function key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PA3">
            <summary>
            PA3 function key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.BackSpace">
            <summary>
            Backspace key (nondestructive).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Delete">
            <summary>
            Delete key
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.DeleteChar">
            <summary>
            Delete Character key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.EraseInput">
            <summary>
            Erase Input key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Reset">
            <summary>
            Reset key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.NewLine">
            <summary>
            New Line key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Home">
            <summary>
            Home key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ScrollDown">
            <summary>
            Scroll Down key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ScrollUp">
            <summary>
            Scroll Up key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PageDown">
            <summary>
            Page Down key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PageUp">
            <summary>
            Page Up key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad0">
            <summary>
            VT keypad 0 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad1">
            <summary>
            VT keypad 1 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad2">
            <summary>
            VT keypad 2 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad3">
            <summary>
            VT keypad 3 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad4">
            <summary>
            VT keypad 4 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad5">
            <summary>
            VT keypad 5 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad6">
            <summary>
            VT keypad 6 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad7">
            <summary>
            VT keypad 7 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad8">
            <summary>
            VT keypad 8 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.KeyPad9">
            <summary>
            VT keypad 9 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.NumLock">
            <summary>
            Numeric Lock key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Return">
            <summary>
            Return key.
            </summary>        
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PF1">
            <summary>
            VT PF1 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PF2">
            <summary>
            VT PF2 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PF3">
            <summary>
            VT PF3 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PF4">
            <summary>
            VT PF4 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Enter">
            <summary>
            Enter key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Break">
            <summary>
            Break key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Cancel">
            <summary>
            Cancel key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Escape">
            <summary>
             Escape key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Send">
            <summary>
            Send key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.LineFeed">
            <summary>
            Line Feed key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Nul">
            <summary>
            Send a NUL character to the host.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hold">
            <summary>
            Hold Screen key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.HoldClear">
            <summary>
            Clear Hold key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.HoldSet">
            <summary>
            Set Hold key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Compose">
            <summary>
            Compose key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.TekZoom">
            <summary>
            Zoom key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Find">
            <summary>
            Find key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Remove">
            <summary>
            Remove key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Select">
            <summary>
            Select key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Minus">
            <summary>
            Keypad Minus key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Decimal">
            <summary>
            Keypad Period key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Comma">
            <summary>
            Comma key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Center">
            <summary>
            Center key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.End">
            <summary>
            End key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PrevScreen">
            <summary>
            Previous Screen key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.NextScreen">
            <summary>
            Next Screen key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ClearLine">
            <summary>
            Clear Line key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ClearPage">
            <summary>
            Clear Page key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.InsertChar">
            <summary>
            Insert Char key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.InsertLine">
            <summary>
            Insert Line key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.DeleteLine">
            <summary>
            Delete Line key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftUp">
            <summary>
            Shift Up key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftDown">
            <summary>
            Shift Down key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftLeft">
            <summary>
            Shift Left key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftRight">
            <summary>
            Shift Right key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftHome">
            <summary>
            Shift Home key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftInsert">
            <summary>
            Shift Insert key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftDelete">
            <summary>
            Shift Delete key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.SendDelete">
            <summary>
            Send Delete key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Replace">
            <summary>
            Replace key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.SendLine">
            <summary>
            Send Line key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.SendMsg">
            <summary>
            Send Message key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.EraseEOL">
            <summary>
            Erase EOL key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.EraseEOP">
            <summary>
            Erase EOP key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.NextPage">
            <summary>
            Next Page key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PrevPage">
            <summary>
            Previous Page key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.TermNextPage">
            <summary>
            Advance to the next display page.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.TermPrevPage">
            <summary>
            Switch to the preceding display page.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PrintLine">
            <summary>
            Print Line key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PrintMsg">
            <summary>
            Print Message key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftPrintScreen">
            <summary>
            Shift Print Screen key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.BlockToggle">
            <summary>
            Block Mode Toggle key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.MonitorToggle">
            <summary>
            Monitor Mode Toggle key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.TraceToggle">
            <summary>
            Trace Mode Toggle key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Page">
            <summary>
            Page key.
            </summary>        
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ClearDisplay">
            <summary>
            Clear Display key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftBackspace">
            <summary>
            Shift Backspace key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.HomeUp">
            <summary>
            Move to the top of display memory.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.HomeDown">
            <summary>
            Move to the bottom of display memory.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ScrollLeft">
            <summary>
            Scroll left one column.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ScrollRight">
            <summary>
            Scroll right one column.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF1">
            <summary>
            Shift F1 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF2">
            <summary>
            Shift F2 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF3">
            <summary>
            Shift F3 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF4">
            <summary>
            Shift F4 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF5">
            <summary>
            Shift F5 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF6">
            <summary>
            Shift F6 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF7">
            <summary>
            Shift F7 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF8">
            <summary>
            Shift F8 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF9">
            <summary>
            Shift F9 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF10">
            <summary>
            Shift F10 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF11">
            <summary>
            Shift F11 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF12">
            <summary>
            Shift F12 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF13">
            <summary>
            Shift F13 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF14">
            <summary>
            Shift F14 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF15">
            <summary>
            Shift F15 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF16">
            <summary>
            Shift F16 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF1">
            <summary>
            Control F1 key.
            </summary>        
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF2">
            <summary>
            Control F2 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF3">
            <summary>
            Control F3 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF4">
            <summary>
            Control F4 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF5">
            <summary>
            Control F5 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF6">
            <summary>
            Control F6 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF7">
            <summary>
            Control F7 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF8">
            <summary>
            Control F8 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF9">
            <summary>
            Control F9 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF10">
            <summary>
            Control F10 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF11">
            <summary>
            Control F11 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlF12">
            <summary>
            Control F12 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF1">
            <summary>
            Control Shift F1 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF2">
            <summary>
            Control Shift F2 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF3">
            <summary>
            Control Shift F3 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF4">
            <summary>
            Control Shift F4 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF5">
            <summary>
            Control Shift F5 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF6">
            <summary>
            Control Shift F6 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF7">
            <summary>
            Control Shift F7 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF8">
            <summary>
            Control Shift F8 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF9">
            <summary>
            Control Shift F9 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF10">
            <summary>
            Control Shift F10 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF11">
            <summary>
            Control Shift F11 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CtrlShiftF12">
            <summary>
            Control Shift F12 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF17">
            <summary>
            Shift F17 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF18">
            <summary>
            Shift F18 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF19">
            <summary>
            Shift F19 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ShiftF20">
            <summary>
            Shift F20 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F1">
            <summary>
            F1 key.
            </summary>        
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F2">
            <summary>
            F2 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F3">
            <summary>
            F3 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F4">
            <summary>
            F4 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F5">
            <summary>
            F5 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F6">
            <summary>
            F6 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F7">
            <summary>
            F7 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F8">
            <summary>
            F8 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F9">
            <summary>
            F9 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F10">
            <summary>
            F10 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F11">
            <summary>
            F11 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F12">
            <summary>
            F12 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F13">
            <summary>
            F13 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F14">
            <summary>
            F14 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F15">
            <summary>
            F15 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F16">
            <summary>
            F16 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F17">
            <summary>
            F17 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F18">
            <summary>
            F18 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F19">
            <summary>
            F19 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F20">
            <summary>
            F20 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F21">
            <summary>
            F21 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F22">
            <summary>
            F22 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F23">
            <summary>
            F23 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F24">
            <summary>
            F24 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F25">
            <summary>
            F25 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F26">
            <summary>
            F26 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F27">
            <summary>
            F27 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F28">
            <summary>
            F28 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F29">
            <summary>
            F29 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F30">
            <summary>
            F30 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F31">
            <summary>
            F31 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F32">
            <summary>
            F32 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F33">
            <summary>
            F33 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F34">
            <summary>
            F34 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F35">
            <summary>
            F35 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F36">
            <summary>
            F36 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F37">
            <summary>
            F37 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F38">
            <summary>
            F38 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F39">
            <summary>
            F39 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F40">
            <summary>
            F40 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F41">
            <summary>
            F41 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F42">
            <summary>
            F42 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F43">
            <summary>
            F43 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F44">
            <summary>
            F44 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F45">
            <summary>
            F45 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F46">
            <summary>
            F46 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F47">
            <summary>
            F47 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.F48">
            <summary>
            F48 key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk6">
            <summary>
            User defined key 6.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk7">
            <summary>
            User defined key 7.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk8">
            <summary>
            User defined key 8.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk9">
            <summary>
            User defined key 9.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk10">
            <summary>
            User defined key 10.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk11">
            <summary>
            User defined key 11.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk12">
            <summary>
            User defined key 12.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk13">
            <summary>
            User defined key 13.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk14">
            <summary>
            User defined key 14.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk15">
            <summary>
            User defined key 15.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk16">
            <summary>
            User defined key 16.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk17">
            <summary>
            User defined key 17.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk18">
            <summary>
            User defined key 18.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk19">
            <summary>
            User defined key 19.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Udk20">
            <summary>
            User defined key 20.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Disconnect">
            <summary>
            Disconnect Session.
            </summary>        
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.SendAnswerBack">
            <summary>
            VT Send Answerback.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.ClearComm">
            <summary>
            Clear Communications.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.HardReset">
            <summary>
            Recall Last Setup.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.RunScript">
            <summary>
            Run Script.
            </summary>        
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.EditScript">
            <summary>
            Edit Script.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CommandWindow">
            <summary>
            Command Window.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.CommandLine">
            <summary>
            Command Line.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex00">
            <summary>
            Control @ (0x00)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex01">
            <summary>
            Control A (SOH)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex02">
            <summary>
            Control B (STX)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex03">
            <summary>
            Control C (ETX)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex04">
            <summary>
            Control D (EOT)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex05">
            <summary>
            Control E (ENQ)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex06">
            <summary>
            Control F (ACK)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex07">
            <summary>
            Control G (BEL)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex08">
            <summary>
            Control H (BS)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex09">
            <summary>
            Control I (HT)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex0A">
            <summary>
            Control J (LF)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex0B">
            <summary>
            Control K (VT)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex0C">
            <summary>
            Control L (FF)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex0D">
            <summary>
            Control M (CR)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex0E">
            <summary>
            Control N (SO)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex0F">
            <summary>
            Control O (SI)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex10">
            <summary>
            Control P (DLE)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex11">
            <summary>
            Control Q (DC1)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex12">
            <summary>
            Control R (DC2)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex13">
            <summary>
            Control S (DC3)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex14">
            <summary>
            Control T (DC4)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex15">
            <summary>
            Control U (NAK)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex16">
            <summary>
            Control V (SYN)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex17">
            <summary>
            Control W (ETB)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex18">
            <summary>
            Control X (CAN)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex19">
            <summary>
            Control Y (EM)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex1A">
            <summary>
            Control Z (SUB)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex1B">
            <summary>
            Control [ (ESC)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex1C">
            <summary>
            Control \ (FS)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex1D">
            <summary>
            Control ] (GS)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex1E">
            <summary>
            Control ^ (RS)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex1F">
            <summary>
            Control _ (US)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.InsertHere">
            <summary>
            Insert Here key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.InsertMode">
            <summary>
            Insert Mode key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.PrintScreen">
            <summary>
            Print Screen key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.SoftReset">
            <summary>
            Terminal Reset.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Hex7F">
            <summary>
            DEL
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode.Do">
            <summary>
            Do
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption">
            <summary>
            Specifies what is to be copied for Clipboard copy-related functions.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption.Selection">
            <summary>
            Currently selected screen region.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption.Screen">
            <summary>
            Currently displayed screen.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption.All">
            <summary>
            All display memory.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption">
            <summary>
            Specifies the format in which data is to be copied for Clipboard copy-related functions.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption.AsPlainText">
            <summary>
            Copies data as plain ASCII text.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption.AsTableText">
            <summary>
            Copies data as a tab-delimited table.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption.AsRichText">
            <summary>
            Copies data in rich text format.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption.AsBitmap">
            <summary>
            Copies a graphics/bitmap image to the Clipboard.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption.AsXML">
            <summary>
            Copies screen information using XML format.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CopyDataFormats">
            <summary>Specifies the format in which data is copied for the Copy method.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyDataFormats.Lines">
            <summary>
            Copies data as lines with CR/LFs.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyDataFormats.Unformatted">
            <summary>
            Copies unformatted data without CR/LFs.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyDataFormats.Paragraph">
            <summary>
            Copies data as paragraphs for word processing.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.CopyTableMethods">
            <summary>
            Specifies the method used to generate tabular data when copying tables.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyTableMethods.DetectColumns">
            <summary>
            Columns are set by analyzing vertical space alignment.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.CopyTableMethods.MultipleSpaces">
            <summary>
            Columns are set by replacing multiple spaces or tabs with a single tab.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.DisplayTextOption">
            <summary>
            Used with IScreen.DisplayText() to designate how data is to be displayed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DisplayTextOption.NoTranslation">
            <summary>
            Doesn't translate from the PC to the Host character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DisplayTextOption.HexData">
            <summary>
            Interprets portions of a string that follow a backslash using either
            C-Language or hexadecimal character conversions.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.FindOptions">
            <summary>
            Determines the direction to search for text on the screen.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FindOptions.Forward">
            <summary>
            Searches forward from the current screen position.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.FindOptions.Backward">
            <summary>
            Searches backward from the current screen position.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor">
            <summary>
            Colors available to map for ANSI terminals.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Blue">
            <summary>
            Blue.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Brown">
            <summary>
            Brown.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Cyan">
            <summary>
            Cyan.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Green">
            <summary>
            Green.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Magenta">
            <summary>
            Magenta.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.White">
            <summary>
            White.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Grey">
            <summary>
            Grey. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.BrightWhite">
            <summary>
            Bright white. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.LightBlue">
            <summary>
            Light blue. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.LightCyan">
            <summary>
            Light cyan. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.LightGreen">
            <summary>
            Light green. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.LightMagenta">
            <summary>
            Light magenta. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.LightRed">
            <summary>
            Light red. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor.Yellow">
            <summary>
            Yellow. Available for SCO ANSI only.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor">
            <summary>
            Color designation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Default">
            <summary>
            Default color not explicitly defined by host.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.White">
            <summary>
            White.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Grey">
            <summary>
            Grey.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Blue">
            <summary>
            Blue.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Green">
            <summary>
            Green.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Yellow">
            <summary>
            Yellow.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Cyan">
            <summary>
            Cyan.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Magenta">
            <summary>
            Magenta.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.DarkGrey">
            <summary>
            Dark grey.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.DarkRed">
            <summary>
            Dark red.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.DarkBlue">
            <summary>
            Dark blue.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.DarkGreen">
            <summary>
            Dark green.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.DarkYellow">
            <summary>
            Dark yellow.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.DarkCyan">
            <summary>
            Dark cyan.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColor.DarkMagenta">
            <summary>
            Dark magenta.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ScreenColorComponents">
            <summary>
            Specifies an RGB color component.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColorComponents.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColorComponents.Green">
            <summary>
            Green.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScreenColorComponents.Blue">
            <summary>
            Blue.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IConnectionSettings">
            <summary>
            Connection Settings interface.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer">
            <summary>
            The IFileTransfer emcompass several file transfers implemented with different file transfer protocols 
            such as FTP, Kermit, XModem and ZModem. 
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.Parent">
            <summary>
            Gets the parent object. The parent is the ITerminal object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ConvertEOLToSeparator">
            <summary>
            This property applies to ASCII transfers to the host. 
            </summary>
            <remarks>
            The default value is true.
            
            It returns or specifies whether 
            the WRQ/Reflection file transfer host program is instructed to generate a new record every time it
            receives the carriage return/linefeed sequence from the emulator. The equivalent property for 
            transfers from the host is ConvertSeparatorToEOL, which determines whether a 
            new line is generated at the end of each record received from the host during an ASCII transfer. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ConvertMCSToNRC">
            <summary>
            Returns or specifies whether Multinational Character Set (MCS) characters are converted to
            National Replacement Set (NRC) characters in files you send. This property is relevant only for ASCII file transfers. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ConvertNRCToMCS">
            <summary>
            Returns or specifies whether National Replacement Set (NRC) characters are converted to
            Multinational Character Set (MCS) characters in files you receive. This property is relevant only for ASCII file transfers. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ConvertISO7ToRoman8">
            <summary>
            Returns or specifies whether ISO-7 characters are converted to Roman 8 characters
            in files you receive. This property is relevant only for ASCII file transfers. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ConvertRoman8ToISO7">
            <summary>
            Returns or specifies whether Roman 8 characters are converted to ISO-7 characters in files you send. 
            This property is relevant only for ASCII file transfers. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ConvertSeparatorToEOL">
            <summary>
            Returns or specifies how Reflection handles line separators during ASCII file transfers. 
            </summary>
            <remarks>
            The default value is true.
            
            Setting this property to True tells Reflection to generate a new line at the end of each 
            record it receives from the host during an ASCII transfer. The equivalent property for 
            ASCII transfers to the host is ConvertEOLToSeparator, which determines whether the host 
            generates a new record every time it receives the carriage return/linefeed sequence from Reflection. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.DeleteTrailingSpaces">
             <summary>
             This property returns or specifies how Reflection handles trailing spaces during ASCII
             file transfers. 
             </summary>
            <remarks>
             The default value is true.
             
             Most text processing programs use delimited lines and paragraphs, and thus
             do not need blanks preceding a delimiter. Deleting trailing spaces during a file transfer
             can save a great deal of disk space. 
             This property is relevant during ASCII file transfers from the host and for logging or copying to disk. 
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPHostName">
             <summary>
             Returns or specifies the name or IP address of the server for FTP file transfers.
             </summary>
             <remarks>
              This can be a 
             host name that is resolved by the Hosts file on your PC or by a domain name server on your network. 
             You can also specify an IP address.
             
             This property is relevant only for transfers that use the FTP protocol. You must already be 
             connected to a host before initiating FTP file transfer. Use this property if you want to initiate 
             FTP file transfer to a different host.
             
             Values
            
             The default value is "".
             The string cannot be more than 259 characters long.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPClearConnectionInformation">
             <summary>
             Returns or specifies how login information on the FTP tab of the File Transfer Setup
             dialog box should be cleared from the controls and fields in this tab (and thus not 
             used as login information for, as an example, a new host you wish to log in to). 
             </summary>
             <remarks>
             Values
            
             The default value is FTPClearConnectionOption.ClearOnHostNameChange. 
            
             FTPClearConnectionOption.ClearAlways	
                            Clear the login information on disconnect or host name change.
             FTPClearConnectionOption.ClearOnDisconnect	
                            Clear the login information when you disconnect from the current host connection.
             FTPClearConnectionOption.ClearOnHostNameChange	
                            Clear the login information when you change the host name.        
             FTPClearConnectionOption.ClearNever	
                            Login information is never cleared from the FTP tab.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPPassiveMode">
            <summary>
            Returns or specifies whether Reflection's integrated FTP client sends a PASV 
            command in order to communicate with the server in passive mode (sometimes called PASV mode). 
            </summary>
            <remarks>The default value is true. Doing this initiates a separate data connection for directory listings and file transfers. Passive mode is required for connections
            through some firewalls. This option configures PASV mode connections to minimize connection problems with firewalls.</remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPPassword">
             <summary>
             Returns or specifies the default password to be used when logging in to an FTP server. 
             </summary>
             <remarks>
             If the value of this property is an empty string, the user will be prompted for a 
             password when FTP file transfer is initiated (unless the FTPStartServer method is used 
             with its Options argument set to FTPServerOptions.NoLoginDialog). 
            
             This property is relevant only for transfers that use the FTP protocol.
             Values
            
             The default value is "".
             The string cannot be more than 259 characters long.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPTransferType">
             <summary>
             Returns or specifies the transfer type for FTP transfers from the File Transfer
             dialog box. 
             </summary>
             <remarks>
             This property is automatically set every time you perform an FTP 
             transfer from the dialog box. The value of this property becomes the default 
             for the next transfer from the File Transfer dialog box. This property has no 
             effect on programmatic transfer—if you don't explicitly specify a transfer type
             with FTPSendFile or FTPReceiveFile, the default is always ASCII.
            
             This property is relevant only for transfers that use the FTP protocol.
             
             Values
            
             The default value is TransferTypeOption.Binary.
            
             TransferTypeOption.ASCII	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to ASCII. 
                 If the FTPTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
                 If FTPTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl-Z character may be still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to binary. 
                 Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect	
                 The transfer type is determined by the file extension. Use these properties to determine 
                 which file extensions are linked to which transfer type:
            
             TransferAutoDetectDefaultType
             TransferAutoDetectASCIIExtensionList
             TransferAutoDetectBinaryExtensionList
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPCharacterSetTranslationEnabled">
            <summary>
            Returns or specifies how ASCII character set translations occur during FTP file transfers.
            </summary>
            <remarks>
            When this property is set to True, Reflection performs the character set translations 
            specified on the Translation tab in the File Transfer Setup dialog box, as well as the 
            translations between the host character set and the PC character set, as specified on 
            the Emulation tab in the Terminal Setup dialog box.
            This property affects ASCII file transfers that use the FTP protocol.
            
            The default value is false.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPFileNamesTranslationEnabled">
            <summary>
            Returns or specifies whether file name translation occurs during FTP transfers of ASCII files. 
            </summary>
            <remarks>
            When this property is True, Reflection uses the file name translation options specified by 
            TransferSpacesToUnderscores, TransferUnderscoresToSpaces, and TransferReceiveAs8Dot3.
            
            The default value is false.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPUserName">
             <summary>
             Returns or specifies the default user name to be used when logging into an FTP server. 
             </summary>
             <remarks>
             If the value of this property is an empty string, the user will be prompted for a password 
             when FTP file transfer is initiated (unless the FTPStartServer method is used with its Options 
             argument set to FTPServerOptions.NoLoginDialog). 
             This property is relevant only for transfers that use the FTP protocol.
             
             Values
            
             The default value is "".
             The string cannot be more than 259 characters long.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPUseSftpStructuredListing">
             <summary>
             Returns or specifies the data listing style used for SFTP connections to Secure Shell servers.
             </summary>
             <remarks>
             The default value is false.
             
             When this property is False (the default), Reflection uses the standard UNIX-style data listing, such as: 
            
             -rw-r--r--    1 test1    users         877 Dec 12 08:36 scapilog.txt
            
             When it is True, Reflection uses the structured data list, which uses the following format:
            
             scapilog.txt : flags(15), size(877), uid(506), gid(100), perm(33188), atime(1071246964), mtime(1071246964)
            
             This property is relevant only for Secure Shell sessions that use the SFTP protocol. 
             
             When the Secure Shell logging level is set to Debug3, both data listings are included in the logging display shown in the FTP command window.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPUseWRQFTP">
            <summary>Returns or specifies whether to use Reflection FTP for file transfers.</summary>
            <remarks>The default value is true. When this property is True, Reflection FTP is used. You can use Reflection FTP to transfer files to an FTP server running on another
            PC, or on a UNIX, Unisys, VAX, HP, or other host. When it is False, Microsoft's FTP is used. Microsoft's FTP can only be used to transfer files to UNIX
            hosts.</remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.HostRecordSeparator">
             <summary>
             Returns or specifies the character to be used in the PC file as a record separator when an ASCII
             files is transferred from the host. 
             </summary>
             <remarks>
             This property is only relevant when the UseHostRecordSeparator
             property is True. 
             For example, this statement specifies that a linefeed should be inserted as the PC file record
             separator:
            
             FileTransfer.HostRecordSeparator = "\n"
            
             This property only applies to ASCII file transfers using the WRQ/Reflection protocol.
             
             The default value is a carriage return and linefeed, which is represented as:
            
             "\r\n"
            
             The string cannot be more than 259 characters long.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitAutomaticServer">
             <summary>
             Returns or specifies how Reflection interacts with the host Kermit program.
             </summary>
             <remarks>
             If this property is set to True, Reflection interacts with the host Kermit program in the following
             manner:
            
             ·	When the user first opens the File Transfer dialog box, no interaction with the host occurs.
             ·	When the user requests a Kermit transfer, the host is put into server mode by transmitting the Server Startup command (specified with the KermitServerStartupCommand property). If no sequence is specified, then Reflection assumes that the host Kermit is already in server mode and takes no action other than to set a flag indicating that the host is in server mode. 
            
             ·	As long as the File Transfer dialog box remains open, the host Kermit program is left in server mode; transfers occur as the user requests them.
             ·	When the user dismisses the file transfer dialog box, clicks on Setup, or changes the protocol, the KermitStopServer method is used to shut down the host Kermit program.
            
             This property is only relevant for transfers from the File Transfer dialog box. For programmatic 
             transfers, use the KermitStartServer method to start the host Kermit server program.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitChecksum">
             <summary>
             Kermit supports three kinds of error checking: single-byte checksum, double-byte checksum, 
             and three-byte CRC. 
             </summary>
             <remarks>
             This property returns or specifies which level of error checking is used.
             During file transfers, Reflection uses the level of error checking specified, unless the Kermit 
             program at the other end of the transfer does not support that level, in which case the highest 
             level the remote system supports is used (CRC is highest; single-byte checksum is lowest). 
             Single-byte is fastest, but CRC provides the most thorough error checking.
             
             Values
            
             The default value is KermitChecksumOption.CRC. 
            
             KermitChecksumOption.Checksum1Byte	Kermit uses single-byte checksum.
             KermitChecksumOption.Checksum2Byte	Kermit uses double-byte checksum.
             KermitChecksumOption.CRC	        Kermit uses three-byte CRC checksum.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitPacketSize">
             <summary>
             Returns or specifies the desired packet size for Kermit transfers (in bytes). 
             </summary>
             <remarks>
             This property
             only affects transfers from the host. For transfers to the host, the packet size is 
             determined by the host Kermit program. If the remote Kermit program does not support 
             long packets, the packet size is adjusted to 94 bytes. Programs that support packet 
             sizes greater than 94 bytes are known as "SuperKermit" programs.
             
             Values
            
             The default value is 512.
             The range of values is 32-2048.
             </remarks>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown if a value outside the range of valid values is specified.
             </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitReceiveEndCharacter">
            <summary>
            Returns or specifies the character that indicates the end of a packet of data received 
            from the host. 
            </summary>
            <remarks>
            If this property is changed in Reflection, the corresponding value must 
            also be changed in the remote Kermit program.
            
            The default value is a carriage return character, which can be represented as "\r"
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitReceiveStartCharacter">
            <summary>
            Returns or specifies the character that indicates the beginning of a packet of data 
            received from the host. 
            </summary>
            <remarks>
            The default is appropriate for most systems. If this property 
            is changed in Reflection, the corresponding value must also be changed in the remote Kermit program.
            The default value is a start-of-header character, which can be represented as "\0x0001"
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitReceiveStartupCommand">
            <summary>
            Returns or specifies the command that directs the host Kermit program to 
            receive a file from the local computer. 
            </summary>
            <remarks>
            This property is most useful for 
            sending files from the File Transfer dialog box, as a way of telling the host 
            Kermit what kinds of files to receive or how to receive them.
            
            The default value is "".
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitSendEndCharacter">
            <summary>
            Returns or specifies the character that indicates the end of a packet of data sent
            to the host. 
            </summary>
            <remarks>
            If this property is changed in Reflection, the corresponding value must
            also be changed in the remote Kermit program.
            
            The default value is a carriage return character, which can be represented as "\r"
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitSendStartCharacter">
            <summary>
            Returns or specifies the character that indicates the beginning of a packet of data
            sent to the host. 
            </summary>
            <remarks>
            If this property is changed in Reflection, the corresponding value
            must also be changed in the remote Kermit program.
            
            The default value is a start-of-header character, which can be represented as "\0x0001"
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitSendStartupCommand">
            <summary>
            Returns or specifies the command that directs the host Kermit program to send one or more
            files to the local computer. 
            </summary>
            <remarks>
            The default value is "".
            
            This property is most useful for receiving files from the File
            Transfer dialog box, as a way of telling the host Kermit what kinds of files to send or how
            to send them.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitServerStartupCommand">
            <summary>
            Returns or specifies the string sent to the host to start the host Kermit server program,
            either when the KermitStartServer method is executed, or, if the KermitAutomaticServer
            property is set to True, as soon as the user initiates a Kermit file transfer from the
            File Transfer dialog box.
            </summary>
            <remarks>The default value is "". If this string is empty (""), it is assumed that the host Kermit is already in server mode, and no action is taken other than to
            update the emulator's state so that it knows the host is in server mode.</remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitTransferType">
             <summary>
             Returns or specifies the transfer type for Kermit transfers. 
             </summary>
             <remarks>
             This property is
             automatically set every time you perform a Kermit transfer from the File Transfer
             dialog box. The value also becomes the default for the next transfer from the File
             Transfer dialog box. This property has no effect on programmatic transfers—if you
             don't explicitly specify a transfer type, the default is always binary.
             
             The default value is TransferTypeOption.Binary.
            
             TransferTypeOption.ASCII	
                 Sets the default transfer type for Kermit transfers from the File Transfer dialog box to ASCII. 
                 If the KermitTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            
             ·	Relevant Translation options for ASCII transfers (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
                 If KermitTranslateCharacters is set to False, record separator characters may still be still 
                 translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set 
                 to True), and a Ctrl-Z character may be still be appended to the end of the file (if the 
                 WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary	
                 Sets the default transfer type for Kermit transfers from the File Transfer dialog box to binary. 
                 No characters are translated.
             
             TransferTypeOption.AutoDetect	
                 The transfer type is determined by the file extension. Use these properties to determine which 
                 file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitCharacterSetTranslationEnabled">
            <summary>
            This property affects ASCII transfers from the File Transfer dialog box.
            </summary>
            <remarks>
             When this property
            is set to True, Reflection performs the character set translations specified on the Translation
            tab in the File Transfer Setup dialog box, as well as the translations between the host character
            set and the PC character set, as specified on the Emulation tab in the Terminal Setup dialog box.
            
            The default value is false.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitFileNamesTranslationEnabled">
             <summary>
             Returns or specifies whether the File name translation options on the Translation tab
             in the File Transfer Setup dialog box are used for Kermit transfers. 
             </summary>
             <remarks>
             These options 
             correspond to the following properties:
            
                Transfer8Dot3FilenameCase
                TransferReceiveAs8Dot3
                TransferSpacesToUnderscores
                TransferUnderscoresToSpaces
             The default value is false.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitWindowSize">
            <summary>
            If the remote Kermit program supports sliding windows, this property determines 
            the size of a sliding window, in packets.
            </summary>
            <remarks>
             This value is 0-based, so the default 
            value (1) actually configures Reflection for a two-packet sliding window under 
            Kermit. Kermit programs that support sliding windows are often designated "SuperKermit" programs.
            The default value is 1.
            The range of possible values is 0-31.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.PCRecordSeparator">
             <summary>
             Returns or specifies the character that is interpreted as a record separator in a PC ASCII
             file when it is transferred to the host. 
             </summary>
             <remarks>
             This property is only relevant when the 
             UsePCRecordSeparator property is True. 
             For example, this statement specifies that a LF in the PC file should be interpreted as the record
             separator:
            
             FileTransfer.PCRecordSeparator = "\n"
            
             This property only applies to ASCII file transfers using the WRQ/Reflection protocol.
             
             The default value is a carriage return and linefeed, which is represented as:
            
             "\r\n"
            
             The string cannot be more than 259 characters long.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ReadCtrlZAsEOF">
             <summary>
             Returns or specifies whether Reflection interprets Ctrl-Z as the end of file marker in ASCII
             files being sent to the host. 
             </summary> 
             <remarks>
             When this property is set to True, Reflection interprets a 
             Ctrl-Z—represented as Chr$(rcSUB)—as the end-of-file marker and strips it from the file. 
             If you do not want the file transfer to use Ctrl-Z as an end-of-file marker, set this field 
             to False; in this case, the character count in the file folder is used to determine the file length. 
            
             The equivalent property for ASCII transfers from the host is WriteCtrlZAsEOF, which determines whether a Ctrl-Z character should be appended to ASCII files being transferred from the host. 
             The default value is true.
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ReadTabAsSpaces">
            <summary>
            Returns or specifies whether tab characters in local files are converted to space characters. 
            </summary>
            <remarks>
            When this property is set to True, tab characters are converted to space characters as they 
            are sent to the host during ASCII transfers.
            The equivalent property for ASCII transfers from the host is WriteSpacesAsTab.
            
            The default depends on whether you have selected UNIX or OpenVMS defaults. See HostForDefaultSettings 
            for details.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.SpacesPerTab">
            <summary>
            Returns or specifies the number of consecutive spaces that are converted to a single tab
            character (for WriteSpacesAsTab) or the number of spaces that a single tab character is 
            converted into (for ReadTabAsSpaces). 
            </summary>
            <remarks>
             This property is relevant only for ASCII file transfers, when either WriteSpacesAsTab 
            or ReadTabAsSpaces is True.
            
            The default value is 8. 
            The range of values is 1-20. 
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TextFileCharacterSet">
             <summary>
             Returns or specifies whether Reflection uses the ASCII or ANSI character set. 
             </summary>
             <remarks>
             The Windows character set
             (ANSI) is slightly different from the DOS character set (ASCII). If you are receiving an ASCII file
             to be used in the Windows environment, make sure this property is set to TextFileCharacterSetOption.WindowsCharacterSet. The
             value of this property can also affect printing if BypassPrinterDriver and TranslatePrintedCharacters
             are both set to True.
             
             <value>
             The default value is TextFileCharacterSetOption.WindowCharacterSet. 
            
             TextFileCharacterSetOption.DOSCharacterSet	    Reflection uses the DOS (ASCII) character set.
             TextFileCharacterSetOption.WindowsCharacterSet	Reflection use the Windows (ANSI) character set.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferAutoDetectASCIIExtensionList">
            <summary>
            Returns or specifies which file extensions should identify files to be transferred
            as ASCII files during file transfer using the Auto-Detect transfer type. 
            Use "&lt;&gt;" to specify files with no file extension.
            </summary>
            <remarks>
            Use TransferAutoDetectBinaryExtensionList, TransferAutoDetectImageLabelsExtensionList, 
            and TransferAutoDetectScanExtensionList to determine file extensions to be linked to 
            other transfer types.
            Use TransferAutoDetectDefaultType to specify what type of transfer to use when a file 
            extension is not linked to any transfer type. 
            <value>
            The default value is "txt,bat,ini,rcl".
            Use commas to separate file extensions included in the string. Do not include periods with
            the file extensions.
            The string can be up to 259 characters long.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferAutoDetectBinaryExtensionList">
            <summary>
            Returns or specifies which file extensions should identify files to be transferred
            as binary files during file transfer using the Auto-Detect transfer type. 
            Use "&lt;&gt;" to specify files with no file extension.
            </summary>
            <remarks>
            Use TransferAutoDetectASCIIExtensionList, TransferAutoDetectImageLabelsExtensionList, and 
            TransferAutoDetectScanExtensionList to determine file extensions to be linked to other transfer types.
            Use TransferAutoDetectDefaultType to specify what type of transfer to use when a file extension 
            is not linked to any transfer type. 
            <value>
            The default value is "exe,com,dll,gif,rbs".
            Use commas to separate file extensions included in the string. Do not include periods with the 
            file extensions.
            The string can be up to 259 characters long.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferAutoDetectDefaultType">
             <summary>
             This property affects file transfers using the Auto-Detect transfer feature. It returns 
             or specifies what type of file transfer to use when no transfer type has been associated
             with the file extension of a file to be transferred.
             </summary>
             <remarks>
             <value>
             The default value is TransferTypeOption.Scan. 
            
             TransferTypeOption.Binary	Use binary file transfer.
             TransferTypeOption.ASCII	Use ASCII file transfer.
             TransferTypeOption.Labels	Use Labels or Image file transfer.
             TransferTypeOption.Scan	    Reflection determines the file transfer method 
             TransferTypeOption.AskUser	Display a dialog box asking the user what file transfer method to use.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferAutoDetectImageLabelsExtensionList">
            <summary>
            Returns or specifies which file extensions should identify files to be transferred
            between two host computers during file transfer using the Auto-Detect transfer type.
            </summary>
            <remarks>
            This type of file transfer preserves host-specific information in the files.
            Use TransferAutoDetectASCIIExtensionList, TransferAutoDetectBinaryExtensionList, and
            TransferAutoDetectScanExtensionList to determine file extensions to be linked to other transfer types.
            Use TransferAutoDetectDefaultType to specify what type of transfer to use when a file extension 
            is not linked to any transfer type. 
            <value>
            The default value is "".
            Use "&lt;&gt;" to specify files with no file extension. Use commas to separate file extensions 
            included in the string. Do not include periods with the file extensions.
            The string can be up to 259 characters long.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferAutoDetectScanExtensionList">
             <summary>
             This property affects file transfers using the Auto-Detect transfer feature. 
             </summary>
             <remarks>
             It returns 
             or specifies extensions for files that you want Reflection to scan to determine an appropriate
             file transfer type. This example tells Reflection to scan all files with *.bak file extensions
             as well as all files with no file extension.
            
             FileTransfer.TransferAutoDetectScanExtensionList = "bak,&lt;&gt;"
            
             If you want Reflection to scan all files whose extensions have not been linked to a particular
             transfer type, you can use TransferAutoDetectDefaultType.
             
             Use TransferAutoDetectASCIIExtensionList, TransferAutoDetectBinaryExtensionList, and 
             TransferAutoDetectImageLabelsExtensionList, to determine file extensions to be linked to 
             other transfer types.
             <value>
             The default value is "".
             Use "&lt;&gt;" to specify files with no file extension. Use commas to separate file extensions included
             in the string. Do not include periods with the file extensions. 
             The string can be up to 259 characters long.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferDefaultProtocol">
            <summary>Five transfer protocols for sending or receiving files are supported.</summary>
            <remarks>
            	<para>This property returns or specifies which protocol is used by default in the File Transfer dialog box. (Programmatic transfers use methods that are specific
            to a particular protocol—for example, KermitSendFile or WRQReceiveFile).</para>
            	<para>The default value is TransferProtocolOption.WRQ.</para>
            	<list type="bullet">
            		<item>TransferProtocolOption.FTP Specifies FTP as the default protocol.</item>
            		<item>TransferProtocolOption.Kermit Specifies Kermit as the default protocol.</item>
            		<item>TransferProtocolOption.WRQ Specifies WRQ/Reflection as the default protocol.</item>
            		<item>TransferProtocolOption.Xmodem Specifies Xmodem as the default protocol.</item>
            		<item>TransferProtocolOption.Zmodem Specifies Zmodem as the default protocol.</item>
            	</list>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferDownloadDirectory">
            <summary>
            Returns or specifies the default folder for transfers to the local computer. 
            </summary>
            <remarks>This property affects transfers under all supported protocols (WRQ/Reflection, FTP, Kermit, Xmodem, and Zmodem). It does not affect programmatic transfers,
            which are always to the current folder. The default is the User subfolder under the installation folder. The maximum length for this string is 80 characters.</remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferIfFileExistsDefault">
            <summary>
             Returns or specifies what should happen with transfers from the File Transfer dialog box if the
             destination file already exists. 
             </summary>
            <remarks>
            	<para>This property is automatically set every time you perform a transfer from the File Transfer dialog box. The value used for a transfer from the File Transfer
            dialog box becomes the default for the next transfer from the dialog box. This property has no effect on programmatic transfers—if you don't explicitly specify
            an IfFileExists action when you transfer files programmatically, the transfer fails if the destination file already exists (equivalent to
            DestinationDestinationFileExistsOption.Cancel).</para>
            	<para>This property affects transfers under all supported protocols. The default is DestinationDestinationFileExistsOption.AskUser.</para>
            	<para>
            		<strong>DestinationFileExistsOption.Append</strong> The contents of the source file are appended at the end of the destination file.</para>
            	<para>
            		<strong>DestinationFileExistsOption.AskUser</strong> A dialog box prompts the user to specify what should be done.</para>
            	<para>
            		<strong>DestinationFileExistsOption.Cancel</strong> The transfer fails.</para>
            	<para>DestinationFileExistsOption.Delete For transfers to a host, DestinationFileExistsOption.Delete deletes both the contents of the host (destination) file and
            its attributes. For transfers from the host, DestinationFileExistsOption.Delete replaces the local file.</para>
            	<para>
            		<strong>DestinationFileExistsOption.Overwrite</strong> This value is relevant only for WRQ/Reflection transfers. Its effect is host specific: ·</para>
            	<list type="bullet">
            		<item>For transfers to an HP 3000 host, DestinationFileExistsOption.Overwrite replaces the data in the destination file, but does not replace the file's
                attributes (characteristics). This can be a problem in overwriting a smaller file with a larger one: new records are not allocated to accommodate
                additional data, so only part of the file data is transferred. Use DestinationFileExistsOption.Delete to avoid this problem. ·</item>
            		<item>For transfers to a VMS host, DestinationFileExistsOption.Overwrite only replaces the most recent instance of the destination file. ·</item>
            		<item>For transfers to a UNIX host, DestinationFileExistsOption.Overwrite preserves existing symbolic links to the host file.</item>
            	</list>
            	<para>
            		<strong>DestinationFileExistsOption.Purge</strong> This option is available when you're using the WRQ/Reflection protocol, and when you're connected to a
            VMS host or an HP 3000 host. (With an HP 3000 host, this option is equivalent to DestinationFileExistsOption.Delete).</para>
            	<para>If you send a PC file to a VMS host using the DestinationFileExistsOption.Purge option, existing versions of the file on the host are purged following the
            transfer. For example, if you send NOTES.TXT to the host, and NOTES.TXT;2 and NOTES.TXT;3 already exist, a successful transfer results in a single file on the
            host called NOTES.TXT;4. · When transferring to the PC, this option deletes the specified file on the PC (if it exists) and a new file is created.</para>
            	<para>
            		<strong>DestinationFileExistsOption.Rename</strong> Renames the file being transferred if a file of the same name already exists. The last three characters
            of the file's name are changed to 001. If such a file already exists, the file's name is changed to 002, and so on up to 999.</para>
            	<para>
            		<strong>DestinationFileExistsOption.Resume</strong> If the destination file exists, Reflection assumes it is there as the result of an aborted
            download. The file transfer is resumed at the point of interruption. This option is relevant only for Zmodem transfers.</para>
            	<para>
            		<strong>DestinationFileExistsOption.Skip</strong> The file is not transferred and no error is returned. This option is relevant only for
            WRQ/Reflection and Zmodem transfers.</para>
            	<para>
            		<strong>DestinationFileExistsOption.Update</strong> Transfers the file only if the source file is newer than the destination file. This option is relevant
            only for WRQ/Reflection transfers.</para>
            	<para>
            		<strong>DestinationFileExistsOption.UseRemote</strong> Uses the IfFileExists option specified by the remote system. If the remote system doesn't specify a
            IfFileExists option, this option is equivalent to DestinationFileExistsOption.Cancel. This option is relevant only for Zmodem transfers.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.Transfer8Dot3FilenameCase">
             <summary>
             Returns or specifies how case is handled in the names of files sent to the host.
             This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers. 
             </summary>
             <remarks>
             <value>
             The default value is TransferCaseOption.Lowercase.
            
              TransferCaseOption.Uppercase	
                     Host file names are created using all uppercase letters, regardless of the case of
                     the local (source) file.
              TransferCaseOption.Lowercase	
                     Host file names are created using all lowercase letters, regardless of the case of
                     the local (source) file.
              TransferCaseOption.Preserve	
                     The case of the host file name exactly matches the case of the local file name.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferLoggingEnabled">
            <summary>
            Returns or specifies whether file transfer logging is enabled.
            </summary>
            <remarks>
            When TransferLoggingEnabled is True, Reflection stores file transfer information to a 
            log file specified by TransferLogFileName. Use the StartTransferLogging and StopTransferLogging 
            methods to start and stop file transfer logging.
            <value>
            The default value is true.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferLogFileName">
            <summary>
            Returns or specifies the name of the file transfer log file. 
            </summary>
            <remarks>
            When TransferLoggingEnabled is True
            (the default value), you can send file transfer information to this log file using the 
            StartTransferLogging method. Use TransferStopLogging to stop logging. 
            The contents of the log file are cleared each time you use the StartTransferLogging method.
            <value>
            By default, the transfer file is named "Transfer.log" and located in your Reflection user directory.         
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferPresetConfiguration">
            <summary>
             Returns or specifies a string identifying a preset configuration for file transfer.
             </summary>
            <remarks>
            	<para>Changing this property affects other transfer properties depending on the protocol and preset you are using; it is equivalent to changing the Preset
            configuration on the Protocol tab of the File Transfer dialog box. The default and valid values depend on the current value of TransferDefaultProtocol.</para>
            	<para>If WRQ/Reflection is the default protocol, possible values are:</para>
            	<list type="bullet">
            		<item>"(Current Configuration)"</item>
            		<item>"To OpenVMS"</item>
            		<item>"To UNIX"</item>
            		<item>"Troubleshooting to OpenVMS"</item>
            		<item>"Troubleshooting to UNIX"</item>
            	</list>
            	<para>If FTP is the default protocol, possible values are:</para>
            	<list type="bullet">
            		<item>"(Current Configuration)"</item>
            		<item>"To OpenVMS Using Reflection FTP"</item>
            		<item>"To Unisys Using Reflection FTP"</item>
            		<item>"To UNIX Using Microsoft FTP"</item>
            		<item>"To UNIX Using Reflection FTP"</item>
            	</list>
            	<para>If Zmodem is the default protocol, possible values are:</para>
            	<list type="bullet">
            		<item>"(Current Configuration)"</item>
            		<item>"To BBS"</item>
            		<item>"To Host"</item>
            	</list>
            	<para>If Kermit is the default protocol, possible values are:</para>
            	<list type="bullet">
            		<item>"(Current Configuration)"</item>
            		<item>"To BBS"</item>
            		<item>"To CompuServe"</item>
            		<item>"To Kermit Server"</item>
            		<item>"To Remote Kermit Command Mode"</item>
            		<item>"To UNIX Shell"</item>
            	</list>
            	<para>If Xmodem is the default protocol, possible values are:</para>
            	<list type="bullet">
            		<item>"(Current Configuration)"</item>
            		<item>"To BBS or Host{Xmodem}"</item>
            		<item>"Using Xmodem-1K to BBS or Host"</item>
            		<item>"Using Xmodem-CRC to BBS or Host"</item>
            	</list>
            	<para></para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferReceiveTimeout">
            <summary>
            Returns or specifies the maximum number of seconds to wait for a response from the host
            or Reflection during a transfer. 
            </summary>
            <remarks>
            If nothing is received within the period specified, 
            the file transfer program attempts to resynchronize. (The TransferRetryLimit property 
            determines how many times the file transfer program attempts to retransmit the block.)
            This property affects transfers under all supported protocols (WRQ/Reflection, FTP, Kermit, 
            Xmodem, and Zmodem).
            <value>
            The default value is 15. 
            The range of values is 1-9999.
            </value>
            </remarks> 
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferRetryLimit">
            <summary>
            Returns or specifies how many consecutive times to attempt to transmit a packet before 
            abandoning a file transfer. 
            </summary>
            <remarks>
            The interval between retries is determined by the TransferReceiveTimeout property.
            This property affects transfers under all supported protocols (WRQ/Reflection, FTP, Kermit, 
            Xmodem, and Zmodem).
            <value>
            The default value is 10. 
            The range of values is 1-9999.
            </value>
            </remarks> 
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferStartTimeout">
            <summary>
            Returns or specifies the number of seconds the file transfer program should wait 
            for a response from the host before beginning a transfer. If no response is received 
            within this interval, the program abandons the transfer. 
            </summary>
            <remarks>
            This property affects transfers under all supported protocols (WRQ/Reflection, FTP, Kermit, 
            Xmodem, and Zmodem).
            <value>
            The default value is 25. 
            The range of values is 5-9999.
            </value>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferStatusWindowVisible">
            <summary>
            Returns or specifies whether the file transfer status window is displayed while a file transfer is occurring. 
            </summary>
            <remarks>
            <value>
            The default value is true
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferReceiveAs8Dot3">
            <summary>
            Returns or specifies whether the names of received files are automatically truncated
            if they do not conform to the 8-dot-3 file naming convention. 
            </summary>
            <remarks>
            This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers.
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferSpacesToUnderscores">
            <summary>Returns or specifies whether spaces in file names are converted to underscores when files are sent.</summary>
            <remarks>
            This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers. 
            <value>
            The default value is true.
            </value></remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransferUnderscoresToSpaces">
            <summary>Returns or specifies whether underscores in file names are converted to spaces when files are received.</summary>
            <remarks>
            This property affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers.
            <value>
            The default value is false.
            </value></remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.UseHostRecordSeparator">
            <summary>
            Returns or specifies whether Reflection uses the record separator character specified by 
            HostRecordSeparator when an ASCII file is transferred from the host. 
            </summary>
            <remarks>
            This property only applies to ASCII file transfers using the WRQ/Reflection protocol.
            <value>
            The default value is true
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.UsePCRecordSeparator">
            <summary>
            Returns or specifies whether Reflection uses the record separator character specified by 
            PCRecordSeparator when an ASCII file is transferred to the host. 
            </summary>
            <remarks>
            This property only applies to ASCII file transfers using the WRQ/Reflection protocol.
            <value>
            The default value is true
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WriteCtrlZAsEOF">
            <summary>
            When this property is set to True, Reflection automatically adds an end-of-file marker at the 
            end of ASCII files received from the host. 
            </summary>
            <remarks>
            Some older PC programs require the Ctrl-Z end-of-file 
            marker. 
            The equivalent property for ASCII transfers to the host is ReadCtrlZAsEOF, which determines whether
            the Ctrl-Z at the end of PC files should be copied to the host during an ASCII file transfer. 
            This property is relevant only for ASCII file transfers from the host. 
            <value>
            The default value is false
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WriteSpacesAsTab">
            <summary>
            Returns or specifies whether Reflection replaces spaces with tabs during ASCII file transfers
            from the host. 
            </summary>
            <remarks>
            You can replace consecutive spaces with tabs by setting this property to True. 
            Replacing spaces with tabs can save a lot of disk space. The SpacesPerTab property determines h
            ow many consecutive spaces Reflection will translate into a single tab character.
            On the PC this value is also used to control replacement of tabs with spaces when logging to 
            disk or copying from display memory. 
            <value>
            The default value is false
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQCompression">
            <summary>
             Returns or specifies how file compression is handled.
             </summary>
            <remarks>
            	<para>File compression speeds up file transfers. Huffman compression uses considerable processing power on the host and the local computer, but compresses very
            effectively. For most users, WRQCompressionOption.Huffman is recommended. Users with a very fast datacomm link or less computing power might prefer to use
            WRQCompressionOption.RLE (run-length compression) or WRQCompressionOption.None (no compression). You can try comparing transfer times using different
            compression values.</para>
            	<para>Compression is not always appropriate. For example, if you use compression to transfer a file that's already in a compressed format, you can slow the
            transfer. If the WRQFastFileTransfer property is set to True, fast file transfers are attempted. I f a fast file transfer takes place, the WRQCompression
            property is ignored. This property is relevant only for transfers that use the WRQ/Reflection protocol. The default value is WRQCompressionOption.Huffman.
            WRQCompressionOption.Huffman Perform Huffman compression on transfers. WRQCompressionOption.None Perform no compression on transfers. WRQCompressionOption.RLE
            Perform run-length compression on transfers.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQEndOfFrameCharacter">
            <summary>
            Returns or specifies the character that is to indicate the end of a file transfer frame. 
            </summary>
            <remarks>
            If WRQFastFileTransfer is True, fast file transfers are attempted. If a fast
            file transfer takes place, the WRQEndCharacter property is ignored.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default is the end of text character, represented "\0x0003" 
            The value can be any control character with an ASCII value of less than 32—that is, "\0x0000" 
            through "\0x001f" — or the close-parenthesis character, ")". 
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQExtraCharacters">
            <summary>
             This property is relevant only when WRQTransferLink is set to TransferLinkOption.UserDefinedLink. 
             </summary>
            <remarks>Returns or specifies characters to be converted into printable ASCII characters during file transfers. See the information on file transfer configuration in
            your the user Help for further information. If WRQFastFileTransfer is True, fast file transfers are attempted. If a fast file transfer takes place, the
            WRQExtraCharacters property is ignored. This property is relevant only for transfers that use the WRQ/Reflection protocol. The default is "" (no characters).
            The value can be a string of control characters with a ASCII values of less than 32—that is, "\0x0000" through "\0x001f" — or greater than 127. The maximum
            length of the string is 32 characters</remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQFastCompression">
            <summary>
            Returns or specifies whether Reflection compresses files transferred using fast file transfer. 
            </summary>
            <remarks>
            If you have a fast network but comparatively slow CPU, set this property to False so fast 
            file transfer won't use compression. However, if you have one of the faster CPUs currently 
            available in today's market (for both PCs and hosts), setting this property to True speeds up 
            the file transfer.
            Use WRQFastFileTransfer to specify whether Reflection should attempt to use the fast file transfer 
            feature. 
            <value>
            The default value is False.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQFastFileTransfer">
            <summary>
             Returns or specifies whether Reflection should attempt to use the fast file transfer feature. 
             </summary>
            <remarks>
            	<para>With this feature, you can move files between your PC and the host many times faster than with the standard file transfer protocol. This property is
            relevant only when your host connection is through a network using the LAT, Telnet, or NS/VT protocol. Use WRQFastCompression to specify how compression is
            handled during fast file transfers. When fast file transfer is in effect, the following properties are ignored during file transfers: WRQCompression
            WRQEndCharacter WRQExtraCharacters WRQFrameSize WRQStartCharacter WRQTransferLink WRQWindowSize If you use the StartTrace method when fast file transfer is in
            effect, you won't be able to capture the actual flow of data. If you run VAXLINK2 with the L parameter, a host log file is not created. It may be necessary to
            set this property to WRQFastFileTransferOpton.Never for sending ASCII files with records larger than 32767 bytes. The transfer will fail and an error message
            is displayed if this is necessary.</para>
            	<para>This property is relevant only for transfers that use the WRQ/Reflection protocol. The default value is WRQFastFileTransferOption.Negotiate.</para>
            	<list type="bullet">
            		<item>For WRQFastFileTransferOption.Always, fast file transfer is always used. The transfer fails if the fast file transfer feature cannot be used.</item>
            		<item>For WRQFastFileTransferOption.Never, fast file transfer is never used.</item>
            		<item>For WRQFastFileTransferOption.Negotiate, an attempt is made to use the fast file transfer feature. If a fast file transfer is not
                possible, a standard transfer is used.</item>
            	</list>
            	<para></para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQFrameSize">
             <summary>
             Returns or specifies the total length of a file transfer packet (in characters), including
             the start and end characters, but not the delimiting character. 
             </summary>
             <remarks>
             For a VMS host, if WRQFrameSize is set to a value higher than 512 and WRQWindowSize is set
             to a value higher than 1, the window size is temporarily adjusted down to 1 for file transfers. 
             If WRQFastFileTransfer is True, fast file transfers are attempted. If a fast file
             transfer takes place, the WRQFrameSize property is ignored.
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             <value>
             The default depends on whether you have selected UNIX or OpenVMS defaults. See HostForDefaultSettings
             for details. The range of values is 32-1024.
             </value>
             </remarks>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown if a value outside the range of valid values is specified.
             </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQFrameTerminator">
            <summary>
            Returns or specifies which character comes at the end of a file transfer packet. This character
            causes a host read operation to complete. 
            </summary>
            <remarks>
            If WRQFastFileTransfer is True, fast file transfers are attempted. If a fast file
            transfer takes place, the WRQFrameTerminator property is ignored.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is a carriage return, represented in Basic as Chr$(13) or C# as "\r"       
            The value can be any control character with an ASCII value of less than 32—that is, 
            Chr$(0) through Chr$(31)—or the open parenthesis character. It is recommended that you not 
            set this property to Chr$(0), Chr$(2), Chr$(17), Chr$(19), or Chr$(25). 
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQHostErrorMessage">
            <summary>
            Returns the host error message for a failed WRQ/Reflection protocol file transfer. 
            </summary>
            <remarks>
            Use this property whenever WRQSendFile or WRQReceiveFile generates an error. 
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQHostRecordSize">
             <summary>
             Returns or specifies the record size (in bytes) for files transferred to the host.
             </summary>
             <remarks>
             The default value—0—specifies that the record size for the host file is to be determined by the host. 
             When you send binary files they are divided up into fixed-length records containing n bytes, where 
             n is the value of WRQHostRecordSize. The last record contains the remainder (assuming the total 
             number of bytes in the file is not evenly divisible by n). 
            
             When you send an ASCII file, any records containing more than n bytes, where n is the value of 
             WRQHostRecordSize, are split up into smaller records. 
             A host record size specified with an attribute argument to the WRQSendFile method takes precedence 
             over the value of WRQHostRecordSize. 
             A value of 80 is standard for many text editors; 132 is appropriate for many printers. 
             If you don't know what size to use for a particular host program, check other host files used by 
             the same program. 
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             <value>
             The default value is 0.
             The range of values is 0-32767.
             </value>
             </remarks>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown if a value outside the range of valid values is specified.
             </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQHostSystem">
             <summary>
             Returns or specifies the expected type of host.
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <remarks>
             <value>
             The default depends on whether you have selected UNIX or OpenVMS defaults. See HostForDefaultSettings for details.
             The possible values are:
            
             HostSystemTypeOption.HP1000	Defines the HP 1000 as the host system type.
             HostSystemTypeOption.HP3000	Defines the HP 3000 as the host system type.
             HostSystemTypeOption.VMS	Defines VMS as the host system type.
             HostSystemTypeOption.UNIX	Defines UNIX as the host system type.
             HostSystemTypeOption.Other	Defines Other as the host system type.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQKeepFile">
            <summary>
            Returns or specifies whether a copy of the file being sent should be kept
            on the host. 
            </summary>
            <remarks>
            This property is relevant for files being submitted to the default 
            print or batch queue, which are otherwise deleted automatically after they are 
            submitted to these queues.
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem
            is set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is False.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQMPEFileNames">
            <summary>
             Version 5.0 of the MPE operating system .
             </summary>
            <remarks>
            	<para>Version 5.0 of the MPE operating system supports two naming systems for file names: · Traditional MPE file names. File names must be all uppercase, no
            longer than eight characters, and must conform to the FILENAME.GROUP.ACCOUNT folder structure format. · Version 5.0 POSIX file names. File names can be mixed
            case and of any length, using a fully hierarchical folder structure. MPE file names are a subset of POSIX names. All MPE file names are visible from within
            POSIX (for example, PCLINK2.PUB.SYS appears as /SYS/PUB/PCLINK2), but only POSIX files with names that are also valid as MPE file names are visible from MPE.
            Use this property to return (first syntax line) or specify (second syntax line) which naming convention to use.</para>
            	<para>This file name structure is used for host file names during file transfers, and it also determines how the file names appear in the File Transfer dialog box
            if you choose the Show Host Files button. When WRQMPEFilenames is set to WRQMPEFileNamesOption.MPE, files beginning with a period or a forward slash (. or /)
            are interpreted as POSIX files. This property is only relevant for transfers to HP 3000 hosts (that is, when WRQHostSystem is set to
            HostFileSystemOption.HP3000). This property is relevant only for transfers that use the WRQ/Reflection protocol.</para>
            	<para>The default value is WRQMPEFileNamesOption.MPE. WRQMPEFileNamesOption.Auto The host program determines which naming system to use. WRQMPEFileNamesOption.MPE
            Reflection uses traditional MPE file names, unless a name begins with a forward slash or a period, in which case the name is assumed to be a POSIX name.
            WRQMPEFileNamesOption.POSIX Reflection uses POSIX file names. WRQMPEFileNamesOption.MPEOnly Reflection uses traditional MPE file names, reporting any file name
            beginning with a forward slash or a period as invalid.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQMPEStream">
             <summary>
             Native POSIX files under version 5.0 of the MPE operating system support a record format known
             as "stream," which is just a stream of bytes.
             </summary>
             <remarks>
              Files created under the POSIX shell or by POSIX
             programs have this format by default. Files created from the MPE command interpreter or by MPE
             programs can be stream files. 
             Interoperability between stream files and other record formats is automatic. This means an MPE
             program can read from a stream file and it will appear to be a traditional variable-length record
             file, and a POSIX program will see all files as stream files. MPE does the translation automatically. 
            
             If you want all files that you send to the host to have the stream format, set this property to True
             (when you receive files from the host, the WRQ/Reflection protocol automatically detects the record 
             format of the host file and performs the correct translation). When WRQMPEStream is set to False, 
             PCLINK2 defaults to a Fixed record format for ASCII files and a Variable record format for binary files. 
             This property is relevant only for transfers to MPE hosts (that is, when WRQHostSystem is set to WRQMPEFileNamesOption.HP3000).
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             <value>
             The default value is false.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQPreserveCounts">
            <summary>
            Returns or specifies whether record byte counts are transferred with data during a binary 
            transfer to the host. 
            </summary>
            <remarks>
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem is set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQPreserveDate">
            <summary>
            Returns or specifies whether the destination file receives its creation date and time 
            from the source file.
            </summary>
            <remarks>
             When this property is set to False, the destination file receives 
            its creation date from the time of the transfer.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQQEditFormat">
            <summary>
            Returns (first syntax line) or specifies (second syntax line) whether HP 3000 host files 
            are created with the QEDIT format.
            </summary>
            <remarks>
            This property is only relevant for transfers to HP 3000 hosts (that is, when WRQHostSystem 
            is set to HostSystemTypeOption.HP3000).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQRemoveFileExtension">
            <summary>
            Returns or specifies whether the DOS file name extension is automatically stripped when 
            files are sent to the host without explicit specification of the host file name.
            </summary>
            <remarks>
            This property is only relevant for transfers to HP 3000 hosts (that is, when WRQHostSystem 
            is set to HostSystemTypeOption.HP3000).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is true.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQSendSpooled">
            <summary>
            Returns or specifies whether files are sent to a spooled device on the host.
            </summary>
            <remarks>
            This property is only relevant for transfers to HP 3000 hosts (that is, when 
            WRQHostSystem is set to HostSystemTypeOption.HP3000).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is true.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQHiddenFoldersVisible">
             <summary>
             Returns or specifies whether hidden folders (with names beginning with a period) 
             on a UNIX host are displayed in the File Transfer dialog box, when the host folder 
             list is displayed.
             </summary>
             <remarks>
             This property is only relevant for transfers to UNIX hosts (that is, when WRQHostSystem 
             is set to HostSystemTypeOption.UNIX).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
             <value>
             The default value is false.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQRecordSizeVisible">
            <summary>
            Returns or specifies whether the Host record size edit control is displayed in the
            File Transfer dialog box.
            </summary>
            <remarks>
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQStartOfFrameCharacter">
            <summary>
            Returns or specifies which character is to indicate the beginning of a file transfer frame. 
            </summary>
            <remarks>
            If WRQFastFileTransfer is True, fast file transfers are attempted. If a fast 
            file transfer takes place, the WRQStartCharacter property is ignored.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default is the start-of-text character, which can be represented as Chr$(2). 
            The value can be any control character with an ASCII value of less than 32—that is, Chr$(0) through Chr$(31)
            or the open-parenthesis character. (It is recommended that you not set this property to Chr$(0),
            Chr$(13), Chr$(17), Chr$(19), or Chr$(25).
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQStartupCommand">
            <summary>
            Returns or specifies the host startup command for the WRQ/Reflection transfer protocol.
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            </summary>
            <remarks>
            <value>
            The default depends on whether you have selected UNIX or OpenVMS defaults. 
            See HostForDefaultSettings for details.
            This string can be up to 80 characters long; if you attempt to set it to a string of 
            more than 80 characters, all characters after the 80th character are stripped.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQSubmitBatch">
            <summary>
            Returns or specifies whether a file is submitted to the batch queue upon completion of
            an ASCII transfer to a VMS host.
            </summary>
            <remarks>
             Once a file has been submitted to the batch queue, it is 
            automatically deleted on the host unless the WRQKeepFile property is True.
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem is 
            set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQSubmitPrint">
            <summary>
            Returns or specifies whether a file is submitted to the print queue upon completion of
            an ASCII transfer to a VMS host. 
            </summary>
            <remarks>
            Once a file has been submitted to the print queue, it is
            automatically deleted on the host unless the WRQKeepFile property is True.
            This property is only relevant for transfers to VMS hosts (that is, when WRQHostSystem is
            set to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQTransferLink">
             <summary>
             Returns or specifies the extent to which nonprinting ASCII characters are automatically 
             converted to printing ASCII characters during file transfers. 
             </summary>
             <remarks>
             If WRQFastFileTransfer is True, fast file transfers are attempted. If a 
             fast file transfer takes place, the WRQTransferLink property is ignored.
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             <value>
             The default value is TransferLinkOption.EightBitLink. 
            
             TransferLinkOption.EightBitLink	
                 Only a small number of nonprinting ASCII characters are converted. Setting WRQTransferLink to 
                 EightBitLink automatically sets WRQStartCharacter to the start-of-text character, represented as 
                 Chr$(2), and sets WRQEndCharacter to the end-of-text character, represented as Chr$(3). It also
                 specifies that characters specified with WRQExtraCharacters should be ignored. 
             
             TransferLinkOption.SevenBitLink	
                 All nonprinting ASCII characters are converted. Using this value may cause a noticeable slowdown
                 in the speed of the transfer. Setting WRQTransferLink to SevenBitLink automatically sets 
                 WRQStartCharacter to "(" and WRQEndCharacter to ")". It also specifies that characters 
                 specified with WRQExtraCharacters should be ignored.
             
             TransferLinkOption.UserDefinedLink	
                 All characters that would be converted under EightBitLink are converted, along with additional 
                 characters as specified with the WRQExtraCharacters property.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQTransferType">
            <summary>
             Returns or specifies the transfer type for transfers from the File Transfer dialog box. 
             </summary>
            <remarks>
            	<para>This property is automatically set every time you perform a WRQ/Reflection transfer from the dialog box. The value also becomes the default for the next
            transfer from the dialog box. This property has no effect on programmatic transfers—if you don't explicitly specify a transfer type with WRQSendFile or
            WRQReceiveFile, the default is always ASCII. This property is relevant only for transfers that use the WRQ/Reflection protocol. The default value is
            TransferTypeOption.ASCII. TransferTypeOption.ASCII: Specifies ASCII file transfer.</para>
            	<para>The ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box) are applied to the data in the file as it is
            transferred. TransferTypeOption.Binary Specifies binary file transfer. Data in the file is not translated as it is transferred. TransferTypeOption.AutoDetect
            File transfer type is determined by the file extension. Use these properties to determine which file extensions are linked to which transfer type:
            TransferAutoDetectDefaultType TransferAutoDetectASCIIExtensionList TransferAutoDetectBinaryExtensionList TransferAutoDetectImageLabelsExtensionList
            TransferAutoDetectScanExtensionList TransferTypeOption.Image Host to host Image/Labels transfer (TransferTypeOption.Labels is a valid synonym).</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQTransferWithAttributes">
            <summary>
            Returns or specifies whether attribute information is included with a file being received
            from the host.
            </summary>
            <remarks>
            This property is relevant only for transfers that use the WRQ/Reflection protocol. 
            For binary transfers, WRQTransferWithAttributes is equivalent to using TransferTypeOption.Image
            as the value of the TransferType argument with the WRQSendFile method. The main use of this
            property is to receive ASCII files from the host and retain their attribute information.
            <value>
            The default value is false. 
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQTranslateCarriageCtrl">
            <summary>
            Returns or specifies whether FORTRAN and PRINT carriage control characters in VMS files are translated. 
            </summary>
            <remarks>
            This property is only relevant for receiving files from VMS hosts (that is, when WRQHostSystem is set
            to HostSystemTypeOption.VMS).
            This property is relevant only for transfers that use the WRQ/Reflection protocol.
            <value>
            The default value is false
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQUseBlockReads">
             <summary>
             Returns or specifies whether VAXLINK2, the VMS host transfer program, is forced to read files
             in block mode rather than record mode.
             </summary>
             <remarks>
              For certain files in non-standard formats, this transfers
             every byte in the file without regard to record lengths or carriage controls. Setting this property
             to True is equivalent to using TransferTypeOption.Image as the TransferType (with WRQReceiveFile),
             but omitting the image header information.
            
             This property is only relevant for transfers from VMS hosts (that is, when WRQHostSystem is 
             set to HostSystemTypeOption.VMS).
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             <value>
             The default value is false.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQWindowSize">
             <summary>
             The WRQ/Reflection file transfer protocol is a sliding-window protocol. This property returns or
             specifies the number of packets that one side can receive before sending an acknowledgment. For 
             transfers to or from HP 3000 hosts, this property must be set to 1. 
             If WRQFastFileTransfer is True, fast file transfers are attempted. If a fast file 
             transfer takes place, the WRQWindowSize property is ignored.
            
             This property is relevant only for transfers that use the WRQ/Reflection protocol.
             </summary>
             <value>
             The default value is 2.
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.XmodemExtension">
             <summary>
             Returns or specifies what type of Xmodem error checking is performed, 
             as well as the Xmodem packet size.
             </summary>
             <remarks>
             <value>
             The default value is XModemErrorCheckingOption.XmodemCRC. 
            
             XModemErrorCheckingOption.None	    Specifies 1-byte checksum and 128-byte packets.
             XModemErrorCheckingOption.XmodemCRC	Specifies 2-byte CRC and 128-byte packets.
             XModemErrorCheckingOption.Xmodem1k	Specifies 2-byte CRC and 1024-byte packets.
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.XmodemTransferType">
             <summary>
             Returns or specifies the transfer type for Xmodem transfers from the File Transfer dialog box.
             </summary>
             <remarks>
             This property is automatically set every time you perform an Xmodem transfer from the dialog box.
             The value also becomes the default for the next transfer from the dialog box. This property has
             no effect on programmatic transfers—if you don't explicitly specify a transfer type, the default
             is always binary.
             <value>
             Values
            
             The default value is TransferTypeOption.Binary.
            
             TransferTypeOption.ASCII	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to ASCII. 
                 If the FTPTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
                 If FTPTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl-Z character may be still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to binary. 
                 Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect	
                 The transfer type is determined by the file extension. Use these properties to determine 
                 which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.XmodemCharacterSetTranslationEnabled">
            <summary>
            When this property is set to True, Reflection performs the character set translations
            specified on the Translation tab in the File Transfer Setup dialog box, as well as the
            translations between the host character set and the PC character set, as specified on the
            Emulation tab in the Terminal Setup dialog box.
            </summary>
            <remarks>
            This property affects ASCII transfers.
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemAutoDownload">
            <summary>
            Returns or specifies whether Reflection takes advantage of Zmodem's automatic download feature.
            </summary>
            <remarks>
            With this feature, Reflection immediately starts receiving a remote file as soon as it detects a
            Zmodem header. When you set this property to False, you must start the remote system Zmodem send
            program and then use ZmodemReceiveFile to initiate a download. 
            <value>The default value is true.</value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemDeleteCancelledReceives">
            <summary>
            Returns or specifies what happens when you cancel a Zmodem receive.
            </summary>
            <remarks>
            <value>The default value is true.</value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemPacketSize">
            <summary>
            Returns or specifies the sub-packet size for file transfers to the remote system; 
            this tells Zmodem how many bytes of data to transfer at a time. 
            </summary>
            <remarks>
            The default value works
            in most situations. 
            <value>
            The default value is 1024. 
            The range of values is 32-1024.
            </value>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if a value outside the range of valid values is specified.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemReceiveStartupCommand">
            <summary>
            When you send a file from the PC to the host using the Zmodem protocol, this command is
            transmitted to the host. 
            </summary>
            <remarks>
            It should contain the name of the program that starts the Zmodem
            receive command on the host. If you do not specify a receive startup command, you must
            manually start the host's Zmodem receive program before you can send files. 
            This property is only necessary when sending files to a host system; it is not required for
            transferring files to a bulletin board. 
            <value>
            The default value is "".
            This string can be up to 80 characters long. 
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemSendStartupCommand">
            <summary>
            When you initiate a receive from the host using the Zmodem protocol, this command and the host
            file name are transmitted to the host. 
            </summary>
            <remarks>
            This value should contain the name of the program that
            starts Zmodem sends on the host. If you do not indicate a send startup command, you must manually
            start the host's Zmodem send program before you can receive the host file. For VMS hosts,
            this command must be defined as a foreign command. 
            This property is only necessary for receiving files from a host system; it is not required for
            downloading files from a bulletin board. 
            <value>
            The default value is "".
            This string can be up to 80 characters long. 
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemTransferType">
             <summary>
             Returns or specifies the transfer type for Zmodem transfers from the File Transfer dialog
             box. 
             </summary>
             <remarks>
             This property is automatically set every time you perform a Zmodem transfer from the
             dialog box. The value also becomes the default for the next transfer from the dialog box.
             This property has no effect on programmatic transfers—if you don't explicitly specify a
             transfer type, the default is always binary.
             <value>
             Values
            
             The default value is TransferTypeOption.Binary.
            
             TransferTypeOption.ASCII	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to ASCII. 
                 If the FTPTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
                 If FTPTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl-Z character may be still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary	
                 Sets the default transfer type for FTP transfers from the File Transfer dialog box to binary. 
                 Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect	
                 The transfer type is determined by the file extension. Use these properties to determine 
                 which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList
             </value>
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemCharacterSetTranslationEnabled">
            <summary>
            When this property is set to True, Reflection performs the character set translations specified
            on the Translation tab in the File Transfer Setup dialog box, as well as the translations between
            the host character set and the PC character set, as specified on the Emulation tab in the Terminal
            Setup dialog box.
            </summary>
            <remarks>
            This property affects ASCII transfers.
            <value>
            The default value is false.
            </value>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemFileNamesTranslationEnabled">
             <summary>
             Returns or specifies whether the File name translation options on the Translation tab in the
             File Transfer Setup dialog box are used for Zmodem transfers. 
             </summary>
             <remarks>
             These options correspond to the
             following properties:
            
             Transfer8Dot3FilenameCase
             TransferReceiveAs8Dot3
             TransferSpacesToUnderscores
             TransferUnderscoresToSpaces
             <value>
             The default value is false.
             </value>
             </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.AbortTransfer">
            <summary>
            	<para>Aborts a file transfer in progress (for any of the supported transfer protocols: Kermit, WRQ/Reflection, Xmodem, or Zmodem) without communicating with the
            host program. This method is more drastic than CancelTransfer, and may leave the host in an unpredictable state. Use AbortTransfer only if you believe the host
            transfer program has stopped responding; otherwise use CancelTransfer.</para>
            	<para>This method is not likely to be useful in a macro because all transfer methods must complete execution before subsequent commands are executed.
            AbortTransfer can be useful for mapping to custom items such as toolbar buttons, keystrokes or events. You could also use this method if you are using
            automation. For example, you could use stand-alone Visual Basic .NET to create a form with an Abort button to abort a transfer in progress.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.CancelTransfer">
            <summary>
            	<para>Attempts to cancel a file transfer in progress (for any of the supported transfer protocols: Kermit, WRQ/Reflection, Xmodem, or Zmodem) by shutting down the
            host program. Use AbortTransfer if you think the host program has stopped responding.</para>
            	<para>This method is not likely to be useful in a macro because all transfer methods must complete execution before subsequent commands are executed.
            AbortTransfer can be useful for mapping to custom items such as toolbar buttons, keystrokes or events. You can also use this method if you are using
            automation. For example, you could use stand-alone Visual Basic .NET to create a form with a Cancel Transfer button to cancel a transfer in progress.</para>
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPGetCurrentHostDirectory">
            <summary>
            Returns the current host directory used for FTP file transfers. This method is only valid when 
            Reflection is connected to the host FTP server; use FTPStartServer to connect to the server before
            using this method.
            </summary>
            <returns>The current host directory.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String)">
             <summary>
             Transfers one or more files from the host to the PC using FTP (file transfer protocol). Use
             FTPStartServer to connect to the host server before using this method. Use FTPStopServer to
             disconnect from the host server after file transfer is complete. 
             </summary>
             <param name="localFile">Specifies a local file. This string can be empty or can contain just drive and path information, in which case the host filename is used to generate a local filename. This string cannot contain wildcard characters.</param>
             <param name="remoteFile">Specifies a host file or files to be transferred. This string can contain wildcard characters (to transfer multiple files). The wildcard characters must be appropriate for the host system.</param>
             <param name="transferType">
             TransferTypeOption.ASCII:
            
             Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
             on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
             transferred.
            
             TransferTypeOption.Binary
            
             Specifies binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileExists">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
             Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
             Stops the transfer.
            
             DestinationFileExistsOption.Update
            
             Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
             Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
             Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
             Renames the file being transferred. The existing file retains the original name. The last three 
             characters of the file being transferred are changed to 001. If such a file already exists, the file's 
             name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
             Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String)">
             <summary>
             Transfers one or more files from the PC to the host using FTP file transfer protocol. Use FTPStartServer
             to connect to the host server before using this method. Use FTPStopServer to disconnect from the host
             server after file transfer is complete. 
             </summary>
             <param name="localFile">Specifies a local file. This string can be empty or can contain just drive and path information, in which case the host filename is used to generate a local filename. This string cannot contain wildcard characters.</param>
             <param name="remoteFile">Specifies a host file or files to be transferred. This string can contain wildcard characters (to transfer multiple files). The wildcard characters must be appropriate for the host system.</param>
             <param name="transferType">
             TransferTypeOption.ASCII:
            
             Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
             on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
             transferred.
            
             TransferTypeOption.Binary
            
             Specifies binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
             File transfer type is determined by the file extension. Use these properties to determine which file
             extensions are linked to which transfer type:
            
             TransferAutoDetectDefaultType
             TransferAutoDetectASCIIExtensionList        
             TransferAutoDetectBinaryExtensionList
             </param>
             <param name="fileExists">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
             Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
             Stops the transfer.
            
             DestinationFileExistsOption.Update
            
             Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
             Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
             Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
             Renames the file being transferred. The existing file retains the original name. The last three 
             characters of the file being transferred are changed to 001. If such a file already exists, the file's 
             name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
             Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPSetCurrentHostDirectory(System.String)">
            <summary>
            Sets the current host directory used for FTP file transfers. This method is only valid when Reflection
            is connected to the host FTP server; use FTPStartServer to connect to the server before using this
            method.
            </summary>
            <param name="hostDirectory">The host directory.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPStartServer(System.String,System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.FTPServerOption)">
             <summary>
             Connects to a host server in preparation for FTP file transfers. Use FTPSendFile and FTPReceiveFile
             to transfer files. Use FTPStopServer to disconnect from the host FTP server. 
             If your settings file is not already configured for FTP protocol, use TransferDefaultProtocol to set 
             the transfer protocol, and TransferPreset to set the host server type.
             Most menu commands and all toolbar buttons are disabled when Reflection is in server mode.
             </summary>
             <param name="userName">
             Specifies the user name. If this argument is null or empty, Reflection uses the current FTP User Name 
             (which can be set using the FTP tab of the File Transfer dialog box, or using the FTPUserName property). 
             If no FTP User Name has been set, Reflection displays the FTP Log In dialog box unless FTPServerOptions.NoLoginDialog
             is specified in the Options argument. If FTPServerOptions.NoLoginDialog is specified, FTPStartServer
             returns an error when UserName is not specified and no FTP User Name has been set. If FTPServerOptions.Anonymous
             is specified in the Options argument, the UserName argument is ignored. 
             </param>
             <param name="password">
             Specifies the FTP password. If this argument is null or empty, Reflection uses the current FTP Password
             (which can be set using the FTP tab in the File Transfer dialog box, or using the FTPPassword property).
             If no password has been set, Reflection displays the FTP Log In dialog box unless FTPServerOptions.NoLoginDialog
             is specified in the Options argument. If FTPServerOptions.NoLoginDialog is specified, FTPStartServer
             generates an error when Password is not specified and no password has been set. 
             </param>
             <param name="hostName">
             Specifies the host name or IP address. If this argument is null or empty, the current value of 
             FTPHostName is used. 
             </param>
             <param name="options">
             Specifies additional, non-default behavior for the method. The possible values are:
            
             FTPServerOption.Anonymous
            
                 Specifies that Reflection should use anonymous FTP when performing this transfer.
            
             FTPServerOption.NoLogInDialog
            
                 Specifies that no FTP Log In dialog should appear if the FTP user name or password is not supplied.
            
             You can combine the two options by adding these values.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FTPStopServer">
            <summary>
            Disconnects from a host server connected by FTPStartServer. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption)">
             <summary>
             Transfers one or more files from a remote computer running a Kermit program to the local computer, using the Kermit file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain drive and path information. It can also be just a 
             folder name, in which case the remote file name is used to generate a local file name. This string 
             cannot contain wildcard characters. If this string is empty (""), the remote filename is used to 
             generate a local filename.
             </param>
             <param name="remoteFile">
             Specifies a file on the remote system. This string can contain wildcard characters. If this string is 
             empty (""), the filename must be specified by the remote Kermit program.
             </param>
             <param name="transferType">
             Specifies what type of file is being transferred. The TransferTypeOption.Binary option is generally appropriate
             for most transfers, including transfers from bulletin boards. Use TransferTypeOption.ASCII when 
             you're sure you want characters translated. The possible values are:
            
             TransferTypeOption.ASCII
            
             Specifies an ASCII file transfer. If the KermitTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
             If KermitTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
             Specifies a binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileExists">
             Specifies what to do if the received file already exists on the PC. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
             Prompts the user to specify what to do.
            
             DestinationFileExistsOption.Cancel
            
             Stops the transfer.
            
             DestinationFileExistsOption.Delete
            
             Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
             Appends the data to the existing file.
            
             DestinationFileExistsOption.Rename
            
             Renames the file being transferred. The existing file retains the original name. The last three 
             characters of the file being transferred are changed to 001. If such a file already exists, the 
             file's name is changed to 002, and so on, up to 999.
             </param>
             <returns></returns>        
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption)">
             <summary>
             Transfers a file from the local computer to the remote system using the Kermit file transfer protocol. 
             There is no IfFileExists option for this method because that aspect of the transfer is controlled by 
             the remote system.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain wildcard characters.
             </param>
             <param name="remoteFile">
             Specifies a file on the remote system. This string cannot contain wildcard characters. If this string is empty, the local 
             file name is used to generate a remote filename.
             </param>
             <param name="transferType">
             Specifies what type of file is being transferred. The TransferTypeOption.Binary option is generally appropriate
             for most transfers, including transfers from bulletin boards. Use TransferTypeOption.ASCII when 
             you're sure you want characters translated. The possible values are:
            
             TransferTypeOption.ASCII
            
             Specifies an ASCII file transfer. If the KermitTranslateCharacters property is set to True, the following translations are performed:
            
             ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
             ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer Setup dialog box). 
            
             If KermitTranslateCharacters is set to False, record separator characters may still be translated to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True), and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
             Specifies a binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <returns></returns> 
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitStartServer">
            <summary>
            Starts a remote Kermit program in server mode. The command used to start the server is defined by the 
            KermitServerStartupCommand property. If that command fails to start the remote Kermit program, 
            this method will still set the local flag indicating that the remote program is in server mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.KermitStopServer(Attachmate.Reflection.Emulation.OpenSystems.KermitStopServerOption)">
             <summary>
             Instructs a remote Kermit program running in server mode to shut down.
             </summary>
             <param name="option">
             Specifies whether this method logs off from the remote computer, in addition to shutting down the server 
             Kermit program. The values are:
             
             KermitStopServerOption.NoLogoff
            
                 KermitStopServer does not log off the remote server when shutting down the server Kermit program. 
                 This is the default action if no Logoff argument is included.
            
             KermitStopServerOption.Logoff
            
                 KermitStopServer does log off the remote server when shutting down the server Kermit program.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.StartTransferLogging">
            <summary>
            Initiates file transfer logging.
            When TransferLoggingEnabled is True (the default value), Reflection stores file transfer 
            information to a log file specified by the TransferLogFileName property. Use StopTransferLogging 
            method to stop logging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.StopTransferLogging">
            <summary>
            Stops file transfer logging. 
            When TransferLoggingEnabled is True (the default value), Reflection stores file transfer 
            information to a log file specified by the TransferLogFileName property. Use StartTransferLogging 
            method to start logging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.TransmitFile(System.String,System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransmitFileOption)">
             <summary>
             Transmits the specified file to the host.
             If the ReadTabAsSpaces property is True and the TransmitFilesOption.NoTranslation option is not specified, 
             tab characters in the file are converted to spaces as they are transmitted to the host.
             If the ReadCtrlZAsEOF property is True and the TransmitFilesOption.NoTranslation option is not specified, 
             a Ctrl+Z character in the file will terminate the method.
             </summary>
             <param name="fileName">
             The name of the file to transmit. Supply complete path information if the file isn't on the 
             Reflection macro path.
             </param>
             <param name="pause">
             Specifies the amount of time to pause between each line of the file, in HH:MM:SS.hh format. 
             If this argument is empty (""), Reflection does not pause between lines 
             (though it may wait for PromptChar if one is specified).
             </param>
             <param name="promptChar">
             Specifies a character Reflection is to wait for between lines of the file. 
             </param>
             <param name="option">
             Specifies additional, non-default behavior for the method. There are two options for this method:
             
             TransmitFileOption.NoTranslation
            
                 Indicates that the file contains binary data, and should not be translated from the PC character set into the host character set. Use this option if the file contains characters that are already in the host character set.
            
             TransmitFileOption.NoDisplay
            
                 Specifies that incoming characters should not be displayed in the terminal window while waiting for the PromptChar or for PauseTime at the end of a line. If both of the PauseTime and PromptChar arguments are not specified, 
                 this option has no effect (the method does not read incoming data from the host).
            
             To combine the two options, use the addition operator: TransmitFileOption.NoTranslation + TransmitFileOption.NoDisplay.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String)">
             <summary>
             Transfers one or more files from the host to the PC using the WRQ/Reflection file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can be empty or can contain just drive and path information, 
             in which case the host file name is used to generate a local file name. This string cannot contain 
             wildcard characters.
             </param>
             <param name="remoteFile">
             Specifies a host file. This string can contain wildcard characters (to transfer multiple files). 
             The wildcard characters must be appropriate for the host system. You can also append "switches" 
             to the host file name to modify the way the file is handled during the transfer.
             </param>
             <param name="transferOption">
             TransferTypeOption.ASCII:
            
                 Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
                 on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
                 transferred.
            
             TransferTypeOption.Binary
            
                 Specifies binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.Image
            
                Host to host Image/Labels transfer (rcLabels is a valid synonym).
            
             </param>
             <param name="fileOption">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Update
            
                 Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
                 Renames the file being transferred. The existing file retains the original name. The last three 
                 characters of the file being transferred are changed to 001. If such a file already exists, the file's 
                 name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
                 Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption,System.DateTime,System.DateTime,System.String,System.String)">
             <summary>
             Transfers one or more files from the PC to the host using the WRQ/Reflection file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain PC wildcard characters 
             (to transfer multiple files).
             </param>
             <param name="remoteFile">
             Specifies a host file. This string cannot contain wildcard characters. If this string is an empty 
             string (""), the local file name is used to generate the host file name. You can also append 
             "switches" to the host file name to modify the way the file is handled during the transfer.
             </param>
             <param name="transferType">
             TransferTypeOption.ASCII:
            
                 Specifies ASCII file transfer. Reflection applies the ASCII File Translation options (as specified
                 on the Translation tab in the File Transfer Setup dialog box) to the data in the file as it is 
                 transferred.
            
             TransferTypeOption.Binary
            
                 Specifies binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
                 File transfer type is determined by the file extension. Use these properties to determine which file extensions are linked to which transfer type:
            
                TransferAutoDetectDefaultType
                TransferAutoDetectASCIIExtensionList
                TransferAutoDetectBinaryExtensionList
                TransferAutoDetectImageLabelsExtensionList
                TransferAutoDetectScanExtensionList 
             
             TransferTypeOption.Image
            
                Host to host Image/Labels transfer (rcLabels is a valid synonym).
            
             </param>
             <param name="fileExists">
             Specifies what to do if the file already exists on the host. The possible values are:
             
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Update
            
                 Performs the transfer only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the contents of the host file to the existing PC file.
            
             DestinationFileExistsOption.Rename
            
                 Renames the file being transferred. The existing file retains the original name. The last three 
                 characters of the file being transferred are changed to 001. If such a file already exists, the file's 
                 name is changed to 002, and so on up to 999.
            
             DestinationFileExistsOption.Skip
            
                 Skips the file (the transfer does not take place, but no error results).
             </param>
             <param name="before">Specifies a date and time. Only host files created or modified before the specified date and time are transferred.</param>
             <param name="since">Specifies a date and time. Only host files created or modified after the specified date and time are transferred.</param>
             <param name="exclude">Specifies one or more files to be excluded from a wildcard transfer. The file names can include wildcards.</param>
             <param name="attributes">Specifies host file attributes to be used. </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQStartServer">
            <summary>
            Starts the WRQ/Reflection protocol host server in preparation for multiple file transfers.
            Most menu commands and all toolbar buttons are disabled when in server mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.WRQStopServer">
            <summary>
            Stops the WRQ/Reflection protocol host server started by WRQStartServer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.XmodemReceiveFile(System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption)">
             <summary>
             Transfers a file from the host to the PC, using the Xmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies the local file name to use for the file. This string can contain drive and path information. 
             This string cannot contain wildcard characters.
             </param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileOption">
             Specifies what to do if the sent file already exists on the PC. The default is DestinationFileExistsOption.Cancel.
             The possible values are:
            
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the contents of the host file to the existing PC file.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.XmodemSendFile(System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption)">
             <summary>
             Transfers a file from the PC to the host, using the Xmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string cannot contain wildcard characters.
             </param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
                 File transfer type is determined by the file extension. Use these properties to 
                 determine which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList           
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemReceiveFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption,Attachmate.Reflection.Emulation.OpenSystems.DestinationFileExistsOption)">
             <summary>
             Transfers one or more files from the host to the PC, using the Zmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies the local file name to use for the file. This string can contain drive and path information.
             It can also be just a folder name or an empty string, in which case the host file name is used
             to generate a local file name. This string cannot contain wildcard characters.
             </param>
             <param name="remoteFile">Specifies the remote file name to use for the file.</param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             </param>
             <param name="fileOption">
             Specifies what to do if the sent file already exists on the PC. The default is DestinationFileExistsOption.Cancel. The possible values are:
            
             DestinationFileExistsOption.AskUser
            
                 Prompts the user to specify what should be done.
            
             DestinationFileExistsOption.Cancel
            
                 Stops the transfer.
            
             DestinationFileExistsOption.Delete
            
                 Deletes (overwrites) the existing file.
            
             DestinationFileExistsOption.Append
            
                 Appends the data to the existing file.
            
             DestinationFileExistsOption.Rename
            
                 Renames the file being transferred if a file of the same name already exists on the destination system. The last three characters of the existing file's name are changed to 001. If such a file already exists, the file's name is changed to 002, and so on, up to 999.
            
             DestinationFileExistsOption.Resume
            
                 Resumes a canceled receive. If the file already exists on the PC, Reflection assumes it is there as the result of an aborted transfer. Reflection therefore resumes the transfer at the point of interruption.
            
             DestinationFileExistsOption.Update
            
                 Performs the transfers only if the host file is newer than the PC file.
            
             DestinationFileExistsOption.UseRemote
            
                 Uses the IfFileExists option specified by the remote system. If the remote system doesn't specify an IfFileExists , this option is equivalent to DestinationFileExistsOption.Cancel.
             </param>
             <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.ZmodemSendFile(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption)">
             <summary>
             Transfers one or more files from the host to the PC, using the Zmodem file transfer protocol.
             </summary>
             <param name="localFile">
             Specifies a local file. This string can contain wildcard characters (to send multiple files).
             </param>
             <param name="remoteFile">
             Specifies a host file. This string cannot contain wildcard characters. If this string is empty or contains a path but no file name, 
             the local file name is used to generate a host filename.
             </param>
             <param name="transferOption">
             Specifies what type of file is being transferred. The default is TransferTypeOption.Binary. 
             The possible values are:
             
             TransferTypeOption.ASCII
            
                 Specifies an ASCII file transfer. If the XmodemTranslateCharacters property is set to True, the 
                 following translations are performed:
            
            ·	Character set translations (as specified on the Emulation tab in the Terminal Setup dialog box). 
            ·	Relevant ASCII File Translation options (as specified on the Translation tab in the File Transfer 
                 Setup dialog box). 
            
                 If XmodemTranslateCharacters is set to False, record separator characters may still be translated
                 to carriage return/linefeed sequences (if the ConvertSeparatorToEOL property is set to True),
                 and a Ctrl+Z character may still be appended to the end of the file (if the WriteCtrlZAsEOF
                 property is set to True), but no other translations are performed.
            
             TransferTypeOption.Binary
            
                 Binary file transfer. Data in the file is not translated as it is transferred.
             
             TransferTypeOption.AutoDetect
            
                 File transfer type is determined by the file extension. Use these properties to 
                 determine which file extensions are linked to which transfer type:
            
                 TransferAutoDetectDefaultType
                 TransferAutoDetectASCIIExtensionList
                 TransferAutoDetectBinaryExtensionList                   
             </param>
            <returns></returns>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IFileTransfer.FileTransferDone">
            <summary>
            File transfer completed event.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots">
            <summary>
            Defines methods to configure hotspots and properties to 
            get and set hotspot visibility, position, and other attributes.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotSpotsEnabled">
            <summary>
            Gets or sets a value indicating whether hotspots are enabled.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotSpotsVisible">
            <summary>
            Gets or sets a value indicating whether hotspots are visible.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.MRUHotSpotColumn">
            <summary>
            Gets the most recently used hotspot column position.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.MRUHotSpotLength">
            <summary>
            Gets the most recently used hotspot length.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.MRUHotSpotRow">
            <summary>
            Gets the most recently used hotspot row position.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.MRUHotSpotText">
            <summary>
            Gets the most recently used hotspot text.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotSpotStyle">
            <summary>
            Gets or sets a value indicating the way that hotspots should appear on the screen.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotspotsMouseButton">
            <summary>Gets or sets a value indicating the mouse button used to invoke hotspots.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotspotsDoubleClick">
            <summary>Gets or sets a value indicating whether a double click is required to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotspotsShiftKey">
            <summary>Gets or sets a value indicating whether the Shift key must be used in conjunction with the mouse to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotspotsCtrlKey">
            <summary>Gets or sets a value indicating whether the Ctrl key must be used in conjunction with the mouse to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotspotsAltKey">
            <summary>Gets or sets a value indicating whether the Alt key must be used in conjunction with the mouse to activate the hotspot.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.MatchCase">
            <summary>Gets or sets a value indicating whether hotspots are case sensitive.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.SpaceDelimiter">
            <summary>Gets or sets a value indicating whether the whitespace created by pressing the spacebar is to be used as a hotspots delimiter.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.UseOtherDelimiters">
            <summary>
            Gets or sets a value indicating whether the contents of the OtherDelimiters property are to be used as additional hotspots delimiters.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.OtherDelimiters">
            <summary>
            Gets or sets a value indicating other character(s) to use as hotspot delimiters when the UseOtherDelimiters property is set to true.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.HotspotsMap">
            <summary>Gets or sets the current hotspots definition file.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.MappingCollection">
            <summary>
            Gets a set of all the hotspots that have been mapped in the current hotspot map.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.DefaultHotspotMapName">
            <summary>Gets the path and filename that the Save method saves a hotspot to when the location defined by the HotspotsMap property is read-only.</summary>
            <remarks>The Save method saves the in-memory hotspot collection to the hotspot file defined by the HotspotsMap property. However, if that location points at a read-only
            location such as the built-ins folder underneath program files\Micro Focus\reflection where files cannot be written to, then the Save method saves the file in
            the user's documents area (e.g. Documents\Micro Focus\Reflection\Hotspots Maps) under the name of the active session.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.ConfigureHotSpots(System.String)">
            <summary>
            Load the hotspots file as the current hotspots definitions.
            </summary>
            <param name="hotSpotsFilePath">Hotspots file path</param>
            <returns>Method return code</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.Clear">
            <summary>
            Removes all items from the hotspots map, resulting in an empty map.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.AddHotspot(Attachmate.Reflection.Emulation.OpenSystems.Hotspot)">
            <summary>
            Adds a new hotspot to the current hotspot map. If a hotspot with the specified text already
            exists, subject to the existing hotspot's case sensitivity property, it is removed prior to the new hotspot being added.
            </summary>
            <param name="hs">The hotspot to be added</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.RemoveHotspot(Attachmate.Reflection.Emulation.OpenSystems.Hotspot)">
            <summary>
            Removes a hotspot with the specified characteristics from the currrent hotspot map. 
            </summary>
            <param name="hotspot">The hotspot to remove</param>
            <remarks>Does nothing if no match is found.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.RemoveHotspotByText(System.String,System.Boolean)">
            <summary>
            Removes all hotspots with the specified text from the currrent hotspot map. 
            </summary>
            <param name="hotspotText">Remove all hotspots with this text value</param>
            <param name="caseSensitive">Whether to remove hotspots with the specified text, regardless of case</param>
            <remarks>Does nothing if no match is found.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.Contains(System.String,System.Boolean)">
            <summary>
            Gets a value indicating whether there is a hotspot with the specified text in the current hotspot map.
            </summary>
            <param name="hotspotText">The hotspot text</param>
            <param name="caseSensitive">Whether to look for hotspots with the specified text, regardless of case</param>
            <returns>True if there is a hotspot with the specified text in the current hotspot map, false if not</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.Save">
            <summary>
            Saves changes to current hotspots map. If the current hotspots map (identified by the HotspotsMap property)
            resides in the installation directory and cannot be written to, the map is saved to the current user's Hotspots Maps subfolder
            underneath the Reflection folder, using the terminal session name as the hotspot map filename. 
            </summary>
            <returns>One of the ReturnCode enumerated values, unless an exception has been thrown</returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the hotspots map.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the hotspots map.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.SaveAs(System.String)">
            <summary>
            Saves current hotspots map contents to a file.
            </summary>
            <param name="pathName">The path to the new hotspots map file</param>
            <returns>One of the ReturnCode enumerated values, unless an exception has been thrown</returns>
            <exception caption="" cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the hotspots map.
            </exception>
            <exception caption="" cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the hotspots map.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IHotSpots.ApplyCurrentHotspots">
            <summary>Sends and applies the current hotspot map contents to the host session.</summary>
            <returns>One of the ReturnCode enumeration values</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper">
            <summary>
            Methods and properties associated with the terminal document's keyboard map.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.KeyMap">
            <summary>
            Gets or sets the name of the keymap file. 
            </summary>
            <remarks> 
            When setting the keymap file, if the value is not a full path, 
            Reflection searches for the file in the user's Reflection document folder and in 
            the Built-Ins/Keyboard Maps folder.
            <para>
            If the file isn't found or the full path that's passed in does not exist,
            a FileNotFoundException is thrown.
            </para>
            </remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property that 
            was secured via the Permissions Manager, or that can only 
            be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.MappingCollection">
            <summary>
            Returns a set of all the keys that have been remapped in the current keyboard map.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.Parent">
            <summary>
            Gets the parent object (IIbmTerminal).
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.AddMapping(Attachmate.Reflection.Emulation.OpenSystems.KeyboardMapping)">
            <summary>
            Adds a key mapping to the current keyboard map.
            </summary>
            <param name="mapping">
            A mapping between a key sequence and a set of actions to perform when
            that key sequence is pressed in a host session.
            </param>
            <remarks>
            A key can also be remapped to do nothing if the InputMapSequenceAction specified in 
            mapping.Mapping has no InputMapActions added to it.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.RemoveMapping(System.Windows.Forms.Keys)">
            <summary>
            Removes a key mapping from the keyboard map. This method should only be used to
            remove non-extended keys.
            </summary>
            <param name="key">The key sequence for which to remove the mapping.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.RemoveMapping(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Removes a key mapping from the keyboard map.
            </summary>
            <param name="key">The key sequence for which to remove the mapping.</param>
            <param name="isExtendedKey">
            Indicates whether this key is an extended key. For IBM Enhanced 101-key and 102-key keyboards, 
            extended keys are the right ALT and the right CTRL keys on the main section
            of the keyboard; the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys
            in the clusters to the left of the numeric keypad; and the slash (/) and ENTER
            keys in the numeric keypad.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.Contains(System.Windows.Forms.Keys)">
            <summary>
            Returns whether there is a mapping for a specified key combination
            in the current keyboard map. This method only works for non-extended keys.
            </summary>
            <param name="key">The key sequence for which to query.</param>
            <returns>True if the current keyboard map contains a mapping for key, false if not.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.Contains(System.Windows.Forms.Keys,System.Boolean)">
            <summary>
            Returns whether there is a mapping for a specified key combination
            in the current keyboard map. 
            </summary>
            <param name="key">The key sequence for which to query.</param>
            <param name="isExtendedKey">
            Indicates whether this key is an extended key. For IBM Enhanced 101-key and 102-key keyboards, 
            extended keys are the right ALT and the right CTRL keys on the main section
            of the keyboard; the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys
            in the clusters to the left of the numeric keypad; and the slash (/) and ENTER
            keys in the numeric keypad.
            </param>
            <returns>True if the current keyboard map contains a mapping for key, false if not.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.Save">
            <summary>
            Saves changes to current keyboard map
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the keyboard map.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the keyboard map.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IKeyboardMapper.SaveAs(System.String)">
            <summary>
            Saves current keyboard map contents to a file
            </summary>
            <param name="pathName">The path to the new keyboard map</param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the keyboard map.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the keyboard map.
            </exception>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IMacro">
            <summary>Defines methods, properties, and events associated with running or recording macros.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMacro.Parent">
            <summary>
            Gets the parent object (Terminal object).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMacro.Recording">
            <summary>
            Returns whether the macro recorder is currently recording.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RecordingPaused">
            <summary>
            Returns whether the macro recorder is currently paused.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMacro.Script">
            <summary>
            Gets the current macro recording script, if any. Returns String.Empty if no script is
            currently recording.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMacro.Data">
            <summary>Gets or specifies a string variable that can be used as data during macro execution.</summary>
            <value>
            	<para>The default value is "". This string can be up to 260 characters long.</para>
            	<para></para>
            </value>
            <exception caption="" cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.ShowMacroDialog">
            <summary>
            Displays the Run Macro dialog box.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.GetMacroNames(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption)">
            <summary>
            Gets a list of existing macro names.
            </summary>
            <param name="macroSource">
            The location from which to get the list of macro names.
            MacroEnumerationOption.Document gets a list of names from the session document's VBA project.
            MacroEnumerationOption.CommonProject gets a list of names from the Common VBA project.
            </param>
            <returns>
            A set of macro names. The set may be empty if there are no existing macros.
            </returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.PasswordBox(System.String,System.String)">
            <summary>
            Displays a prompt for the Password dialog box.
            </summary>
            <param name="prompt">The prompt string for the dialog box.</param>
            <param name="title">The dialog box caption.</param>
            <returns>The string entered in the dialog's text box.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunMacro(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption,System.String)">
            <summary>
            Runs a macro.
            </summary>
            <param name="macroSource">
            The location of the macro. 
            MacroEnumerationOption.Document indicates that the macro is located in the session document's VBA project.
            MacroEnumerationOption.Common indicates that the macro is located in the Common VBA project.
            </param>
            <param name="macroName">The name of the macro to run</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunMacro(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption,System.String,System.String)">
            <summary>
            Runs a macro.
            </summary>
            <param name="macroSource">
            The location of the macro. 
            MacroEnumerationOption.Document indicates that the macro is located in the session document's VBA project.
            MacroEnumerationOption.Common indicates that the macro is located in the Common VBA project.
            </param>
            <param name="macroName">The name of the macro to run.</param>
            <param name="macroParameter">An optional parameter to pass to the macro.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunMacro(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption,System.String,System.Object[])">
            <summary>
            Runs a macro.
            </summary>
            <param name="macroSource">
            The location of the macro. 
            MacroEnumerationOption.Document indicates that the macro is located in the session document's VBA project.
            MacroEnumerationOption.Common indicates that the macro is located in the Common VBA project.
            </param>
            <param name="macroName">The name of the macro to run.</param>
            <param name="macroParameters">An optional parameter to pass to the macro.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.StopMacro">
            <summary>
            Stops a currently running macro. 
            </summary>
            <remarks>
            This has no effect unless a macro is running in the
            current terminal session.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.StartMacroRecording">
            <summary>
            Starts recording a macro in the current terminal session.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.StopMacroRecording(Attachmate.Reflection.Emulation.OpenSystems.MacroDestinationOption,System.String)">
            <summary>
            Stops the macro recorder in the current terminal session and saves the macro.
            </summary>
            <param name="saveLocation">
            The location to which the macro is saved.  
            MacroDestinationOption.Document saves the macro to the session document's VBA project.
            MacroDestinationOption.CommonProject saves the macro to the Common VBA project.
            MacroDestinationOption.Clipboard copies the macro script to the Windows Clipboard.
            </param>
            <param name="macroName">
            The name of the saved macro. This parameter is ignored if saveLocation is Clipboard.
            </param>
            <exception cref="T:System.ArgumentException">
            Thrown if the macro name is null, empty, or contains invalid characters.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.PauseRecording">
            <summary>
            Pauses the macro recorder in the current terminal session. 
            </summary>
            <remarks>
            This method is valid only when the macro recorder is running. 
            It does nothing if the recorder is already paused.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the macro recorder is not currently recording.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.ResumeRecording">
            <summary>
            Resumes recording a macro in the current terminal session. 
            </summary>
            <remarks>
            This method is valid only when the macro recorder is running. 
            It does nothing if the recorder is already active.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the macro recorder is not currently recording.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunLegacyReflectionMacro(System.String,System.String)">
            <summary>
            Runs a legacy Reflection macro.
            </summary> 
            <param name="macroName">
            Specifies the name of the macro to run. 
            An error occurs if there is no macro with this name in the current settings file 
            or in any referenced files. This value can be up to 255 characters long.
            If you have more than one macro with the same name in different files, precede 
            the macro name with the project name and a period to correctly  
            identify the macro. For example, "SharedMacros.Login" identifies 
            the "Login" macro in the "SharedMacros" settings file.
            </param>
            <param name="macroData">
            An optional string to pass information to the macro.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunExternalLegacyReflectionMacro(System.String,System.String,System.String)">
            <summary>
            Runs a legacy Reflection macro that is not in the settings file in use for this session.
            </summary>
            <param name="macroFileName">
            The path and name of the file that contains the macro you want to run. An error is returned if you specify 
            an invalid or nonexistent file.
            </param>
            <param name="macroName">
            The macro you want to run. An error is returned if the macro does not exist.
            </param>
            <param name="macroData">
             An optional string to pass information to the macro.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunLegacyReflectionMacroFile(System.String,System.String)">
            <summary>
            Runs the legacy Reflection macro that is in the specified file.
            </summary>
            <param name="fileName">
            The name of a macro file. Include the complete path if the macro file is not 
            in the current folder.
            </param>
            <param name="macroData">
            An optional string to pass information to the macro.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunLegacyExtraMacro(System.String)">
            <summary>
            Runs a legacy EXTRA! macro.
            </summary>
            <param name="macroName">
            Specifies the full path of the macro to run. 
            </param>        
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown if the macro file does not exist.
            </exception>
            <remarks>
            Assumes that the EXTRA! Basic runtime is installed.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMacro.RunHostExplorerMacro(System.String)">
            <summary>
            Runs a HostExplorer acro.
            </summary>
            <param name="macroName">
            Specifies the full path of the macro to run. 
            </param>        
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown if the macro file does not exist.
            </exception>
            <remarks>
            Assumes that the EXTRA! Basic runtime is installed.
            </remarks>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IMacro.MacroStarted">
            <summary>
            Raised when a macro has started. This does not apply to legacy
            Reflection macros or legacy EXTRA! macros.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IMacro.MacroCompleted">
            <summary>
            Raised when a macro has completed. This does not apply to legacy
            Reflection macros or legacy EXTRA! macros.
            </summary>        
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper.MouseMap">
            <summary>
            Gets or sets the name of the mouse map file. 
            </summary>
            <remarks>
            When setting the mouse map file, if the value is not a full path, Reflection searches for the file
            in the user's Reflection document folder and in the Built-Ins/Keyboard Maps folder.
            <para> 
            If the file cannot be found there, or the full path passed in does not exist,
            a FileNotFoundException is thrown.
            </para>
            </remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property 
            that was secured via the Permissions Manager, or that 
            can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper.MappingCollection">
            <summary>
            Returns a set of all mouse/key combinations that have been remapped in the 
            current mouse map.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper.Parent">
            <summary>
            Gets the parent object (IIbmTerminal).
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper.AddMapping(Attachmate.Reflection.Emulation.OpenSystems.MouseMapping)">
            <summary>
            Adds a mouse button mapping to the current mouse map.
            </summary>
            <param name="mapping">
            An association between a mouse/key combination and a set of actions. The actions are performed
            when the mouse/key combination is pressed in a host session.
            </param>
            <remarks>
            A mouse/key combination can be remapped to do nothing if the InputMapSequenceAction
            specified in mapping.Mapping has no InputMapActions added to it.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper.RemoveMapping(Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination)">
            <summary>
            Removes a mouse mapping from the mouse map.
            </summary>
            <param name="mapping">The mouse/key combination for which to remove the mapping.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper.Contains(Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination)">
            <summary>
            Returns whether there is a mapping for a specified mouse/key combination
            in the current mouse map.
            </summary>
            <param name="mapping">The mouse/key combination for which to query.</param>
            <returns>True if the current keyboard map contains a mapping for key, false if not.</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.DefinedEventHandler">
            <summary>
            
            </summary>
            <param name="EventNumber"></param>
            <param name="EventType"></param>
            <param name="TheString"></param>
            <param name="Row"></param>
            <param name="Column"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IScreen">
            <summary>
            Defines an interface to host the emulation screen object.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ControlKeySending">
            <summary>
            Control Key being sent.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ControlKeySent">
            <summary>
            Control key has been processed by terminal
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreen.KeysSending">
            <summary>
            Data key is being sent.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreen.KeysSent">
            <summary>
            Data key has been processed by terminal.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreen.KeyboardUnlocked">
            <summary>
            Keyboard has been unlocked.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreen.KeyboardLocked">
            <summary>
            Keyboard has been unlocked.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreen.MouseClick">
            <summary>This event occurs when a session window is clicked by the mouse.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.HotSpots">
            <summary>
            Gets the HotSpots object which is used to obtain/specify information pertaining to HotSpots behavior.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Printing">
            <summary>Gets the Printing object which is used to obtain/specify information pertaining to printing behavior.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Parent">
            <summary>
            Gets the parent object. The parent is the ITerminal object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Selection">
            <summary>
            Gets information about the current selection.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ScreenSettleTime">
            <summary>
            Gets or sets time duration during which there should be no host data changes. 
            This value is used in triggering the ScreenReady event. The value is not persisted.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SelectionMode">
            <summary>
            Gets the type of region selected.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.AbsoluteRow">
            <summary>   
            Gets or sets a value indicating how
            Reflection calculates the cursor row position shown in the status   
             bar display. This property is only relevant if you are emulating   
             a VT Terminal. When set to True, the cursor row position is
            calculated relative to the top of display memory, which means that  
            the row value continues to increase as text scrolls off into
            display memory. When set to False, the cursor row position is   
            calculated relative to the current screen display, which means it   
            will never show a value greater than the current value of   
            DisplayRows.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.AutoLinefeed">
            <summary>   
            Gets or sets a value indicating whether
            Reflection appends a linefeed character  to each transmitted or received  
            carriage return character . Most hosts echo both a carriage return and a  
            linefeed when you press Return, so in remote mode it isn't usually  
            appropriate to add another linefeed. In local mode, however, a carriage 
            return does not execute a linefeed automatically, so you may want to set
            AutoLinefeed to True.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.AutoRepeat">
            <summary>   
            Gets or sets a value indicating whether
            keys repeat when you hold them down. The Shift, Enter, and Ctrl keys never  
            auto repeat.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.AutoScroll">
            <summary>   
            Gets or sets a value indicating whether Auto   
            Scroll is on. This property is valid for Wyse, DG, and ADDS terminal
            emulation. When this property is True, a linefeed on the last line of the   
            screen causes a new blank line to be created and the rest of the screen to  
            be scrolled up one line.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.BreakEnabled">
            <summary>   
            Gets or sets a value indicating whether a  
            break can be transmitted to the host computer. This property affects
            breaks transmitted from the keyboard, and does not affect breaks
            transmitted programmatically (for example, with the Break method).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.BreakLength">
            <summary>   
            Gets or sets the length 
            (in milliseconds) of the break signal. Use the Break method to transmit a   
            Break signal to the host.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CapsLock">
            <summary>   
            Gets or sets a value indicating whether the
            CapsLock keyboard function is in effect. When this property is True,
            pressing any letter key transmits the uppercase version of the letter to
            the host. While the CapsLockMode property is True, the CapsLock property
            is automatically set to False.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ColumnsPerScroll">
            <summary>   
            Gets or sets the number 
            of columns, or character positions, to be rolled right or left during one   
            horizontal scrolling operation with Ctrl+Left or Ctrl+Right.
            In Reflection for HP, this property only applies when the RightMargin   
            property is set to a value greater than 80. 
            In Reflection for UNIX and OpenVMS and Reflection for ReGIS Graphics, this  
            property only applies when RightMargin is greater than 80 and you are   
            operating in graphics mode without a 132-column adapter.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CompensateFrameSpaces">
            <summary>   
            Gets or sets how
            Reflection handles spaces when aligning data on screen. This property is
            relevant for Thai character set support only; change the value of this  
            property only if you are using the Thai version of Windows. 
            If Reflection is using a proportional font, this property specifies the 
            number of spaces after which text characters are realigned to display on
            monospaced boundaries. For example, if the terminal window is displaying
            two columns of data with at least three spaces between columns on any   
            particular line, setting this property to 3 ensures that the second column  
            of data is properly left-justified on the screen.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CompressBlankLinesEnabled">
            <summary>   
            Gets or sets a value indicating how
            Reflection handles blank lines in display memory. When this property is 
            True, Reflection compresses multiple blank lines in display memory into a   
            single blank line. This property only affects lines that have scrolled off  
            the screen. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CopyDataFormat">
            <summary>Gets or sets the copy data format. Format can be Lines (the default), Unformatted or Paragraph.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CopyTableMethod">
            <summary>Gets or sets the copy table method. The copy table method can be DetectColumns (based on vertical space alignment) or MultipleSpaces (which replaces
            multiple spaces or tabs with a single tab). The default is DetectColumns.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CopyGraphicsBackground">
            <summary>   
            Gets or sets a value indicating whether
            bitmaps copied to the Clipboard are edited so the background color is set   
            to white, and all near-white colors are set to black. This is useful for
            pasting graphic images into word processing documents.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CopyGraphicsVGAColors">
            <summary>   
            Gets or sets a value indicating whether
            bitmaps copied to the Clipboard are dithered to standard VGA colors.
            (The dithering options are controlled by the ImageDither property.) This
            is useful for pasting graphic images into Windows applications that are 
            not palette-aware (for example, Windows Paintbrush).
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CursorColumn">
            <summary>   
            Gets the column containing the cursor in the terminal window, relative   
            to the left edge of the screen. The number is 1-based   
            (the first column is column 1). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CursorRow">
            <summary>   
            Gets the current cursor row in the terminal window, relative to the  
            top of the screen, in host-addressable coordinates. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayColumns">
            <summary>   
            Gets or sets the number 
            of columns displayed in the terminal window.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayEnabled">
            <summary>   
            Gets or sets a value indicating whether Reflection displays characters received from the host during the 
            execution of any of the following methods: ReadChars, ReadLine, or ReadUntil.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayMemoryBlocks">
            <summary>   
            Gets or sets the number 
            of 8K blocks allocated to display memory.   
            Display memory contains both the information visible on the display and 
            information that has scrolled off the display. It is a log of what has  
            recently been sent from the host to the PC. This property determines the
            amount of memory you want to allocate to display memory. The default value  
            is for 9 blocks of 8 kilobytes each, or 72K of display memory.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayMemoryTopRow">
            <summary>   
            Gets the index of the top row of display memory using host-addressable   
            coordinates.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayRows">
            <summary>   
            Gets or sets the number 
            of lines in each page of display memory. The host can position the cursor   
            and write characters on any row in the specified range. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DrawingOptimization">
            <summary>   
            Gets or sets a value indicating whether
            Reflection uses drawing optimization features to control the timing of  
            changes to the screen display. Use the default value (true) for the best
            performance with most host applications.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DynamicTerminalSize">
            <summary>   
            Gets or sets a value indicating whether 
            Reflection supports dynamic update of the number of rows and columns in 
            the display when the user resizes the terminal window. Note: You can only   
            set this property to True when you are emulating a VT terminal. Your
            Telnet server and application must also support NAWS (Negotiate About   
            Window Size) otherwise display problems can occur. DynamicTerminalSize and  
            AutoFontSize are mutually exclusive options.  When one is set to True the other 
            is automatically set to False.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.EndOfLineWrap">
            <summary>   
            Gets or sets a value indicating
            what happens when typing reaches the end of a line. When this property is   
            set to True, Reflection automatically inserts a carriage return and a   
            linefeed when the cursor reaches the right margin. When the value is False, 
            the cursor is not automatically advanced when it reaches the right margin—as
            you type additional characters, each character overwrites the previous  
            character until you move the cursor.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ForceAutoRepeat">
            <summary>   
            When this property is set to True, Reflection ignores the current value of  
            the AutoRepeat property and always auto repeats (causing most keys to   
            repeat when you hold the key down). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmIsBlockMode">
            <summary>   
            Gets or sets the Block  
            mode state for IBM 3151 terminal sessions (TerminalType = rcIBM3151).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmCharInsertionOption">
            <summary>   
            Gets or sets how
            character insertion is handled during IBM 3151 terminal sessions
            (TerminalType = rcIBM3151). 
            When this property is True, a character insertion forces a character off a  
            row (or off the end of the screen if Autowrap is on) when a character   
            insertion operation is performed and a null character cannot be found to
            delete to accommodate the insertion.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmLineInsertionOption">
            <summary>   
            Gets or sets how line   
            insertion is handled during IBM 3151 terminal sessions  
            (TerminalType = rcIBM3151). 
            When this property is True, a line insertion forces the last line off the   
            screen when a null line cannot be found to delete to accommodate the
            insertion.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmClearModified">
            <summary>   
            Gets or sets a value indicating whether the
            Mdt (Modified data tag) is cleared after data is sent to the host during
            IBM 3151 terminal sessions (TerminalType = rcIBM3151).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmIgnoreNull">
            <summary>   
            Gets or sets a value indicating whether
            nulls received from the host are ignored during IBM 3151 terminal   
            sessions (TerminalType = rcIBM3151).
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmSendTrailingNulls">
            <summary>   
            Gets or sets a value indicating whether
            trailing nulls are sent to the host during IBM 3151 terminal sessions   
            (TerminalType = rcIBM3151). This property is only relevant in block mode.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ImageUseCurrentColorMap">
            <summary>   
            Gets or sets what happens   
            when color bitmaps are pasted from the Clipboard. When this property is 
            set to True, 256-color bitmaps pasted from the Clipboard are dithered to
            the current color map values. When this property is set to False, the   
            color map that best represents the colors in the pasted bitmap is   
            calculated. The dithering options are controlled by the ImageDither 
            property.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ImageColorMapFleshtonePriority">
            <summary>Gets or sets what happens when a 256-color image is pasted into the terminal window from the Clipboard. Because Reflection for ReGIS Graphics emulates
            a 16-color terminal, an algorithm is used to determine exactly how colors should be mapped. Setting ImageFleshtones to True gives more priority to
            accurately representing colors like red, brown, yellow, and pink from the original 256-color image, rather than to colors like blue and green.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.InactivityEventsIgnoreKeyboardMouse">
            <summary>   
            Gets or sets how
            Reflection handles keyboard and mouse actions with events that are  
            scheduled to execute after a period of inactivity.  
            When this property is True (the default), mouse and keyboard activity are   
            ignored, the period of inactivity is counted down, and the scheduled event is executed. 
            When this property is False, keystrokes and mouse clicks reset the  
            inactivity countdown when the Reflection terminal window has focus. 
            Moving the mouse resets the inactivity countdown when Reflection is the 
            foreground application. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.InsertMode">
            <summary>   
            Gets or sets a value indicating whether
            characters can be added to text in the terminal window without typing over  
            existing characters. When this property is set to False, typing over
            existing characters replaces those characters. When this property is set
            to True, new characters are inserted at the cursor location, and existing   
            characters are moved to the right.  
            This property is relevant when Reflection is in block mode. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReverseVideo">
            <summary>   
            Gets or sets a value indicating whether the
            foreground and background colors for screen attributes are reversed.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IsJISRoman">
            <summary>   
            This property Gets or sets  
            how character 92 is displayed by default when HostCharacterSet is set to
            rcDECKanji1983 or rcDECKanji1978. When this property is set to True, by 
            default Reflection displays character 92 as a Yen character and the 
            character set in G0 is JIS-Roman. When this parameter is set to False, by   
            default Reflection displays character 92 as a backslash character ( \ ) 
            and the character set in G0 is ASCII instead of JIS-Roman.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.UseKatakanaCharacterSet">
            <summary>   
            Gets or sets a value indicating whether the
            Katakana or Kanji character set is used by default when HostCharacterSet
            is set to rcDECKanji1983 or rcDECKanji1978. When this property is set to
            True, Reflection uses the Katakana character set as the default. When this  
            property is set to False, Reflection uses the Kanji character set as the
            default.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IsKeyboardLocked">
            <summary>   
            Gets or sets a value indicating whether or 
            not the keyboard and the toolbar are locked (that is, they cannot be used). 
            When this property is set to True, the keyboard and toolbar cannot be used. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.MaintainUnscaledImage">
            <summary>   
            By default, Reflection scales graphics images down so that an entire image  
            fits on the PC display. Set this property to True if you want to see an 
            image as it would appear on a terminal display. Use Alt with the arrow  
            keys to pan the window. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.MarginClickSelectsLine">
            <summary>   
            Gets or sets how Reflection responds to a mouse click in the left margin
            of the terminal window. When this property is true (the default) a mouse click 
            selects the entire line.  When it is false, a click in the left margin is 
            equivalent to a click in the first column and does not select any text.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.MarginBellEnabled">
            <summary>   
            Gets or sets a value indicating whether a  
            bell should sound when the cursor reaches the column that is eight spaces   
            short of the right margin.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.MouseColumn">
            <summary>   
            Gets the column location where the mouse was last
            clicked within the terminal screen. A click in the first column sets this   
            property to zero (0).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.MouseRow">
            <summary>   
            Gets the row location, in host-addressable coordinates, where the mouse  
            was last clicked within the terminal screen.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.MultiplePageTerminal">
            <summary>   
            With Reflection, your PC can emulate a multi-page terminal that dynamically 
            stores data. But some applications designed for Digital terminals require   
            that the terminal have only a single page of memory (24 lines). If you're   
            running a host application that requires single-page mode, set this 
            property to False.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.NumLock">
            <summary>   
            Gets or sets a value indicating whether the
            NumLock keyboard function is on or off. When this property is True, keypad  
            keys are in numeric mode; when it's False, keypad keys are in   
            cursor-positioning mode.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.OnDemandFontsEnabled">
            <summary>   
            On-demand font-loading (ODL) is a Digital Japan feature that has been   
            added to version 5.2 of Reflection (along with related features such as 
            VT382 font-preloading and Gyoukan-Keisen line drawing). Set this property   
            to True if you are using an EUC double-byte Japanese character set and  
            want ODL to be used for xA121-xFE7E.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.PageCoupling">
            <summary>   
            Gets or sets a value indicating whether the
            cursor is coupled to the current page in page memory or whether moving the  
            cursor to another page automatically causes that page to be displayed.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.PasteBufferSize">
            <summary>   
            Gets or sets the size of
            a "paste block," which is the number of characters pasted from the  
            Clipboard to the terminal window before a pause occurs. See the 
            description for the PasteDelay property for information on configuring the  
            length of the pause and on conditions that can terminate the pause. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.PasteDelay">
            <summary>Gets or sets how many tenths of a second to wait between "paste blocks" when pasting data from the Clipboard into display memory. (See the description
            for the PasteBufferSize property for information on configuring the size of a paste block.) In Reflection for UNIX and OpenVMS and Reflection for ReGIS
            Graphics, the emulator waits either for the PasteDelay interval or for the number of characters already sent to be echoed back before sending another line.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseDelKeyAsDestructiveBackspace">
            <summary>   
            Gets or sets how a DEL  
            character is handled. When this property is True, a DEL character is
            interpreted as a destructive backspace. This property is valid only during  
            Wyse terminal emulation.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReGISMoveMouse">
            <summary>   
            Gets or sets what happens   
            to the ReGIS cursor when you move the Windows mouse to a location in the
            Reflection terminal window that is different from the position the host 
            has established. To disable this feature and enable the ability to "click   
            ahead," change the setting of ReGISMoveMouse to False.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReGISRestoreTextColors">
            <summary>   
            Gets or sets a value indicating whether
            Reflection restores text colors after ReGIS graphics have been drawn.   
            When this property is set to True, colors are temporarily saved by  
            Reflection when all three of the following events occur:
            
            ·	Reflection is placed into ReGIS mode by a graphics application.   
            ·	The application changes your colors.  
            
            ·	A ReGIS or sixel image is drawn on the screen.
            
            Text colors are then restored when either of the following occurs:  
            
            ·	The entire screen is cleared (with the sequence  H,  J, or  2J).  
            
            ·	The application exits ReGIS mode and the entire image scrolls off 
            the screen (for example, as the result of a series of  characters). 
            
            This behavior differs from an actual terminal, where your original colors   
            are never restored when changed by a graphics application.  
            If colors were changed in ReGIS but no graphics were drawn, the original
            colors are not restored. This preserves the intent of some text 
            applications that use ReGIS to change screen colors.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SavePageOnClear">
            <summary>   
            Gets or sets what happens   
            to the data on screen when the host clears the display. Applications
            running on the host often send down escape sequences to clear the screen
            in whole or in part. When the screen is cleared, the data that was  
            displayed is lost. This property allows you to retain the data that would   
            otherwise be lost. When this property is set to True and such an escape 
            sequence is received, the current display is cleared from view and saved
            in display memory, and the cursor is positioned at the top of the screen.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ScreenTopRow">
            <summary>Gets  the row number of the top row of the screen, in host-addressable coordinates.</summary>
            <value>The ScreenTopRow value is always 1 unless Reflection is emulating an HP host terminal. For HP terminals, the value is equal to the number of rows of display
            memory above what the host would consider to be the top row on the screen. This can be different from the top row that is visible in the window if the user has
            scrolled using the scroll bar.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ShowControlCharacters">
            <summary>   
            When this property is set to True, Reflection displays control characters   
            but does not execute the functions these characters would otherwise perform.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SlashZeros">
            <summary>   
            Gets or sets a value indicating whether
            zeros displayed in the terminal window contain slashes (like this: Ø).  
            This property only affects the terminal window and has no effect on HP  
            Function key labels, the Terminal's status line, menus, dialog boxes, the   
            Windows Clipboard, or printing. It also has no effect on fonts that, by 
            their design, already display zeroes with slashes (for example, the 
            Terminal font). 
            When this property is True, text displayed in the terminal window uses the  
            slash zero. When it is False (the default), the standard zero character is  
            used.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SmoothScroll">
            <summary>   
            Gets or sets the scroll 
            speed setting. When this property is set to True, data from the host
            scrolls more slowly and evenly. (Changing this value to True is equivalent  
            to changing the Scrolling option on the Screen tab of the Display Setup 
            dialog box to Smooth.)  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TransmitXonXoffEnabled">
            <summary>   
            When this property is set to False, the Ctrl+S keystroke executes the hold  
            screen keyboard function, and the Ctrl+Q keystroke cancels the hold screen; 
            neither keystroke actually transmits anything to the host. When 
            TransmitXonXoff is set to True, Ctrl+S and Ctrl+Q are transmitted, and the  
            hold screen function is not invoked.
            This property is automatically set to True when TerminalType is set to  
            rcANSIBBS or rcANSIUNIX; it is automatically set to False when the value
            of TerminalType is changed from rcANSIBBS or rcANSIUNIX to any other value. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVIAttributeSpaceEnabled">
            <summary>   
            Gets or sets a value indicating whether a  
            visual attribute should or should not occupy a character space in display   
            memory when Reflection is emulating a TVI terminal (TerminalType = rcTVI955).   
            When this property is False, visual attributes in display memory do not 
            occupy a character space. When it is True, a visual attribute will occupy   
            a character space in display memory.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.UseAnsiColor">
            <summary>   
            Gets or sets a value indicating whether the
            host can transmit ANSI color sequences to Reflection, thereby changing the  
            foreground and background colors for characters displayed in the terminal   
            window. This property applies to the display of ANSI color sequences in 
            in the terminal window; it does not apply to printing with Reflection.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.VerticalCoupling">
            <summary>   
            Gets or sets a value indicating whether the
            row in which the cursor is located remains in the terminal window   
            regardless of how the terminal window is resized or which screen font size  
            is used.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ClearDisplayOnWidthChangeEnabled">
            <summary>   
            Gets or sets a value indicating whether the
            screen display is cleared when the number of screen columns is changed. 
            The number of screen columns can be specified using either the  
            DisplayColumns property or the Screen tab in the Display Setup dialog box.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WordSelectionBoundaryExclusive">
            <summary>   
            Gets or sets a string of
            characters that mark the beginning or end of a "word" when using a mouse
            to select words in the terminal window. These "exclusive" characters are
            not included in the word that is selected.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WordSelectionBoundaryInclusive">
            <summary>   
            Gets or sets a string of
            characters that mark the beginning or end of a word when using a mouse to   
            select words in the terminal window. These "inclusive" characters are   
            included as part of the word that is selected.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseBlockMode">
            <summary>   
            Gets or sets a value indicating whether a  
            Wyse terminal is in Block Mode. The value of this property is not saved to  
            a settings file.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseLabelLines">
            <summary>   
            Gets or sets how many   
            label lines are visible. The terminal decides how many label lines are  
            visible by how many display rows are requested. Reflection allows you to
            always have two if you want. If only one label line is visible, pressing
            the Shift key will display the second line. This property is valid only 
            during Wyse terminal emulation. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseProtectMode">
            <summary>   
            Gets or sets a value indicating whether the
            terminal is in Protect Mode. In Protect Mode, the cursor is not allowed to  
            move into areas of the screen that are write-protected. Cursor movement 
            keys and the tab and backtab keys move from one unprotected area to the 
            next unprotected area. This property is valid only during Wyse terminal 
            emulation. The value of this property is not saved to a settings file.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmEnterKey">
            <summary>   
            Gets or sets how the
            Enter key behaves during IBM 3151 terminal sessions 
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmInsertion">
            <summary>   
            Gets or sets the behavior   
            of the Insert Key during 3151 terminal sessions (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmReceivedCR">
            <summary>   
            Gets or sets how a  
            received carriage return is interpreted during IBM 3151 terminal
            sessions (TerminalType = rcIBM3151).
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmReceivedLF">
            <summary>   
            Gets or sets how a received 
            line feed is interpreted during IBM 3151 terminal sessions  
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmReturnKey">
            <summary>   
            Gets or sets the behavior   
            of the Return key during IBM 3151 terminal sessions 
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmSendKey">
            <summary>   
            Gets or sets how the Send   
            key behaves during IBM 3151 terminal sessions (TerminalType = rcIBM3151).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmTabKey">
            <summary>   
            Gets or sets how the Tab
            key behaves during IBM 3151 terminal sessions (TerminalType = rcIBM3151).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.IbmTurnAroundChar">
            <summary>   
            Gets or sets defines the
            LineTurnAround (LTA) character for IBM 3151 terminal sessions   
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ImageDither">
            <summary>Gets or sets what happens when a 256-color image is pasted into the terminal window from the Clipboard. Because Reflection for ReGIS Graphics emulates
            a 16-color terminal, an algorithm is used to determine exactly how colors should be mapped. Try all three values to see which works best for a particular
            image.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.JumpScrollSpeed">
            <summary>   
            Gets or sets how
            Reflection manages data entering display memory. Setting JumpScrollSpeed
            to rcScrollBy1 refreshes the screen every time a line enters display
            memory. Higher numerical values (rcScrollBy2, rcScrollBy4, and so on, up
            to rcScrollBy128) refresh the screen after the specified number of lines
            have entered display memory—assuming data is entering display memory too
            fast for the display to keep up.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseReceivedCR">
            <summary>   
            Gets or sets how a  
            received carriage return (CR) is interpreted. This property is valid only   
            during Wyse terminal emulation. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ScrollOptimization">
            <summary>   
            Gets or sets when   
            Reflection uses an off-screen bitmap to speed up scrolling. With most EGA   
            and VGA video adapters, it's usually more efficient to use this off-screen  
            bitmap, but with video adapters that support higher resolutions and more
            colors, it may be more efficient not to use the bitmap. When this property  
            is set to rcAuto, Reflection automatically adjusts to either use or not 
            use the off-screen bitmap, depending on the capabilities of the video   
            adapter.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TektronixDefaultFontSize">
            <summary>   
            Gets or sets the default
            font size for Tektronix emulation.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVIAttributeBaseMode">
            <summary>   
            Gets or sets how visual 
            attributes are applied when Reflection is emulating a TVI terminal  
            (TerminalType = rcTVI955).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVIBottomStatusLine">
            <summary>   
            Gets or sets usage and  
            display of the bottom status line when Reflection is emulating a TVI
            terminal (TerminalType = rcTVI955). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVICompatibility">
            <summary>   
            Gets or sets which TVI  
            emulation type Reflection uses when TerminalType is set to rcTVI955.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVIDownKeySends">
            <summary>   
            Gets or sets the action 
            of the Down key when Reflection is emulating a TVI terminal 
            (TerminalType = rcTVI955).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVIFunctionKeySet">
            <summary>   
            Gets or sets which  
            function key set is available to the keyboard when Reflection is emulating  
            a TVI terminal (TerminalType = rcTVI955).
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVIStatusLineAttribute">
            <summary>   
            Gets or sets how the top
            and bottom status line appear in Reflection's terminal window when  
            Reflection is emulating a TVI terminal (TerminalType = rcTVI955).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.TVITopStatusLine">
            <summary>   
            Gets or sets usage and  
            display of the top status line when Reflection is emulating a TVI terminal  
            (TerminalType = rcTVI955).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.VTBackspaceSends">
            <summary>Gets or sets what is transmitted to the host when the user press the Backspace key. On the VT terminal keyboard the backarrow key is configurable: it
            can send either a delete (ASCII 127) or a backspace (ASCII 8) character. For the emulator, use this property to configure Backspace in the same manner. This
            property affects Reflection for HP only in VT emulation mode.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.VTCursorKey">
            <summary>   
            Gets or sets a value indicating whether the
            cursor keys are under host control. 
            This property is usually controlled by the host. If you find that your  
            arrow keys aren't working properly, it may mean that this option was
            incorrectly left set to rcApplicationMode when a host program terminated
            abnormally. 
            This property affects Reflection for HP only in VT emulation mode.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.VTKeyPad">
            <summary>   
            Gets or sets which  
            characters are transmitted by the numeric keypad keys.  
            This property is normally controlled by the host. If you find that the  
            keypad number or PF keys aren't working properly, it may mean that this 
            option was incorrectly left set to rcApplicationMode when a host program
            terminated abnormally.  
            This property affects Reflection for HP only in VT emulation mode.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseAttribute">
            <summary>   
            Gets or sets the Wyse   
            terminal display attribute mode. This property is valid only for Wyse   
            terminal emulation. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseBlockTerminator">
            <summary>   
            Gets or sets the
            end-of-transmission delimiter for block sends. This is typically set by 
            the host application. This property is valid only during Wyse terminal  
            emulation.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseEnterKey">
            <summary>   
            Gets or sets what is
            sent to the host when the Enter key is pressed. This property is valid  
            only during Wyse terminal emulation.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseReturnKey">
            <summary>   
            Gets or sets what is sent   
            to the host when the Return key is pressed. This property is valid only 
            during Wyse terminal emulation. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WyseStatusLineDisplay">
            <summary>   
            Gets or sets a value indicating whether the
            Wyse status line at the top of the screen is set to Off, Standard, or Edit. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.RetainDisplayFormat">
            <summary>Gets or sets a value indicating whether to retain formatting so that copied text is pasted in the same way as it is displayed in the terminal. When set to
            false, formatting is removed from copied text.</summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SendControlKey(Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode)">
            <summary>
            Send host control key to host.
            </summary>
            <param name="keycode">ControlKeycode type that defines the control key.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SendControlKeySync(Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode)">
            <summary>
            Send host control key to host. The method does not return until the screen has settled
            for the time duration measured by the ScreenSettleTime property.
            </summary>
            <param name="keycode">ControlKeycode type that defines the control key.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SendKeys(System.String)">
            <summary>
            Sends the text string to the host.
            </summary>
            <param name="text">Text string to send.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SendKeys(System.String,Attachmate.Reflection.Emulation.OpenSystems.SendKeysOption)">
            <summary>
            Sends a text string to the host
            </summary>
            <param name="text">Text string to send.</param>
            <param name="option">Text string interpretation options.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ClearSelection">
            <summary>
            Clears current selection.  Ignored if emulating a VT terminal.
            </summary>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ClearScreen">
            <summary>
            Clears the current screen in display memory.
            </summary>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ClearDisplayMemory">
            <summary>
            Clears all display memory including the currently displayed screen.
            </summary>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Copy">
            <summary>
            Copies ASCII text data to the clipboard.
            </summary>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Copy(Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption)">
            <summary>
            Copies data to the clipboard.
            </summary>
            <param name="source">Specifies what should be copied to the clipboard</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Copy(Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption,Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption)">
            <summary>Copies data to the clipboard in the specified format.</summary>
            <param name="source">Specifies what should be copied to the clipboard.</param>
            <param name="format">Specifies format in which data is copied.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CopyToBuffer(System.Int32)">
            <summary>
            	<para>Copies selected text to one of four clipboard buffers. If an invalid bufferNum value is specified, the request is ignored.</para>
            	<para>Note: This property is supported only by the InfoConnect Desktop product. It is not supported by other Micro Focus products.</para>
            </summary>
            <param name="bufferNum">int value 1 through 4 indicating which clipboard buffer to copy data to.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CopyAppend">
            <summary>
            Appends selected text to the end of the clipboard.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.CopyAppend(Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption)">
            <summary>
            Appends selected text to the end of the clipboard.
            </summary>
            <param name="source">Specifies what should be appended to the clipboard</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayText(System.String)">
            <summary>
            Displays a string in the terminal window as though it had been received from the host.
            </summary>
            <param name="text">string to display.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayText(System.String,Attachmate.Reflection.Emulation.OpenSystems.DisplayTextOption)">
            <summary>
            Displays a string in the terminal window as though it had been received from the host.
            </summary>
            <param name="text">string to display.</param>
            <param name="option">Text display options.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayFile(System.String)">
            <summary>
            Displays the specified local file on the terminal screen.
            </summary>
            <param name="fileName">File to display.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.GetText(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the text from the specified location. 
            The length argument specifies the number of screen bytes to get. In SBCS, the number of screen bytes is the same as that of the ScreenCharacter objects.
            In DBCS, the two numbers can be different. If the last byte is only one half byte of a DBCS character, the last byte is not returned.
            </summary>
            <param name="startRow"> starting row position</param>
            <param name="startColumn">starting column position</param>
            <param name="length">number of text characters to retrieve</param>
            <returns>the requested string</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.GetText(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieves text from the specified screen region. Text from the "wrapped" region is returned.
            </summary>
            <param name="startRow"> starting row position</param>
            <param name="startColumn">starting column position</param>
            <param name="endRow">ending row position</param>
            <param name="endColumn">ending column position</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.GetText(System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.RegionOption,Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption)">
            <summary>
            Retrieves text from the specified screen region.
            </summary>
            <param name="startRow"> starting row position</param>
            <param name="startColumn">starting column position</param>
            <param name="endRow">ending row position</param>
            <param name="endColumn">ending column position</param>
            <param name="regionOption">How the region is to be interpreted.</param>
            <param name="translationOption">Whether/how screen data is to be translated.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.LockInput">
            <summary>
            Locks the screen so that users cannot input on keyboard. Other means of input (such as macros
            or the application programming interface) are still available.
            To release the lock, use UnlockInput().
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.UnlockInput">
            <summary>
            Unlocks the screen. See the LockInput() method for more information.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Paste">
            <summary>
            Copies data from the clipboard to the current cursor location.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.PasteFromBuffer(System.Int32)">
            <summary>
            	<para>Pastes data from one of four clipboard buffers.  If an invalid bufferNum value is specified, or if the specified clipboard buffer does not contain
            data, the request is ignored.</para>
            	<para>Note: This property is supported only by the InfoConnect Desktop product. It is not supported by other Micro Focus products.</para>
            </summary>
            <param name="bufferNum">int value 1 through 4 indicating which clipboard buffer to paste data from.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadChars(System.Int32)">
            <summary>
            Reads a specified number of characters from the host.
            </summary>
            <param name="count">The number of characters to read.  If 0 is specified an empty string is returned</param>
            <returns>a string containing the requested number of characters or all characters received prior to a timeout.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadChars(System.Int32,System.Int32)">
            <summary>
            Reads a specified number of characters from the host.
            </summary>
            <param name="count">The number of characters to read.  If 0 is specified an empty string is returned</param>
            <param name="timeout">Time in seconds to wait for the specified number of characters</param>
            <returns>a string containing the requested number of characters or all characters received prior to a timeout.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadChars(System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ReadOption)">
            <summary>
            Reads a specified number of characters from the host.
            </summary>
            <param name="count">The number of characters to read.  If 0 is specified an empty string is returned</param>
            <param name="timeout">Time in seconds to wait for the specified number of characters</param>
            <param name="option">Additional read options</param>
            <returns>a string containing the requested number of characters or all characters received prior to a timeout.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadLine">
            <summary>
            Reads data from the host until a line-feed character is encountered.
            </summary>
            <returns>Line of data read from the host (excluding CR/LF characters).</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadLine(System.Int32)">
            <summary>
            Reads data from the host until a line-feed character is encountered.
            </summary>
            <param name="timeout">Time in seconds to wait for line-feed character. The range of valid values is 0 through 99.</param>
            <returns>Line of data read from the host (excluding CR/LF characters).</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadLine(System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ReadOption,System.Boolean@)">
            <summary>
            Reads data from the host until a line-feed character is encountered.
            </summary>
            <param name="timeout">Time in seconds to wait for line-feed character. The range of valid values is 0 through 99.</param>
            <param name="option">Additional read options.</param>
            <param name="sawEndOfLine">Returns true if line-feed character was received, otherwise false.</param>
            <returns>Line of data read from the host (excluding CR/LF characters).</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadUntil(System.String)">
            <summary>
            Read data from the host until one of the specified terminator characters is received. The terminator
            character is not included in the returned string.
            </summary>
            <param name="terminatorChars">Specifies one or more terminator characters.  Any one of these characters
            can terminate the read operation.</param>
            <returns>The string of data which was read from the host.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadUntil(System.String,System.Int32)">
            <summary>
            Read data from the host until one of the specified terminator characters is received.  The terminator
            character is not included in the returned string.
            </summary>
            <param name="terminatorChars">Specifies one or more terminator characters.  Any one of these characters
            can terminate the read operation.</param>
            <param name="timeout">Time in seconds to wait for terminator character. The range of valid values is 0 through 99.</param>
            <returns>The string of data which was read from the host.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ReadUntil(System.String,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ReadOption,System.String@)">
            <summary>
            Read data from the host until one of the specified terminator characters is received.  The terminator
            character is not included in the returned string.
            </summary>
            <param name="terminatorChars">Specifies one or more terminator characters.  Any one of these characters
            can terminate the read operation.</param>
            <param name="timeout">Time in seconds to wait for terminator character. The range of valid values is 0 through 99.</param>
            <param name="option">Additional read options.</param>
            <param name="whichEndChar">The specific terminator character that terminated the read.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SaveDisplayMemory(System.String)">
            <summary>
            Writes the entire display memory contents to a file.
            </summary>
            <param name="fileName">File to which display memory is written.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SaveDisplayMemory(System.String,Attachmate.Reflection.Emulation.OpenSystems.DisplayMemorySelectionOption,Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption,Attachmate.Reflection.Emulation.OpenSystems.SaveFileOption)">
            <summary>
            Writes the specified portion of display memory to a file.
            </summary>
            <param name="fileName">File to which display memory is written.</param>
            <param name="select">The portion of display memory to be written</param>
            <param name="translation">Specify options for translating display memory data</param>
            <param name="fileexists">For the scenario when the specified file already exists.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SearchText(System.String,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions)">
            <summary>
            Searches for the specified text, starting from the specified screen location.
            </summary>
            <param name="text">Text string to search for.</param>
            <param name="startRow">Start row for search.</param>
            <param name="startColumn">Start column for search.</param>
            <param name="findOption">Specifies search direction.</param>
            <returns>The coordinate of the located text or null if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SearchText(System.String,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions)">
            <summary>
            Searches for the specified text, starting from the specified screen location for "searchRange" byte positions.
            </summary>
            <param name="text">Text string to search for.</param>
            <param name="startRow">Start row for search.</param>
            <param name="startColumn">Start column for search.</param>
            <param name="searchRange">The number of character positions to search.</param>
            <param name="findOption">Specifies search direction.</param>
            <returns>The coordinate of the located text or null if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SearchText(System.String,System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions)">
            <summary>
            Searches for the specified text, starting from the specified screen location and ending at the specified end screen location.
            </summary>
            <param name="text">Text string to search for.</param>
            <param name="startRow">Start row for search.</param>
            <param name="startColumn">Start column for search.</param>
            <param name="endRow">End row for search.</param>
            <param name="endColumn">End column for search.</param>
            <param name="findOption">Specifies search direction.</param>
            <returns>The coordinate of the located text or null if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SearchText(System.String,System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions,Attachmate.Reflection.Emulation.OpenSystems.TextComparisonOption)">
            <summary>
            Searches for the specified text, starting from the specified screen location and ending at the specified end screen location.
            </summary>
            <param name="text">Text string to search for.</param>
            <param name="startRow">Start row for search.</param>
            <param name="startColumn">Start column for search.</param>
            <param name="endRow">End row for search.</param>
            <param name="endColumn">End column for search.</param>
            <param name="findOption">Specifies search direction.</param>
            <param name="textComparison">Specifies the role of character case in the search.</param>
            <returns>The coordinate of the located text or null if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SelectText(System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.RegionOption)">
            <summary>
            Selects specified display memory text.
            </summary>
            <param name="startRow">Beginning row of text selection.</param>
            <param name="startColumn">Beginning column of text selection.</param>
            <param name="endRow">Ending row of text selection.</param>
            <param name="endColumn">Ending column of text selection.</param>
            <param name="region">Wrapped or rectangular region.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SelectAll">
            <summary>
            Selects all of the text on the screen.
            </summary>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.SetSelectionStartPos(System.Int32,System.Int32)">
            <summary>
            Sets starting coordinates for selecting text. 
            </summary>
            <param name="row">The row in which the selection begins.</param>
            <param name="column">The column in which the selection begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values (1 to Rows) or (1 to Columns).
            </exception>                              
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ExtendSelection(System.Int32,System.Int32)">
            <summary>
            Selects all text in the terminal window between the selection start position
            and the specified coordinates. Use the SetSelectionStartPos method to set
            the starting coordinates.
            </summary>
            <param name="row">The row in which the selection should end.</param>
            <param name="column">The column in which the selection should end.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.ExtendSelectionRect(System.Int32,System.Int32)">
            <summary>
            Selects all text in the terminal window in all rows between the starting row and the specified
            row. Use the SetSelectionStartPos method to set the starting coordinates.
            </summary>
            <param name="row">The row in which the selection should end.</param>
            <param name="column">The column in which the selection should end.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForControlKey(System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode,System.Boolean)">
            <summary>
            Waits for the specified control key press.
            </summary>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="keycode">control key code</param>
            <param name="continueProcess">value to indicate whether the program should continue to process other actions</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForHostSettle(System.Int32)">
            <summary>
            Waits for host screen data to settle (no incoming data for the specified settle time).
            </summary>
            <param name="settleTime">settle time (milliseconds)</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForHostSettle(System.Int32,System.Int32)">
            <summary>
            Waits for host screen data to settle (no incoming data for the specified settle time).
            The wait timeout value should be greater than settleTime.  The keyboard is disabled.
            </summary>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="settleTime">settle time (milliseconds)</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForHostSettle(System.Int32,System.Boolean)">
            <summary>Waits for host screen data to settle (no incoming data for the specified settle time).</summary>
            <param name="settleTime">settle time (milliseconds).</param>
            <param name="enablekeyboard">Specifies whether the keyboard should be enabled while the call is executing.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForHostSettle(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Waits for host screen data to settle (no incoming data for the specified settle time).
            The wait timeout value should be greater than settleTime.  
            </summary>
            <param name="settleTime">settle time (milliseconds).</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="enablekeyboard">Specifies whether the keyboard should be enabled while the call is executing.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForIncomingData">
            <summary>
            Waits for any data to come from the host.  The keyboard is disabled.
            </summary>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForIncomingData(System.Int32)">
            <summary>
            Waits for any data to come from the host.  The keyboard is disabled.
            </summary>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForIncomingData(System.Int32,System.Boolean)">
            <summary>
            Waits for any data to come from the host.  
            </summary>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="enablekeyboard">Specifies whether the keyboard should be enabled while the call is executing.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForString(System.String)">
            <summary>
            Waits for the specified text to be received from the host.
            </summary>
            <param name="text">text to wait for.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForString(System.String,System.Int32)">
            <summary>
            Waits for the specified text to be received from the host.
            </summary>
            <param name="text">text to wait for.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForString(System.String,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits for the specified text to be received from the host.
            </summary>
            <param name="text">text to wait for.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="option">Wait options.  Multiple options can be OR'ed together.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForStrings(System.String[])">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array specifying one or more strings for which to wait.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForStrings(System.String[],System.Int32)">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array specifying one or more strings for which to wait.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForStrings(System.String[],System.Int32,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array specifying one or more strings for which to wait.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="option">Wait options.  Multiple options can be OR'ed together.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitForStrings(System.String[],System.Int32,System.Int32@,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array specifying one or more strings for which to wait.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="stringidx">1-based index indicating string in text array that satisfied condition.</param>
            <param name="option">Wait options.  Multiple options can be OR'ed together.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitUntil(System.DateTime)">
            <summary>
            Waits until the specified time.
            </summary>
            <param name="time">Time to wait until.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.WaitUntil(System.DateTime,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits until the specified time.
            </summary>
            <param name="time">Time to wait until.</param>
            <param name="option">Valid options for this method are AllowKeystrokes, NoDisplay and None.</param>
            <returns>ReturnCode indicating success/failure/status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.Wait(System.Int32)">
            <summary>
            Wait for the specified duration.
            </summary>
            <param name="waitTime">wait time in milliseconds</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.GetCharacterAttributes(System.Int32,System.Int32)">
            <summary>
            Retrieves character attributes for the specified position.
            </summary>
            <param name="row">screen row position</param>
            <param name="column">screen column position</param>
            <returns>Attribute information for the specified position.  May specify multiple attributes.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.GetCharacter(System.Int32,System.Int32)">
            <summary>
            Gets the ScreenCharacter at the specified location.
            </summary>
            <param name="row">screen row position</param>
            <param name="column">screen column position</param>
            <returns>ScreenCharacter for the specified position.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreen.GetCharacters(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets ScreenCharacter objects from the specified location, each representing one character at a screen location. 
            The length argument specifies the number of screen bytes to get. In SBCS, the number of screen bytes is the same as that of ScreenCharacter objects.
            In DBCS, the two numbers can be different. If the last byte is only one half byte of a DBCS character, the last byte is not returned.
            </summary>
            <param name="row">screen row position</param>
            <param name="column">screen column position</param>
            <param name="length">The number of characters to obtain.</param>
            <returns>Array of ScreenCharacter for the specified position.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IScreenPrivateAPI">
            <summary>
            An extension to the IScreen interface specifically for elements that we wish to implement in VBA/COM that we
            do not want to make available via the .Net API.
            </summary>
            <exclude/>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.IScreenPrivateAPI.RWINDefinedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreenPrivateAPI.DefineEvent(System.Int32,Attachmate.Reflection.Emulation.OpenSystems.DefinedEventType,System.String,System.Int32,System.Int32)">
            <summary>
            Defines a specific event
            </summary>
            <param name="EventNumber">The integer value used as an identifier for this event.  If the value is set to
            0, a value is automatically assigned.</param>
            <param name="EventType">The event type being defined.</param>
            <param name="String">Mandatory for EventTypes that require a String parameter, otherwise ignored.</param>
            <param name="Row">The screen row position (the first row = 1). Mandatory for EventTypes that require a Row parameter, otherwise ignored.</param>
            <param name="Column">The screen column position (the first column = 1). Mandatory for EventTypes that require a Column parameter, otherwise ignored.</param>
            <returns>Assigned event number</returns>  
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreenPrivateAPI.RemoveEvent(System.Int32)">
            <summary>
            Removes a specific event that was defined via DefineEvent.
            </summary>
            <param name="eventNumber">integer designating the event to remove</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IScreenPrivateAPI.ClearEvents">
            <summary>
            Removes all events defined via DefineEvent.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ITerminal">
            <summary>
            The Terminal is an Open Systems host emulation session object.
            </summary>
            <remarks>
            The control Guid for non graphics terminal is {BE835A80-CAB2-40d2-AFC0-6848E486BF58}.
            The control Guid for ReGIS Graphics terminal is {C62BA7E4-5A20-4681-931B-07BF7C971D13}.
            These Guids are used as the input parameters for CreateControl( Guid controlType) in the Application object. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TerminalUserControlContext">
            <summary>
            This is an internal property used to determine the context of this terminal object usage. This is set to true
            if this terminal object is being used in a Terminal User Control context.
            </summary>
            <remarks>
            The default is false.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.AllowJIS">
            <summary>
            Gets or sets a value indicating whether JIS escape sequences are allowed when other host character sets are selected. 
            </summary>
            <remarks>
            When this property is false, JIS characters display only when a JIS mode (JIS 1978, JIS 1983, JIS 1990, or JIS Katakana) 
            is selected. When it is true, JIS escape 
            sequences are allowed when other Japanese character sets (such as EUC or SJIS) are selected.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.AnswerBack">
            <summary>
            Gets or sets a string that is sent to the host when Reflection receives an Enq character from the host. 
            </summary>
            <remarks>
            When EnqAck is set to true, Reflection sends an Ack character in response to an Enq from the host, 
            and the value of AnswerBack is ignored. This property is relevant only when the EnqAck property is set to false. 
            </remarks>
            <value>
            The default value is "". 
            The string cannot be more than 30 characters long.
            </value>
            <exception cref="T:System.ArgumentException">
            Thrown if the set parameter is too long for the current terminal type.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.AutoAnswerback">
            <summary>
            Gets or sets a value indicating whether the answerback message (set with the AnswerBack property) is automatically 
            sent to the host after a communications line connection. 
            </summary>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.AutoConnect">
            <summary>
            Gets or sets a value indicating whether to attempt to establish a host connection 
            as soon as the current settings file is loaded. 
            </summary>
            <remarks>
            You must save the current settings file after changing the value of this property. 
            This property causes an error when Reflection is connected to a host. 
            Use the IsConnected property to determine if a connection already exists.
            </remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.BellEnabled">
            <summary>
            Gets or sets a value indicating whether a bell sounds when the ASCII bell character (decimal 7) 
            is transmitted from the keyboard or received from the host.
            </summary>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.BlockTerminator">
            <summary>
            Gets or sets a block terminator character to be transmitted at the end of each block data transmission.
            </summary>
            <value> 
            The default value is Chr$(rcSUB). 
            Only ANSI characters with values from 0 to 31 are valid for this property. 
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CacheSecureShellUserName">
            <summary>
            	<para>
            		Gets or sets a value indicating whether Reflection caches the user name entered for a Secure Shell session.
            	</para>
            </summary>
            <remarks>
            	<para>
            	When this property is true (the default), the user name is saved in memory until the Reflection Desktop is closed. Users are not
            prompted for a user name when they reconnect unless they reopen the workspace. 
            	</para>
            	<para>
            	When this property is false, the user name is cleared from memory immediately after a successful connection is
            established and users are prompted for a user name when they reconnect.
            	</para>
            	<para>
            		This property is relevant only when ConnectionType = "SECURE SHELL". 
            	</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CitrixIPAddress">
            <summary>
            Gets the IP address for a connection to a Citrix host.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CitrixPCName">
            <summary>
            Gets the PC name returned by a Citrix host.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CitrixUserName">
            <summary>
            Gets the Username value for a Citrix connection type.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ClearDisplayOnDisconnect">
            <summary>
            Gets or sets a value indicating how Reflection handles the display memory when you disconnect from the host. 
            </summary>
            <remarks> 
            When this property is true, 
            Reflection clears the screen after disconnecting from the host. 
            When it is false, data in the display memory is retained. 
            </remarks> 
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CodePage">
            <summary>
            Gets the current DOS code page. 
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.IsConnected">
            <summary>
            Gets a value indicating whether Reflection is connected. 
            </summary>
            <remarks>
            This property is true if a host connection exists or if a port is open.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionError">
            <summary>
            Gets the error number that describes the specific cause of the most recent 
            general connection failure (only when the last returned error has
            the value ErrConnectionError). 
            </summary>
            <remarks>
            If no connection failure has occurred, this property returns zero. 
            Use ConnectionErrorMessage to 
            retrieve the error message.  
            <para>If you use ConnectionError for errors other than ErrConnectionError, 
            you will retrieve information that is not valid for the current error condition.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionErrorMessage">
            <summary>
            Gets the text string that describes the specific cause of the most recent 
            general connection failure (only when the last returned error has the value 
            ErrConnectionError). 
            </summary>
            <remarks> 
            If no connection failure has occurred, this property returns an empty string. 
            The connection error message strings are stored internally in the connection 
            library module of Reflection and cannot be changed. 
            <para>If you use ConnectionErrorMessage for errors other than ErrConnectionError, you will 
            retrieve information that is not valid for the current error condition.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionID">
            <summary>
            Gets the integer value that uniquely identifies the current connection. 
            </summary>
            <remarks>
            This value can be used with the ResumeConnection method 
            to resume a suspended connection. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionSettings">
            <summary>
            Gets the IConnectionSettings object. 
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionType">
            <summary>
            Gets or sets the connection type.
            </summary>
            <remarks>
            When you use this property to set a connection type, all connection settings 
            for that type (that is, all settings you can configure with the 
            ConnectionSettings property) are reset to their default values. 
            <para> If you're writing a procedure that manipulates the current data connection 
            settings, you may want to determine the current connection type with this property 
            before making changes to the connection settings. After determining the current 
            connection type, you can use the ConnectionSetting method to retrieve the value of a single connection keyword token, 
            or the ConnectionSettings property to retrieve or set any or all of the connection keyword tokens.</para>
            <para> If you're writing a procedure that manipulates the current data connection settings, 
            you may want to determine the current connection type with this property before making changes 
            to the connection settings. After determining the current connection type, you can use the ConnectionSetting
            method to retrieve the value of a single connection keyword token, or the ConnectionSettings property 
            to retrieve or set any or all of the connection keyword tokens.</para>
            <para>If a connection is already active and you try to set the connection type, 
            a runtime error results. You should either trap the error with an error-handing routine, 
            or use the IsConnected property to first determine if a connection is active.</para>
            </remarks>
            <value>
            The default value is "BEST-NETWORK".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DataStreamTranslation">
            <summary>
            Gets or sets whether Reflection translates characters from the host to the PC, 
            and vice versa, using the current translation table. 
            </summary>
            <remarks>
            You can specify the translation table using a Reflection translation table editor. 
            For more information, see the Reflection Help.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DeviceResponse">
            <summary>
            Gets or sets how Reflection responds to a primary device attribute request from the host (usually when logging on). 
            </summary>
            <remarks>
            This value is independent of the value for TerminalType. 
            For a list of the actual replies that are sent for each value, 
            see the Reflection Terminal Reference PDF file.
            </remarks>
            <value>
            The default depends on whether you have selected UNIX or OpenVMS defaults. 
            See HostForDefaultSettings for details.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.IsDataCarrierHigh">
            <summary>
            Gets a value indicating whether the data carrier signal is high. 
            Relevant only for serial connections.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DefaultPrinter">
            <summary>
            Gets or sets the default printer to which Reflection sends printer output. 
            </summary>
            <remarks>
            Assigning a default printer with this property 
            has no effect on the default printer used by other Windows applications.
            <para>
            The default printer string consists of the printer name, driver, and port as shown in these examples:</para>
            <para></para>
                <para>DefaultPrinter = "HP LaserJet 4,WINSPOOL,\\Mynet\Myprint"</para>
                <para>DefaultPrinter = "Epson AP-4000,WINSPOOL,LPT1:"</para>
            <para></para>
            <para>To force Reflection to always use the default printer specified in the Windows Control Panel, set this property to an empty string. 
            </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ElfAtochemEmulation">
            <summary>
            Gets or sets a value indicating whether Elf Autochem terminal emulation is enabled. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.EnquireAcknowledge">
            <summary>
            Gets or sets a value indicating whether Reflection uses a form of handshaking called Enquire Acknowledge (EnqAck).
            </summary>
            <remarks>Host computers use Enquire Acknowledge handshaking to prevent the terminal from falling too far behind the host system and losing data.
            <para>When the host system has a block of more than 80 characters to send, it sends 80 characters and an ASCII Enq character, and then stops transmitting. When
            Reflection has processed all of the characters preceding the Enquire, it sends an ASCII Acknowledge character, which tells the host that Reflection has caught
            up and is ready for more data.</para></remarks>
            <value>
            The default value is false for UNIX and OpenVMS and ReGIS Graphics emulations. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.EnterKeyConnects">
            <summary>
            Gets or sets a value indicating how Reflection responds if the ENTER key is pressed when not connected to a host. 
            </summary>
            <remarks>
            When this property is true, 
            pressing the ENTER key connects you to a host. 
            When it is false, pressing the ENTER key has no effect.
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.FileTransfer">
            <summary>
            Gets the FileTransfer object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ForceC1Controls">
            <summary>
            Gets or sets a value indicating whether Reflection interprets character codes in certain host character sets.
            </summary>
            <remarks>
            This property applies only when emulating a VT-series or ANSI terminal (that is, it does not apply to Tektronix emulation).
            <para>Certain host character sets (such as PC-English or Chinese BIG-5) contain characters whose code values overlap those in the 
            C1 control character region (characters 128 through159). This property determines whether Reflection interprets character 
            codes in this overlapping region or displays them as host characters.</para>
            <para>If this property is true, Reflection interprets character codes between 128 and 159 as C1 control codes. 
            This allows VAX applications like TPU to work properly; however, characters defined in this range are no longer displayable. </para>
            <para>If this property is set to false, then Reflection interprets C1 character codes only for host character sets that support it 
            (that is, host character sets that do not define displayable characters in the C1 control range).</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GraphicsDestination">
            <summary>
            Gets or sets the destination of graphics when you print using the ReGIS hard copy command.
            </summary>
            <remarks>
            When you print a graphic using the ReGIS hard copy command, the graphic is sent either to the host or 
            to a digital printer. 
            <para>When the graphic is sent to the host, it is sent as a stream of sixel data. 
            The host must be ready to accept the data; for example, by collecting it in a file.</para>
            <para>When the graphic is sent to a digital (host) printer, it is printed as a bitmap image. If BypassPrinterDriver is set to true, 
            a sixel data stream is sent to the printer (this assumes you are printing to a digital printer).</para>
            </remarks>
            <value>
            The default value is ToPrinter. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GraphicsFixScreen">
            <summary>
            Gets or sets a value indicating whether the onscreen graphic is periodically updated from the offscreen graphic. 
            </summary>
            <remarks>
            This value is appropriate for 8514 and other 
            coprocessor-based video cards, as a way of keeping the offscreen and onscreen graphics synchronized. 
            For other adapters, graphics synchronization is not an 
            issue, and setting this property to false speeds up drawing. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GraphicsLevel">
            <summary>
            Use this property to match Reflection to the capabilities of a digital printer with regard to aspect ratio, 
            horizontal grid size, background printing, and color printing.
            </summary>
            <remarks>
            This property is relevant only for sending sixel data to the host (that is, when the GraphicsDestination property is set to ToHost) 
            or when GraphicsDestination is set to ToPrinter and BypassPrinterDriver is set to true.
            
            This property also affects saving display sixels in the Save Display As dialog box.
            </remarks>
            <value>
            The default value is Level2. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GraphicsOutputCursor">
            <summary>
            Gets or sets a value indicating whether the graphics output cursor is displayed. 
            </summary>
            <remarks>
            ReGIS displays two types of graphics cursors: an output cursor and an input cursor. 
             The output cursor appears when ReGIS waits for commands from the host 
            (or from the ReGIS command line).
            Displaying the graphics output cursor can also be controlled by the ReGIS screen command S(C[n]). 
            This ReGIS command includes an option that controls the style of the graphics output cursor.
            <para></para>
            <para>The input cursor appears when ReGIS waits for graphics input, such as a cursor position report. 
            You can position the input cursor with the mouse or the arrow keys. 
            This property has no effect on the graphics input cursor.
            </para>
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GraphicsPrintMode">
            <summary>
            Gets or sets how graphics images are printed.
            </summary>
            <value>
            The default value is Compress.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GraphicsScrolling">
            <summary>
            Gets or sets a value indicating whether sixel images are scrolled.
            </summary>
            <remarks>
            A sixel is a vertical column of six pixels used to display graphic images. 
            When this property is set to true, the sixel image begins at the current text position 
            and scrolls the display when the image reaches the bottom margin of the display 
            (the image may also scroll off the top of the display if it doesn't fit). 
            <para>A graphics new line character is sent immediately after the sixel dump, and the text cursor is set at 
            the same position as the sixel cursor when you exit sixel mode. </para>
            <para></para>
            <para>When this property is set to false, the sixel image begins at the top left of the display. 
            When the image reaches the bottom margin, the display does not scroll, and additional sixel commands are ignored. 
            Upon exiting sixel mode, the text cursor is set at the same position as when sixel mode was entered.</para>
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.IsGraphicsSupported">
            <summary>
            Gets a value indicating whether graphics is supported.
            </summary>
            <remarks>
            Returns true if this terminal type supports rendering graphics and false if graphics are not supported.
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GraphicsTerminalType">
            <summary>
            Gets ors sets which terminal is emulated, and how many shades or colors are available in ReGIS.
            </summary>
            <value>
            The default value is VT340. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HorizontalCoupling">
            <summary>
            Gets or sets a value indicating whether the column in which the cursor is located remains in the terminal window 
            regardless of how the terminal window is resized, or which screen font size is used.
            </summary>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HostCharacterSet">
            <summary>
            Gets or sets the host character set that Reflection uses when transmitting and receiving characters.
            </summary>
            <remarks>
            This property lets you assign a supplemental character set as the default user-preferred supplemental (UPS) set.
            <para>The combination of the ASCII and Digital Supplemental Graphic character sets is called the Multinational character set (MCS); 
            the combination of the ASCII and ISO Latin-1 supplemental sets is called the ISO Latin Alphabet Number 1 set. These two supplemental 
            sets are very similar, consisting of symbols and characters for English and many other western European languages. </para>
            <para>The UPS set assigned by this property is loaded as the default when a soft reset is performed (for example, with the ResetTerminal 
            method) or when the DECSTR sequence is invoked. The UPS set can also be specified with the Select Character Set (SCS) sequence. </para>
            </remarks>
            <value>
            The default  for UNIX and OpenVMS and ReGIS Graphics emulations is DECSupplemental. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.AllowColorTableChanges">
            <summary>
            Gets or sets a value indicating whether Reflection responds to host commands that are related to color table changes.
            </summary>
            <remarks>
            When this property is set to true, the terminal color map can be set using either the ReGIS S(M) command 
            or the restore color table (DECRSTS) control function. 
            <para>When it is set to false, Reflection does not change the color table in response to these commands.</para>
            <para>Reflection always allows the color table to change as a result of displaying a sixel, regardless of the value 
            of AllowColorTableChanges.</para>
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HostDescriptionFileName">
            <summary>
            Gets or sets the name and location of the host description file that is used by the GetHostElement method. 
            </summary>
            <remarks>
            The host description file 
            is an XML file that contains information about how hosts respond to logon attempts. 
            The value of this setting is saved in the Windows registry and affects all subsequent Reflection sessions.
            </remarks>
            <value>
            The default value is "%CommonInstallFolder%\hosts.xml".
            
            The following environment variables are supported:
            <list type="bullet">
            <item><term>%UseAppData%</term><description>- Typically C:\Documents and Settings\username\Application Data).</description></item>
            <item><term>%ProductAbbreviation%</term><description>- RHP, RRG, RUO, RSIT. </description></item>
            <item><term>%InstallFolder%</term><description>- Typically C:\Program Files\Micro Focus\Reflection.</description></item>
            <item><term>%CommonInstallFolder%</term><description>- Typically C:\Program Files\Common Files\Micro Focus.</description></item>
            <item><term>%PersonalFolder%</term><description>- Typically C:\Documents and Settings\username\My Documents.</description></item>
            <item><term>%UserProfile%</term><description>- Typically C:\Documents and Settings\username.</description></item> 
            <item><term>%CommonDocumentsFolder%</term><description>- Typically C:\Documents and Settings\All Users\Documents.</description></item> 
            <item><term>%ProgramFilesFolder%</term><description>- Typically C:\Program Files.</description></item>
            <item><term>%ProgramFiles%</term><description>- Synonym for %ProgramFilesFolder%.</description></item>
            <item><term>%UserName%</term><description>- The Windows user name without the domain name.</description></item>
            </list>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HostsFile">
             <summary>
             Gets or sets the file path for the file that is used to populate the Host name/IP Address Drop-down
             list on the Create New VT Document dialog box. 
             </summary>
             <remarks>
             The value of this property depends on your network software. Changing the value of this property 
             in one instance of Reflection affects any instance of Reflection (version 6.0 or later) that you run. 
            
             The file specified by the HostsFile property is expected to follow the following format:
                    &lt;IPv4 or IPv6 address&gt; &lt;host name&gt;
                    For Example:
                    127.0.0.1 localhost
                    :: localhost
            
             The IP address information is not relevant unless the specified host file also happens to be the Windows system hosts file.
             The host name information is used to populate the Host name/IP Address Drop-down list on the Create New VT Document dialog box.
             </remarks>
             <value>
             The default value is "". (When the default is set, the path to the local Windows Hosts file is used.)
             </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DefaultHostSettings">
            <summary>
            Gets or sets whether Reflection uses default settings appropriate to a UNIX or OpenVMS host.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property affects all new instances 
            of Reflection.
            </remarks>
            <value>
            The initial value is determined during Setup.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HostStatusLine">
            <summary>
            Gets or sets the current host status line display.
            </summary>
            <remarks>
            The bottom line of the terminal window is reserved for the VT status, a one-line display that shows information 
            about the current session. Normally, the host software sets this option.
            </remarks>
            <value>
            The default value is NoStatusLine. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HostTriggerCharacter">
            <summary>
            Gets or sets the host trigger character value. 
            </summary>
            <remarks>
            This property returns (first syntax line) or specifies 
            (second syntax line) the character that Reflection expects as the host-prompt character. 
            This character is sent immediately after a host prompt. 
            <para>Before changing this value, turn on display functions or display controls to verify the actual host prompt character. 
            </para>
            </remarks>
            <value>
            The default value for UNIX and OpenVMS and ReGIS Graphics emulations is a null, which can be represented as Chr$(rcNUL). 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.KeyboardMapper">
            <summary>
            Gets the KeyboardMapper object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ContextMenus">
            <summary>
            Gets the ContextMenus object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.UiControlActionMapper">
            <summary>Gets the object used to map actions to the user interface control and to retrieve the action sequence from the user interface control.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.MouseMapper">
            <summary>
            Gets the MouseMapper object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Macro">
            <summary>
            Gets the Macro object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.LocalEcho">
            <summary>
            Gets or sets a value indicating whether the local computer "echoes" typed characters directly to the screen. 
            </summary>
            <remarks>
            If a host connection exists and both the Online property and LocalEcho are set to true, typed characters appear on the screen 
            twice; once when echoed from the local computer and a second time when echoed back from the host. 
            <para>Set LocalEcho to true only for communication with a host system that does not echo typed characters. </para>
            <para>When Reflection is in local or block mode, characters are echoed locally even if LocalEcho is set to false.</para>
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.LogToSerialDevice">
            <summary>
            Gets or sets a value indicating whether data logged by the terminal is sent to the currently configured serial device. 
            </summary>
            <remarks>
            Set this property to true if you use a host application that requires two-way communication with a serial device, 
            such as a printer or bar code reader.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.MacrographReportsEnabled">
            <summary>
            Gets or sets a value indicating whether macrograph reporting is enabled. 
            </summary>
            <remarks> 
            A macrograph is a way to define and store a set of ReGIS commands as a single
            character (that is, as a graphics macro). By default, ReGIS can report the contents of a specific macrograph. 
            <para> If, for security or other reasons, you don't want to allow macrograph reporting, 
            set this property to false.</para>
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.MappedNumLockPreservesNumLock">
            <summary>
            Gets or sets how Reflection responds to a NUM LOCK key press on the PC when it is mapped to emulate the action of a 
            terminal key. 
            </summary>
            <remarks>
            In default VT emulations, the NUM LOCK key is mapped to PF1; the Num Lock state has no 
            effect on the behavior of the numeric keypad or other keys.
            <para> When this property is true, pressing the NUM LOCK key sends the mapped keystroke to the host 
            and also preserves the current Num Lock state of the PC keyboard. This matches the behavior of all 
            Reflection sessions prior to version 9.0. </para>
            <para>When this property is false, pressing the NUM LOCK key sends the mapped keystroke to the host 
            and turns the PC Num Lock state on or off. (The Num Lock indicater light also turns on or 
            off each time you press the NUM LOCK key.)</para>
            <para>On Windows 2000 systems with non-USB keyboards, pressing the mapped NUM LOCK key repeatedly 
            may result in a locked keyboard. Changing this property to false fixes this problem. </para>
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.MouseShape">
            <summary>Gets or sets the appearance of the mouse pointer in the terminal window.</summary>
            <value>The default value is IBeam.</value>
            <exception caption="" cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property that was secured via 
            the Permissions Manager, or that can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.NationalReplacementSet">
            <summary>
            Gets or sets the set of character translations that occur between the local computer and the host in 7-bit mode.
            </summary>
            <remarks>
            This property affects how characters entered from the keyboard or from a local file are transmitted to the host, 
            and how characters sent from the host are written to local files, to the screen, or both. 
            <para>Translations are not performed unless the UseNRC property is set to true.</para>
            <para>For a chart that shows character replacements
            for various languages, see the Reflection Terminal Reference PDF file.</para> 
            </remarks>
            <value>
            The default is None.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.NRCEnabled">
            <summary>
            Gets or sets a value indicating whether the translations specified by the NationalReplacementSet property are performed. 
            </summary>
            <value>
            The default value is false. 
            The value of this property is not saved to a settings file.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.OnLine">
            <summary>
            Gets or sets a value indicating whether Reflection is in remote mode or local mode. 
            </summary>
            <remarks>
            In remote mode (that is, when the Online property is set to true), Reflection transmits each character typed at the keyboard 
            out the datacomm port. As characters are received back from the host, they are displayed on the screen. If there is no connection, 
            characters are not echoed. 
            <para>
            In local mode (that is, when Online is set to false), Reflection immediately displays what is typed on the screen 
            without attempting to send it out the datacomm port. Data received from the host is discarded. </para>
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.PreserveNRC">
            <summary>
            Gets or sets a value indicating whether Digital terminals reset national replacement mode when a soft reset occurs. 
            </summary>
            <remarks>
            To preserve national replacement mode, set this property to true. 
            </remarks> 
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ProcessDataComm">
            <summary>
            Gets or sets a value indicating whether Reflection processes incoming characters between calls to Reflection methods. 
            </summary>
            <remarks>
            Do not use this property unless you are controlling Reflection from an external application using Automation. 
            <para> When this property is set to false, Reflection only processes incoming datacomm characters during an explicit call to a method 
            that reads datacomm (such as ReadChars, ReadLine, or WaitForString). Reflection does not process incoming unless it is instructed to 
            do so. The data will sit in a queue until one of the Reflection methods that explicitly processes this data (such as WaitForString)</para> 
            is executed. 
            <para> In addition, an external program has exclusive access to the incoming datastream, ensuring that 
            no incoming characters are lost. For example, if the controlling program is logging on, it is important that Reflection does 
            not process the incoming data after a Transmit method but before the subsequent WaitForString method. So the controlling program 
            must set ProcessDataComm to false to assure that the logon works correctly. However, if the controlling program wants the user 
            to interact directly with a host application, it must set ProcessDataComm to true to allow that user interaction.</para>
            <para></para>
            <para>When this property is set to true (the default), Reflection processes incoming data just as a terminal would.</para>
            </remarks>
            <value>
            The default value is true.
            <para> Regardless of the current value of ProcessDataComm, when Reflection runs a macro or script, data from the host is processed
            only if the macro includes methods (such as WaitForString) that explicity handle incoming data. Data not handled explicitly in the 
            macro is not processed until the macro terminates. </para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ProcessInvalidKeystrokes">
            <summary>
            Gets or sets how Reflection handles invalid keystrokes. 
            </summary>
            <remarks>
            When this property is true, invalid keystrokes generate an error message. 
            <para>When this property is false, invalid keystrokes are ignored. For example, if a user presses a key 
            that is mapped to a macro when another macro is running, by default, Reflection displays an error stating 
            that a macro is already running. </para>
            <para> Setting ProcessInvalidKeystrokes to false avoids this error.</para> 
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Productivity">
            <summary>
            Gets the Productivity object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ReGISAlwaysGraphicsMode">
            <summary>
            Gets or sets ReGIS Graphics mode. 
            </summary>
            <remarks>
            When this property is set to false and Reflection goes into ReGIS Graphics mode, the screen and cursor remain in 
            text mode until graphics are present. When this property is set to true and Reflection goes into ReGIS Graphics mode, 
            the screen and cursor change to ReGIS Graphics mode regardless of whether or not graphics are present.
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ReGISBufferSize">
            <summary>
            Gets or sets the size of the buffer reserved for caching ReGIS graphics. 
            </summary>
            <value>
            The default value is 5000. Each unit represents one ReGIS instruction.
            The range of values is 0 - 32767.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ReGISV6">
            <summary>
            Gets or sets how ReGIS graphics are handled. 
            </summary>
            <remarks>
            When this property is false, Reflection uses enhanced features for handling these graphics. 
            Enhancements include support for image resizing, clearer fonts, improved printed images, 
            and increased speed. 
            <para>When this property is true, Reflection handles these graphics as it did in version 6.0. 
            Some types of graphics, such as fill patterns, may be more accurately represented when ReGISV6 
            is true.</para>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SaveSessionOnClose">
            <summary>
            Gets or sets a close option, which indicates how to handle the save action when closing the control.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SaveScrollingRegion">
            <summary>
            Gets or sets a save state for the scrolling region. 
            </summary>
            <remarks>
            When top and bottom screen margins are set (for example, by a text editor such as EDT or TPU, 
            or with the DECSTBM function), the area within the margins is called the scrolling region. 
            You cannot scroll outside of the scrolling region. By default, text that scrolls out of the scrolling region 
            is not saved in display memory. If a scrolling region is set by a text editor, setting this property to true 
            can cause display memory to fill quickly; every time you scroll your document down, text that scrolls off 
            the top of the display is moved into display memory. 
            <para>For most situations, it's best to leave this property set to false.</para>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SaveSecureShellUserName">
            <summary>
            Gets or sets whether Reflection saves the user name when you save your settings files or record a connection macro. 
            </summary>
            <remarks>
            When this property is true, the user name is saved.
            This property is only relevant when ConnectionType = "SECURE SHELL".
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Screen">
            <summary>
            Gets the Screen object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SendKeyboardModifierPrefix">
            <summary>
            Gets or sets a value indicating whether a SHIFT, CTRL, or ALT key press sends an escape sequence and, if the key is pressed 
            in conjunction with other keys, prefixes the escape sequence to outbound data, in VT-UTF8 emulations.
            </summary>
            <remarks>
            When this property is true, pressing and releasing the modifer key alone causes an escape sequence to be sent; pressing 
            the modifer key with other keys prefixes the escape sequences to outbound data.
            <list type="bullet">
            <listheader><term>Key Prefix</term></listheader>
            <item><term>SHIFT key (alone)</term><description>Esc Ctrl+U Esc Ctrl U</description></item>
            <item><term>SHIFT key (+ other keys)</term><description>Esc Ctrl+U</description></item>
            <item><term>CTRL key (alone)</term><description>Esc Ctrl+C Esc Ctrl+C</description></item>
            <item><term>CTRL key (+ other keys)</term><description>Esc Ctrl+C</description></item>
            <item><term>ALT	key (alone)</term><description>Esc Ctrl+A Esc Ctrl+A</description></item>
            <item><term>ALT	key (+ other keys)</term><description>Esc Ctrl+A</description></item>
            </list>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SerialDeviceToHost">
            <summary>
            Gets or sets a value indicating whether data received from the currently configured serial device port is sent to the host. 
            </summary>
            <remarks>
            This property is usually set by the host application when it is required. 
            </remarks>
            <value>
            The default is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SerialDevicePort">
            <summary>
            Gets or sets the serial port on the PC that is used as the terminal serial device port. 
            </summary>
            <remarks>
            The value of this property is only relevant when the
            LogToSerialDevice property is true.
            </remarks>
            <value>
            The default value is "NONE".
            Possible values are "COM1," "COM2," and so forth. 
            These values are not case sensitive.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SerialDeviceSettings">
            <summary>
            Gets or sets the configuration parameters for the currently configured serial printer port. 
            </summary>
            <remarks>
            The value of this property is only relevant 
            when the LogToSerialDevice property is true.
            <para></para>
            The value consists of alternating "keyword tokens" and "value tokens." The keyword token identifies a serial device setting; the value 
            token specifies a value for the setting. SerialDeviceSettings supports four keyword tokens: Baud, ReceivePacing, TransmitPacing, and 
            Stop Bits. (The possible values for these settings are the same as for the ConnectionSettings property.) You should include all four 
            keyword tokens in the string using the following syntax. For each setting, replace value with the setting value you want:
            <para></para>
            Session.SerialDeviceSettings "Baud value Parity value ReceivePacing value TransmitPacing value StopBits value"
            <para></para>
            For example:
            <para>SerialDeviceSettings = "Baud 14400 Parity 8/NONE ReceivePacing XON/XOFF TransmitPacing XON/XOFF StopBits 1"</para>
            <para></para>
            <para>The easiest way to build this string is to record a macro while you select your settings in the Configure Serial Device Port 
            dialog box. For more information, see the Reflection Help.</para>
            </remarks>
            <value>
            The default value is "Baud 9600 Parity 8/None ReceivePacing Xon/Xoff TransmitPacing Xon/Xoff StopBits 1".
            The values used in this string are not case sensitive.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SessionLimitsSecureShell">
            <summary>
            Gets or sets the maximum allowable number of simultaneous SecureShell sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property 
            affects all subsequent instances of the current Reflection product. 
            <para>SessionLimitsOpenSSH is a synonym.</para>
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SessionLimitsNSVT">
            <summary>
            Gets or sets the maximum allowable number of simultaneous VT-MGR sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property 
            affects all subsequent instances of the current Reflection product. 
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SessionLimitsRlogin">
            <summary>
            Gets or sets the maximum allowable number of simultaneous Rlogin sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property 
            affects all subsequent instances of the current Reflection product. 
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SessionLimitsTelnet">
            <summary>
            Gets or sets the maximum allowable number of simultaneous Telnet sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property 
            affects all subsequent instances of the current Reflection product. 
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionTimeVisible">
            <summary>
            Gets or sets a value indicating whether the Reflection status bar displays the length of time 
            you have been connected to a host.
            </summary>
            <value>
            The default value is true. (On Windows Terminal Server, this property is false.)
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HorizontalScrollBarVisible">
            <summary>
            Gets or sets a value indicating whether the horizontal scroll bar is visible.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.VerticalScrollBarVisible">
            <summary>
            Gets or sets a value indicating whether the vertical scroll bar is visible.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SingleByteUPSS">
            <summary>
            Gets or sets which Digital UPS character set that is used when 
            SET HOST-CHARACTER-SET is set to a double-byte character set.
            </summary>
            <value>
            The default value is DECSupplemental. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StartupConnection">
            <summary>
            Gets or sets the saved connection that is used when the StartupAction property
            is set to UseSavedConnection. 
            </summary>
            <remarks>
            Use this property only if you upgraded from a version of Reflection prior to version 6.0 and elected to continue using the 
            Connection Directory.
            </remarks>
            <value>
            The default value is "". 
            The string cannot be more than 63 characters long.
            </value>
            <exception cref="T:System.ArgumentException">
            Thrown if the set parameter length is longer than the maximum allowed.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StatusLineText">
            <summary>
            Gets or sets the current status line text. 
            </summary>
            <remarks>
            When this property is set to an empty string (""), the text display in the status line 
            shows the current terminal emulation and connection status. 
            <para>When this property is set 
            to any other value, that text is shown in the status line. If you want the status line 
            to update dynamically, you can programmatically set the value of this property to 
            respond to predefined events. </para>
            </remarks>
            <value>
            The default value is "". 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TAPIVersion">
            <summary>
            Gets or sets the Telephony Application Programming Interface (TAPI) that Reflection uses to 
            connect the PC to telephone services. 
            </summary>
            <remarks>
            The value of this property is saved in the Windows registry. Changing this property affects all subsequent instances
            of the current Reflection product. 
            </remarks>
            <value>
            The default value is TAPI3.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TerminalSound">
            <summary>Gets or sets how beeps sound.</summary>
            <remarks>
            All values (except Simple and DosBeep) take advantage of multimedia support 
            in Windows and require a sound board or the PC speaker driver (Speaker.drv). 
            <para>You may lose some characters sent from the host if all the following are true: </para><para>	You have the PC speaker driver installed under Windows. </para><para>	You're connected serially (that is, through COM1, COM2, COM3, or COM4). </para><para>	TerminalSound is set to a value other than Simple. </para><para>If you experience problems, set TerminalSound to Simple or DosBeep.</para></remarks>
            <value>
            The default value is Simple.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TerminalType">
            <summary>
            Gets or sets the terminal that Reflection is to emulate. 
            </summary>
            <value>
            When you set TerminalType to ANSIBBS or ANSIUNIX, the default values
            for the following properties change: 
            <list type="bullet">
            <item><description>Property, to the default Value for ANSIBBS and ANISUNIX.</description></item>
            <item><description>DisplayRows, to 25.</description></item>
            <item><description>EndOfLineWrap, to true.</description></item>
            <item><description>TransmitXonXoff, to true.</description></item>
            <item><description>UseAnsiColor, to true.</description></item>
            </list>
            In addition, the value of TransmitPacing automatically becomes None. (TransmitPacing is a "keyword token" you can use to configure a connection in Reflection.) 
            <para>If TerminalType is set to a non-ANSI value, these properties revert to their non-ANSI defaults.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TextFileCharacterSet">
            <summary>
            Gets or sets whether Reflection uses the ASCII or ANSI character set. 
            </summary>
            <remarks>
            The Windows character set (ANSI) is slightly different from the DOS character set (ASCII). 
            If you receive an ASCII file that will be used in the Windows environment, make sure this property 
            is set to WindowsCharacterSet. 
            <para>The value of this property can also affect printing if BypassPrinterDriver 
            and TranslatePrintedCharacters are both set to true.</para>
            </remarks>
            <value>
            The default value is WindowCharacterSet. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TimeSinceConnected">
            <summary>
            Gets the time (in seconds) during which you have been connected.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TraceFileName">
            <summary>
            Gets or sets a value indicating the name of the trace file that is created when Trace Session Start is true. 
            </summary>
            <remarks>
            Reflection always saves a file to the lowest available number. 
            For example, if you delete the first trace file, "Trace 1.rev",  
            the next trace file is saved to that name since it is the lowest available number. 
            </remarks>
            <value>
            The default value is "%ProductAbbreviation% Trace". This value creates files with the following naming pattern (where # is a number):
            <para>Trace #.rev.</para> 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TraceFolder">
            <summary>
            Gets or sets the location of the folder where Reflection saves trace files 
            that are created when Trace Session Start is true.
            </summary>
            <value>
            The default value is the Micro Focus\Reflection subfolder of your personal documents folder.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TraceSessionStart">
            <summary>
            Gets or sets a value indicating whether the Reflection Trace utility to begin tracing the moment Reflection starts. 
            </summary>
            <remarks> 
            This is useful for troubleshooting Reflection, because the utility gathers data before the settings files 
            are loaded or macros are executed. 
            <para>Use TraceFileName to specify a filename and TraceFolder to specify a location.</para>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CharacterSetTranslationEnabled">
            <summary>
            Gets or sets a value indicating whether the character set translation state is enabled. 
            </summary>
            <remarks>
            When this property is set to true, Reflection translates characters between the 
            PC character set and the appropriate national character set (Roman 8 or Digital Multinational)
            as data is read from or stored to disk. When TranslateCharacters is set to false, 
            any character can be transmitted or captured without being translated. 
            <para>This property affects printing, disk operations, and ASCII file transfers. </para>
            This property also affects translations between the Windows character set (ANSI) 
            and the ASCII character set on disk operations. 
            </remarks>
            <value>
            The default value is true. 
            The value of this property is not saved to a settings file. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.UseIPv6">
            <summary>
            Gets or sets how Reflection communicates with a host using the IPv6 and older IPv4 protocols.  
            </summary>
            <value>
            The default value is WhenAvailable. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.UseModemDialerV5">
            <summary>
            Gets or sets which modem dialer is used to make modem connections. 
            </summary>
            <remarks>
            When this value is false, Reflection uses the modem and dialer configured in the NT or 
            Windows Control Panel. When this value is true, Reflection uses the modem dialer that was 
            included with Reflection prior to version 6.0. 
            </remarks>
            <value>
            The default is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.UserData">
            <summary>
            Gets or sets data for the duration of the current Reflection session. 
            </summary>
            <remarks> 
            Use this property in macros to set and return global values that you want to remain 
            constant for throughout the current session. The value of this property is not saved 
            when you save your settings file.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.UserDefinedKeysLocked">
            <summary>
            Gets or sets a value indicating whether the host can alter the definitions of the user-defined keys. 
            </summary>
            <remarks>
            When this property is set to true, user-defined keys cannot be loaded from the host. 
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.UserFeaturesLocked">
            <summary>
            Gets or sets a value indicating whether certain features can be changed by the host.
            </summary>
            <remarks>
            When this property is set to true, the following properties cannot be changed by the host: 
            <list type="bullet"> 
            <item><description>Tab stops.</description></item>
            <item><description>The value of the KeyboardLocked property.</description></item> 
            <item><description>The value of the InverseVideo property.</description></item>
            <item><description>The value of the JumpScrollSpeed property.</description></item>
            <item><description>The value of the AutoRepeat property.</description></item>
            </list>
            <para></para>
            Some host applications require that this property be set to false, so that they can control these features.
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Version">
            <summary>
            Gets the version of the terminal session control.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Theme">
            <summary>
            Gets the Theme object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.VT640Compatible">
            <summary>
            Gets or sets a value indicating whether Reflection switches back and forth automatically between Tektronix and VT terminal emulation
            when it receives VT640-compatible control characters from the host. 
            </summary>
            <remarks>
            When this property is true, Reflection automatically sets the value of TerminalType to Tek401X when it receives a 
            control character (Ctrl-]) or the escape sequence EscGs from the host. Reflection exits Tektronix terminal emulation 
            and sets TerminalType to VT400_7 when it receives a Cancel control character (Ctrl-X) from the host.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.VTTek">
            <summary>
            Gets or sets VT340 Tektronix state. 
            </summary>
            <remarks>
            When this property is set to true, Reflection supports VT340 emulation of Tektronix terminals. When this property is set to 
            false, Reflection emulates Tektronix terminals in the same manner as Reflection for Windows 4.21 and earlier. 
            The differences are as follows.
            <para></para>
            Carriage Return and Line Feed Characters in bypass condition
            <para>When VTTek is set to true, a carriage return echoed from the host clears the bypass condition and is processed 
            (the cursor moves to the left margin), and an immediately subsequent line feed is also processed. Likewise, 
            a line feed echoed from the host clears the bypass condition and is processed (the cursor moves down a line), 
            and an immediately subsequent carriage return will also be processed.
            When VTTek is set to false, a carriage return echoed from the host will clear the bypass condition, but will not be processed 
            (the cursor doesn't move to the left margin); an immediately subsequent line feed also is not processed. Likewise, a line feed 
            echoed from the host clears the bypass condition (the cursor doesn't move down a line), and an immediately subsequent carriage 
            return will not be processed.</para>
            <para></para>
            Line Feed suppression (EscLf) and Carriage Return suppression (EscCr)
            <para> When VTTek is set to true and Reflection receives an EscLf sequence, Reflection won't process any line feeds 
            until it receives a BEL or other no-op control code. Likewise, when VTTek is set to true and Reflection receives an EscCr sequence, 
            Reflection won't process any carriage returns until it receives a BEL or other no-op control code. 
            When VTTek is set to false and Reflection receives an EscLf sequence, Reflection treats the Lf as a sequence terminator 
            until a subsequent BEL character is received. Likewise, when VTTek is set to false and Reflection receives an EscCr sequence, 
            Reflection treats the Cr as a sequence terminator until a subsequent BEL character is received.</para>
            <para></para>
            Tektronix Special Point Plot Mode (EscFs)
            <para>When VTTek is set to true, Reflection treats the character following the EscFs sequence as the first character of the point address. 
            When VTTek is set to false, Reflection treats the character following the EscFs sequence as a gray scaling intensity character.
            Because Reflection does not support gray scaling, the character is ignored.</para>
            <para></para>
            Tektronix GIN Mode Position Reports
            <para>When VTTek is set to true, Tektronix GIN mode position reports are preceded by the DECLBD down sequence. 
            If the DECLBD sequence is null, the position report and DECLBD sequence are not sent. 
            When VTTek is set to false, Tektronix GIN mode position reports are not preceded by the DECLBD down sequence. </para>
            <para></para>
            Alphanumeric Character Display
            <para>When VTTek is set to false, alphanumeric characters may be cut off or disappear off the top of the graphics area 
            while emulating a Tektronix terminal. If this happens, setting VTTek to true moves these characters down to the 
            top of the graphics area.</para> 
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WeakDeviceControlString">
            <summary>
            Gets or sets the device control string state. 
            </summary>
            <remarks>
            When this property is set to true, a device control string can be terminated by any of the characters that interrupt 
            escape sequences and control functions. These characters are CAN (decimal 24), SUB (decimal 26), and ESC (decimal 27). 
            This is the same behavior as the terminals in the VT200 through VT400 series, except the VT320.
            <para>When this property is set to false, Reflection matches the behavior of the VT320 terminal, and a device control 
            string can be terminated only by the string terminator character (decimal 156). Use this property if you need 
            Reflection to behave like an actual VT320 terminal (for example, if you need to pass control characters as part 
            of a sequence that would otherwise terminate the sequence).</para>
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WindowRows">
            <summary>
            Gets or sets the number of lines displayed on screen.
            </summary>
            <remarks>
            The DisplaysRows property controls the number of lines in each page of display memory (the area the host uses to display text
            and position the cursor). Changing the DisplayRows value automatically sets WindowRows to the same value; however, changing 
            the WindowRows value has no effect on DisplayRows. If WindowRows is larger than DisplayRows, the unused part of the 
            terminal window will be blank. If WindowRows is smaller than DisplayRows, only a portion of each display page will be visible 
            on screen; you must scroll to the view the entire display page.
            <para> If you change the number of rows using the Screen tab in the Reflection Display Setup dialog box, 
            Reflection automatically sets both DisplayRows and WindowRows to the new value.</para>
            </remarks>
            <value>
            The default value is 24.
            The range of values is 24 - 172.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.IsWinMASSSupported">
            <summary>
            Gets or sets a value indicating whether WinMASS software support is enabled. 
            </summary>
            <remarks>
            WinMASS is a language translation program. 
            <para></para>
            <para>When this setting is true, WinMASS works under Reflection. </para>
            <para>When this setting is false, WinMASS translation is not supported.</para>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WTSIPAddress">
            <summary>
            Gets the IP address returned by Windows Terminal Server (WTS).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WTSPCName">
            <summary>
            Gets the PC name returned by Windows Terminal Server (WTS).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WTSUserName">
            <summary>
            Gets the user name returned by Windows Terminal Server (WTS).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WyseAcceptNulls">
            <summary>
            Gets or sets a value indicating whether the terminal accepts nulls from the host(for Wyse terminal emulation only). 
            </summary>
            <remarks>
            This property affects situations where an escape sequence is used to define a string, such as 
            programming function keys or a message line.  
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.VBProject">
            <summary>
            Gets the VB Project (VBA use only)
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.VBCommonProject">
            <summary>
            Gets the Common VB Project (VBA use only)
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DASOApplicationID">
             <summary>
             Gets or sets the application ID to use for DASO (Digital Certificate
             Access Server Automated Sign On) support.
             </summary>
             <remarks> 
             This property is required for DASO and can be set either via this field or in
             the call to GetDASOPassTicket.
             The default is "".
            
             </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DASOUserID">
            <summary>
            Gets the RACF USERID for DASO (Digital Certificate Access Server Automated Sign On).
            This field will be empty until a successful call to GetDASOPassTicket is executed.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DASOPassTicket">
            <summary>
            Gets the pass ticket for DASO (Digital Certificate Access Server Automated Sign On).
            This field will be empty until a successful call to GetDASOPassTicket is executed.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.DASOSessionName">
            <summary>
            Gets the session name that is used for DASO (Digital Certificate Access Server 
            Automated Sign On). The session name and DASO application ID are used by the DASO
            server when mapping the current user to RACF logon credentials for host access.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.RunMacroAtReconnect">
            <summary>
            Gets or sets a value indicating whether the ConnectAction sequence is re-run after a session is reconnected.
            </summary>
            <remarks>The default is false. This value cannot be set if no ConnectAction is currently configured.</remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
            <exception cref="T:System.InvalidOperationException">This exception is thrown when attempting to set the value with no ConnectAction configured.</exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.BeforeConnectStartupAction">
            <summary>
            Gets or sets a sequence of action(s), such as running a macro, to run automatically before a
            connection is established. 
            </summary>
            <remarks>
            Before Connect Startup action sequences run before the terminal attempts to connect to the host.
            They should not include any actions that require a live host screen, such as sending keystrokes.       
            </remarks>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectAction">
            <summary>
            Gets or sets a sequence of action(s), such as running a macro, to run automatically after a
            connection is established. 
            </summary>
            <remarks>
            Connect action sequences run after the terminal has successfully made a connection to the host.
            They should not include session setup information.       
            </remarks>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.TitleBarCaption">
            <summary>Gets or sets the string that appears in the title bar. This string is only relevant when the workspace user interface mode is set to Classic SDI. The caption
            length maximum value is 260 characters. The default is &amp;f - &amp;n</summary>
            <remarks>This property does not apply to the InfoConnect product.</remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ShowMenuBar">
            <summary>
            Gets or sets the visibility of the menu and toolbar. This setting is 
            only relevant when the workspace user interface mode is set to Classic. (This setting does not apply to Classic MDI mode.)
            The default is true.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ShowClassicStatusBar">
            <summary>
            Gets or sets the visibility of the status bar. This setting is 
            only relevant when the workspace user interface mode is set to Classic. (This setting does not apply to Classic MDI mode.)
            The default is true.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StatusBarText">
            <summary>Gets or sets the text displayed on the status bar.</summary>
            <value>
            	<para>The default is "&amp;s - &amp;c". The maximum string length is 260 characters. Various special characters can be included in this string:</para>
            	<para></para>
            	<list type="table">
            		<item>
            			<term width="84">
            				<strong>Character</strong>
            			</term>
            			<description>
            				<strong>Displays</strong>
            				<br/>
            			</description>
            		</item>
            		<item>
            			<term width="84">&amp;w</term>
            			<description>"Micro Focus"</description>
            		</item>
            		<item>
            			<term width="84">&amp;r</term>
            			<description>Product Name</description>
            		</item>
            		<item>
            			<term width="84">&amp;f</term>
            			<description>Settings File Name (or 'Untitled' if a settings file is not open)</description>
            		</item>
            		<item>
            			<term width="84">&amp;s</term>
            			<description>Session Type</description>
            		</item>
            		<item>
            			<term width="84">&amp;t</term>
            			<description>Transport</description>
            		</item>
            		<item>
            			<term width="84">&amp;h</term>
            			<description>Host Name</description>
            		</item>
            		<item>
            			<term width="84">&amp;d</term>
            			<description>Date</description>
            		</item>
            		<item>
            			<term width="84">&amp;c</term>
            			<description>Connection Status (whether you are connected and over what transport)</description>
            		</item>
            		<item>
            			<term width="84">&amp;p</term>
            			<description>Printer Status (relevant only in if the Session Type is IBM 5250 Printer or IBM 3270 Printer)</description>
            		</item>
            		<item>
            			<term width="84">&amp;x</term>
            			<description>Transfer Status (the percentage complete of file and data transfers)</description>
            		</item>
            		<item>
            			<term width="84">&amp;v</term>
            			<description>Assigned Device Name (relevant only for 5250 sessions that use an assigned Device Name)</description>
            		</item>
            		<item>
            			<term width="84">&amp;l</term>
            			<description>Assigned LU Name (relevant only for 3270 sessions that use an assigned LU Name)</description>
            		</item>
            		<item>
            			<term width="84">&amp;o</term>
            			<description>Profile Name</description>
            		</item>
            		<item>
            			<term width="84">&amp;&amp;</term>
            			<description>A Single Ampersand</description>
            		</item>
            	</list>
            	<para></para>
            </value>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Execute(Attachmate.Reflection.Emulation.OpenSystems.InputMapAction)">
            <summary>
            Execute a given action. Actions possible is defined in InputMapActionID.
            </summary>
            <seealso cref="T:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID"/>
            <param name="action">The action to be executed.</param>
            <returns>ReturnCode value indicates the success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CloseAllConnections">
            <summary>Closes all connections established by the current instance of the emulator.</summary>
            <remarks>This method disconnects the current connection (if any) and any suspended connections previously established. This method does not affect connections opened by
            other instances of the emulator.</remarks>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Connect">
            <summary>
            Connects to the host. It is ignored if a connection already exists. 
            </summary>
            <remarks>
            Use the IsConnected property to determine if a connection already exists. 
            Use HostCommTimeout to specify how many seconds Reflection waits for a host response. 
            </remarks>
            <returns>Connection Status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Dial(System.String)">
            <summary>
            Dials a modem. This method is only valid if Reflection is set to use the old modem dialer (UseModemDialerV5 = true).
            </summary>
            <remarks>
            Dials a modem with default initialization string one time. 
            </remarks>
            <param name="phoneNumber">The phone number to dial. The string can contain any valid modem dialing characters, 
            such as commas (to allow dialing to pause for two seconds per comma) and hyphens and parentheses 
            (used as separators for better readability). The string should not include any AT commands or dialing prefix commands.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Dial(System.String,System.String,System.String,System.String,System.Int32,System.String,Attachmate.Reflection.Emulation.OpenSystems.SpeakerOption,Attachmate.Reflection.Emulation.OpenSystems.SpeakerVolumeOption,System.Boolean,System.Boolean)">
            <summary>
            Dials a modem. This method is only valid if Reflection is set to use the old modem dialer (UseModemDialerV5 = true).
            </summary>
            <param name="phoneNumber">The phone number to dial. The string can contain any valid modem dialing characters, 
            such as commas (to allow dialing to pause for two seconds per comma) and hyphens and parentheses (used as separators
            for better readability). The string should not include any AT commands or dialing prefix commands.</param>
            <param name="description">Description to be displayed in the Dialing In Progress dialog box. If this option is omitted, 
            only the phone number appears in the dialog box.</param>
            <param name="initString">String to be sent to the modem before dialing. 
            If omitted, Reflection uses the default initialization string.</param>
            <param name="answerTimeout">Specifies the amount of time to wait for the host to confirm the connection. 
            The string is specified in HH:MM:SS.hh format. A time string of "0" causes Reflection to wait indefinitely. 
            If this is empty (""), the default timeout (60 seconds) is used.</param>
            <param name="retryTimes">Specifies the number of times to redial if the number is busy or does not answer. 
            Default value should be one retry.</param>
            <param name="retryInterval">Specifies the amount of time to wait before redialing.
            The string is specified in HH:MM:SS.hh format. If this argument is empty (""), the default timeout is used (120 seconds).</param>
            <param name="speakerOption">Specifies the speaker mode. The default is Dialing.</param>
            <param name="speakerVolume">Specifies the speaker volume. The default is Medium.</param>
            <param name="speakerOffAfterRedial">If true, the modem speaker is turned off after the first dialing attempt. 
            If false (the default) or omitted, the modem speaker remains set to the SpeakerMode for each dialing attempt.</param>
            <param name="ignoreModemErrors">If true, Reflection ignores modem initialization string errors. 
            If false, these errors are displayed in a message box.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Disconnect">
            <summary>
            Disconnects from the host. If no connection currently exists, this method is ignored. 
            </summary>
            <remarks>
            Use the IsConnected property to determine if a connection already exists.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Close(Attachmate.Reflection.CloseOption)">
            <summary>Closes the terminal session with the close option.</summary>
            <param name="option">
            	<span style="FONT-FAMILY: 'Verdana','sans-serif'; COLOR: black; FONT-SIZE: 8pt; mso-fareast-font-family: 'Times New Roman'; mso-bidi-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
            Specifies how to handle the Save action when closing the control.</span>
            </param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StopTerminalInstance">
            <summary>
            For internal use.  Used when a Terminal User Control is being shut down.
            </summary>
            <returns>ReturnCode indicating success or failure.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GetSerialConnectionStatistics(Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption)">
            <summary>
            Returns a statistic for a serial connection. 
            </summary>
            <remarks>
            If the connection is not a serial connection, or if there is not connection, GetSerialStatistics
            returns -1. 
            Statistics are maintained from the time a connection is established or from when the 
            terminal session is reset (for example, with the ResetTerminal method).
            </remarks>
            <param name="option">Specifies which statistics to return.</param>
            <returns>The requested statistic if the ConnectionType is a serial connection, or -1 if it is not.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.HangUp">
            <summary>
            Hangs up the modem by sending the Hayes "+++" command to get the modem's attention, followed by the "ATH" hangup command. 
            </summary>
            <remarks>
            This method does not guarantee that the modem has actually hung up. No error is returned if the method fails for any reason. 
            After the modem is hung up, the port remains open; use the Disconnect method to close the port.
            <para>Valid only if Reflection is set to use the old modem dialer (UseModemDialerV5 = true).</para>
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.OpenSettings(System.String)">
            <summary>
            Opens a setting file.
            </summary>
            <param name="fileName">Specifies the path and filename for the settings file.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ResetTerminal(Attachmate.Reflection.Emulation.OpenSystems.ResetOptions)">
            <summary>
            Executes a terminal reset.
            </summary>
            <param name="option">Terminal reset option.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.RestoreDefault(Attachmate.Reflection.Emulation.OpenSystems.RestoreOptions)">
            <summary>
            Restores the session settings to the default settings as specified by the restore option value.
            </summary>
            <param name="option">Restore setting options.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ResumeConnection(System.Int32)">
            <summary>
            Resumes a previously suspended connection (suspend connections with the SuspendConnection method). 
            </summary>
            <remarks> 
            Only sessions that were established and suspended in the same copy of Reflection can be resumed. 
            Resuming a connection updates the value of the ConnectionType and ConnectionSettings properties in 
            accordance with the newly resumed connection.
            </remarks>
            <param name="connectionId">Identifies the connection to resume. Obtain this from the SuspendCurrentConnection method.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Save">
            <summary>
            Saves all settings.
            </summary>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SaveAs(System.String)">
            <summary>
            Saves all settings to the specified file.
            </summary>
            <param name="filePath">The fully qualified file path of the file you want to save. The file must be saved in a trusted location.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StartTrace(System.String,Attachmate.Reflection.Emulation.OpenSystems.TraceFileExistsOption,Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption)">
            <summary>Starts capturing data coming from the host to a disk file.</summary>
            <param name="fileName">Specifies the file to which data is written.</param>
            <param name="fileExistsOption">Specifies what to do if the file already exists. The default is OpenError.</param>
            <param name="formatOption">Specifies what kind of trace to perform. The default is TraceDefault.</param>
            <remarks>Data being transmitted to the host can also be captured. The captured data includes all
            escape sequences and control codes, but does not include flow control, such as Xon/Xoff characters. 
            The data is captured in binary format and is not translated in any way.</remarks>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StopTrace">
            <summary>
            Stops capturing incoming host data to a file and closes the trace file.
            </summary>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ProcessTrace(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions,Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceSyntax)">
            <summary>
            Process a tracefile created by StartTrace()/StopTrace().
            </summary>
            <param name="inputFileName">Fully qualified input trace file name (i.e. drive:\path\filename</param>
            <param name="outputFileName">Fully qualified output file name (i.e. drive:\path\filename</param>
            <param name="options">Trace file processing options.</param>
            <param name="syntax">Trace file output syntax options.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SuspendCurrentConnection">
            <summary>
            Suspends the current host connection (so that it can be resumed later with ResumeConnection).
            </summary>
            <returns>A numeric identifier for the suspended connection that can be used to later resume the connection.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WaitForCall">
            <summary>
            Initializes the modem to automatically answer an incoming call and opens a status dialog box until a connection is established. 
            </summary>
            <remarks>
            This method does not check to see whether a modem is actually connected to the serial port. 
            It simply transmits the Hayes "AT" command to get the modem's 
            attention, and then transmits the "ATS0=1" command to place the modem in answer mode. 
            If the command fails for any reason, no error is returned. The procedure continues to 
            the next statement only after the status box is dismissed (either because the modem established 
            a connection, the user canceled, or the dialog box timed out).
            </remarks>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WaitForCall(System.String)">
            <summary>
            Initializes the modem to automatically answer an incoming call and opens a status dialog box
            until a connection has been established. 
            </summary>
            <remarks>
            This method does not check to see whether a modem is actually connected to the serial port. 
            It simply transmits the Hayes "AT" command to get the modem's attention, and then transmits the
            "ATS0=1" command to place the modem in answer mode. If the command fails for any reason, 
            no error is returned. The procedure continues to the next statement only after the status box 
            is dismissed (either because the modem established a connection, the user canceled, or the dialog 
            box timed out).
            </remarks>
            <param name="description">Specifies a message to be displayed in the Waiting for Call dialog box.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.WaitForCall(System.String,System.String)">
            <summary>
            Initializes the modem to automatically answer an incoming call and opens a status dialog box until a connection has been established. 
            </summary>
            <remarks>
            This method does not check to see whether a modem is actually connected to the serial port. 
            It simply transmits the Hayes "AT" command to get the modem's attention, and then transmits 
            the "ATS0=1" command to place the modem in answer mode. If the command fails for any reason, 
            no error is returned. The procedure continues to the next statement only after the status box 
            is dismissed (either because the modem established a connection, the user canceled, or the dialog 
            box timed out).
            </remarks>
            <param name="description">Specifies a message to be displayed in the Waiting for Call dialog box.</param>
            <param name="initString">Specifies an initialization string to be sent to the modem before waiting.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StartLogging">
            <summary>
            Start logging terminal activity.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.StopLogging">
            <summary>
            Stop logging terminal activity.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GetDASOPassTicket(System.String)">
            <summary>
            Issues a request to the Management and Security Server for a DASO pass ticket.
            On success, the DASOUserID and DASOPassTicket properties will be valid and can
            be used for automated sign on to the host.  The application ID can be preset
            using the DASOApplicationID property in which case the ApplicationID parameter
            on this call may be empty.
            </summary>
            <param name="applicationId">The host application ID.</param>
            <returns>ReturnCode value indicate success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SaveAsCompound(System.String)">
            <summary>
            Saves a session as a compound session document.
            </summary>
            <param name="filePath">The fully qualified file path of the file you want to save. The file must be saved in a trusted location.</param>
            <returns>ReturnCode value indicate success or error conditions.</returns>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.QuickPadsShowToolTips">
            <summary>Gets or sets a value indicating whether QuickPad controls display tooltips.</summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.AddVBAReference(System.String)">
            <summary>Adds a reference to a session file that contains macros you want to share with the current session to the VBA References settings. After you add the reference,
            the macros in that file are available to the current session. When you save your session, the macros are saved in your current session document file and
            updated each time you reopen your session.</summary>
            <param name="sessionPath">The fully qualified file name of the session document file that contains the macros you want to share.</param>
            <remarks>
              <para>Before you add a reference to a session document file, make sure that the file is in a trusted location. Session files cannot be accessed unless they are in
            trusted locations.</para>
              <para>Make sure the projects in the files you reference have unique project names. Each project name in the VBA editor must be unique to avoid errors caused by
            naming conflicts.</para>
              <para></para>
            </remarks>
            <exception caption="" cref="T:Attachmate.Reflection.Framework.VBAReferenceNotInTrustedLocationException">
            This exception is thrown when you add a reference to a session file that is not in a trusted location.
            </exception>
            <exception caption="" cref="T:Attachmate.Reflection.Framework.VBAReferenceIncorrectSessionTypeException">
            This exception is thrown when you add a reference to a session file that is not the same session type as the current session.
            </exception>
            <exception caption="" cref="T:Attachmate.Reflection.Framework.VBAReferenceException">
            This exception is thrown if a sesson file does not exist, is not a valid file, or has an invalid file name. It is also thrown if a sesson file contains VBA projects that conflict with existing VBA projects or if security settings prevent adding VBA references.</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.RemoveVBAReference(System.String)">
            <summary>
              <para>Removes a reference to a session document file from the VBA References settings. After you remove this file name, the macros in that file are no longer
            available in the current session. To make this change permanent, you'll need to save your session document file.</para>
            </summary>
            <param name="sessionPath">The fully qualified file name of the session document file to remove.</param>
            <exception caption="" cref="T:Attachmate.Reflection.Framework.VBAReferenceException">
            This exception is thrown when security settings prevent removing VBA references.</exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.GetVBAReferences">
            <summary>Retrieves a list of the session documents referenced by the current session from the VBA References settings. The macros in these session documents are
            available to the current session.</summary>
            <returns>A string array that contains the referenced session file names.</returns>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SettingsLoading">
            <summary>
            This event is triggered immediately before a settings file is opened.
            </summary>
            <remarks>This event is fired only when the ITerminal.OpenSettings method is used. For code that should run before any connection occurs, use the ITerminal.Connecting
            event.</remarks>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.SettingsLoaded">
            <summary>
            This event is triggered immediately after a settings file is opened.
            </summary>
            <remarks>This event is fired only when the ITerminal.OpenSettings method is used. For code that should run before any connection occurs, use the ITerminal.Connecting
            event.</remarks>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Connecting">
            <summary>
            This event is triggered immediately before a connection is made.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionSuspended">
            <summary>
            This event is triggered when the connection to the host has been suspended.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.ConnectionResumed">
            <summary>
            This event is triggered when the suspended connection to the host has been resumed.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Connected">
            <summary>
            The event occurs after the connection to the host has been made.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.UserDisconnecting">
            <summary>
            This event is triggered before Reflection disconnects from the host. 
            </summary>
            <remarks>  
            For this event to occur, the user must terminate a connection using Reflection 
            (for example, using the Disconnect button on the Session tab). It will 
            not occur when the user ends a session by using a host log out command.
            <para>When a VT/Regis document is closed either programatically or manually, the
            event is not cancellable. (If the Cancel flag is set in the event arguments, it 
            is ignored.)
            </para>
            </remarks>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Disconnected">
            <summary>
            The event occurs after the connection to the host has been disconnected.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Closing">
            <summary>
            This event occurs when the request to close the session has been made.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.Closed">
            <summary>
            This event occurs before the session closes.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.CreditCardRecognized">
            <summary>
            	<para>This event occurs when an unredacted Primary Account Number (PAN) is copied from the terminal (for example, when the PAN is copied to the clipboard).</para>
            	<para>This event is enabled by configuring settings on the Setup Information Privacy dialog box. For more information, see "Monitor Credit Card Access" in the
            Reflection .NET API Guide.</para>
            	<para></para>
            </summary>
            <remarks>
            	<para></para>
            	<para>This event occurs only when a PAN is copied in its entirety ("in the clear"). It is not fired when only redacted PANs are copied.</para>
            </remarks>
            <example>
            	<code title="Example" description="This sample writes information on the console when unredacted PAN data is copied from the terminal." lang="CS">
            //Set up the event handler to get the data you want to collect.
            void terminalVT_CreditCardRecognized(object sender, CreditCardRecognizedEventArgs e)
            {
                Console.Write(("\n" + "Credit Card Number Viewed on Screen \n"
                + "Date and Time: " + e.DateTime.ToString() + " \n"
                + "Machine name: " + e.MachineName.ToString() + " \n"
                + "User ID: " + e.UserId.ToString() + " \n"
                + "Card number: " + e.RedactedAccountNumber + "\n"));
            }
            //Attach the event handler to the Terminal object's CreditCardRecognized event,
            //where terminalVT is an instance of Terminal.
            terminalVT.CreditCardRecognized += new CreditCardRecognizedEventHandler(terminalVT_CreditCardRecognized);</code>
            </example>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ITheme">
            <summary>Defines properties and methods to load, modify, or save a Reflection theme.</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Parent">
            <summary>
            Gets the parent object. The parent is the ITerminal object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.FileName">
            <summary>
            Gets or sets the theme template to use. Setting this loads a new theme
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Color">
            <summary>
            Gets the color map object associated with the theme.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Font">
            <summary>
            Gets the font object associated with the theme.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Cursor">
            <summary>
            Gets the cursor object associated with the theme.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Sounds">
            <summary>
            Gets the sounds object associated with the theme.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.DisplayEnhancements">
            <summary>
            Gets the settings display enhancements object associated with the theme.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Modified">
            <summary>
            Returns the modified state of the theme.
            True = theme has been modified since last save, false if not.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Save">
            <summary>
            Saves changes to current theme
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the theme.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the theme.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITheme.SaveAs(System.String)">
            <summary>
            Saves current theme contents to a file
            </summary>
            <param name="pathName">The path to the new theme</param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while trying to save the theme.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the theme.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ITheme.Load(System.String)">
            <summary>
            Loads a new theme into the current session document       
            </summary>
            <param name="pathName">The path to the new theme</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor">
            <summary>
            Defines properties and methods to get and set terminal colors within a Reflection theme.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor.Parent">
            <summary>
            Gets the parent object. The parent is the ITheme object.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor.GetForegroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute)">
            <summary>
            Returns the current mapped foreground color for a given terminal attribute
            </summary>
            <param name="attr">The host text attribute whose mapped color should be returned</param>
            <returns>The current foreground color mapping for the specified attribute</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor.GetBackgroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute)">
            <summary>
            Returns the current mapped background color for a given terminal attribute
            </summary>
            <param name="attr">The host text attribute whose mapped color should be returned</param>
            <returns>The current background color mapping for the specified attribute</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor.SetForegroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute,System.Drawing.Color)">
            <summary>
            Sets the current mapped foreground color for a given terminal attribute
            </summary>
            <param name="attr">The host text attribute whose mapped color should be set</param>
            <param name="newColor">The new foreground color mapping for the specified attribute</param>        
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor.SetBackgroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute,System.Drawing.Color)">
            <summary>
            Sets the current mapped background color for a given terminal attribute
            </summary>
            <param name="attr">The host text attribute whose mapped color should be set</param>
            <param name="newColor">The new background color mapping for the specified attribute</param>        
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor.GetAnsiColor(Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor)">
            <summary>
            Returns the current mapped color for a given ANSI terminal color
            </summary>
            <param name="color">The ANSI color whose mapped color should be returned</param>
            <returns>The current color mapping for the specified attribute</returns>
            <remarks>Mapping ANSI colors is only applicable for SCO ANSI, BBS ANSI, AT386, or Linux Console terminal types.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor.SetAnsiColor(Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor,System.Drawing.Color)">
            <summary>
            Sets the current mapped color for a given ANSI terminal color
            </summary>
            <param name="color">The ANSI color whose mapped color should be set</param>
            <param name="newColor">The new color mapping for the specified attribute</param>        
            <remarks>Mapping ANSI colors is only applicable for SCO ANSI, BBS ANSI, AT386, or Linux Console terminal types.</remarks>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.IPrinting">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.AutoFormFeed">
            <summary>Gets or sets whether an automatic formfeed is performed when any portion of display memory is printed.</summary>
            <remarks>
            	<para>Display memory is a log of what has recently been sent from the host to the PC. It contains both what is visible on the display and what has scrolled off of
            the display.</para>
            	<para>VT terminals have no display memory. Because display memory is unique to Reflection, VMS hosts do not have access to it; the host cannot position the
            cursor, write to, or otherwise change the display memory contents.</para>
            	<para>When you first start Reflection, both the display and display memory are empty. Once you start working, data starts accumulating on the display. When the
            display is full and lines begin to scroll off the top, display memory starts to fill up.</para>
            	<para>Display memory is the same width as the display; its length depends on the amount of memory available to Reflection. Reflection's default display memory
            allotment is 64K, or approximately 22 screens. You can configure the size of display memory with the DisplayMemoryBlocks property. For VT emulation, you can
            disable display memory by setting the MultiplePageTerminal property to False.</para>
            </remarks>
            <value>The default value is <em>True</em>.</value>
            <requirements>
            	<para></para>
            </requirements>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.BypassPrinterDriver">
            <summary>Gets or sets whether raw data is sent directly to your printer, bypassing the Windows printing interface.</summary>
            <remarks>
            	<para>If you're bypassing Windows printing to a PostScript printer, the results may not be as you expect. PostScript printers are controlled by PostScript
            commands, which are typically sent to the printer from a PostScript printer driver. When you bypass this driver, one of two things will happen:</para>
            	<list type="bullet">
            		<item>If the printer has built-in PostScript codes that are used when no driver can be found, your output may print in the font determined by the printer's
                defaults.</item>
            		<item>If your printer depends on the driver for PostScript codes, then nothing (not even a blank page) will be printed when you click this check box.</item>
            	</list>
            </remarks>
            <value>
            	<para>When <em>True</em>, output is sent directly to your printer.</para>
            	<para>When <em>False</em> (the default value), output is sent to the currently selected printer driver.</para>
            </value>
            <requirements>
            	<para></para>
            </requirements>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.ClosePrinterManually">
            <summary>Gets or sets whether the printer is automatically flushed after printing.</summary>
            <value>When <em>False</em> (the default), the printer is automatically closed after a print operation and after a host application turns off the print
            logging mode.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.DigitalLA210PrinterEmulation">
            <summary>
            	<para>Gets or sets whether Reflection translates data to emulate a Digital LA210 printer when a passthrough method of printing, such as printer controller mode,
            is used. This property applies to VT emulation only. It is not relevant if the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.BypassPrinterDriver">BypassPrinterDriver</see> property is <em>True</em>, or if
            the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintToFile">PrintToFile</see> property has been set to something other than an empty string.</para>
            </summary>
            <value>
            	<para>When <em>True</em>, Reflection controls escape sequences for the LA210 that determine the number of columns and rows per page. Reflection intercepts the
            escape sequences and updates the number of rows and columns for the page to be printed. The font size is updated accordingly.</para>
            	<para>If your host software understands PC printers, leave this property set to <em>False</em> (the default value).</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintANSIColorBackground">
            <summary>Gets or sets whether Reflection prints the background ANSI color.</summary>
            <value>The default value is <em>False</em>.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterAutoRowSize">
            <summary>Gets or sets whether Reflection automatically sets the number of rows to be printed on each page.</summary>
            <remarks>The value of PrinterRows is automatically adjusted when any of these settings is changed, so that printed output will fill the page.</remarks>
            <value>
            	<para>When <em>True</em>, Reflection automatically calculates the number of rows to be printed based on the current settings for paper size, page orientation,
            margins, number of columns, and font.</para>
            	<para>When <em>False</em>, the current value of PrinterRows is not affected by changes to other page settings.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumns">
            <summary>
            	<para>Gets or sets the maximum width (in characters) for a printed line.</para>
            </summary>
            <remarks>
            	<para>When <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumnsTiedToDisplay">PrinterColumnsTiedToDisplay</see> is <em>True</em> (the default value), changing the value of the
            <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayColumns">DisplayColumns</see> property automatically changes the value of PrinterColumns.</para>
            	<para>When <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumnsSetOrientation">PrinterColumnsSetOrientation</see> is <em>True</em>, changing the value of PrinterColumns may change the current value of
            <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterOrientation">PrinterOrientation</see>.</para>
            </remarks>
            <value>
            	<para>The default value is 80.</para>
            	<para>For Reflection for HP, the range of values is 80-999.</para>
            	<para>For Reflection for UNIX and OpenVMS and Reflection for ReGIS Graphics, the range of values is 10-999.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumnsSetOrientation">
            <summary>
            	<para>Gets or sets whether Reflection automatically sets the current printer page orientation based on the number of columns to be printed. (The number of columns
            to be printed is determined by the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumns">PrinterColumns</see> property).<br/></para>
            </summary>
            <value>
            	<para>When <em>False</em> (the default), printer orientation is not affected by changes to the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumns">PrinterColumns</see> property.</para>
            	<para>When <em>True</em> and when PrinterColumns is less than 132, Reflection automatically selects portrait page orientation. When PrinterColumns is 132 or
            greater, Reflection automatically selects landscape orientation.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumnsTiedToDisplay">
            <summary>
            	<para>Gets or sets whether changing the number of columns in the screen display automatically changes the number of columns to be printed.<br/></para>
            </summary>
            <value>
            	<para>The default value is <em>True</em>.</para>
            	<para>When <em>True</em>, changing the value of the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IScreen.DisplayColumns">DisplayColumns</see> property automatically changes the value of the
            <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumns">PrinterColumns</see> property, so that these two values are always equal.</para>
            	<para>When <em>False</em>, changing DisplayColumns has no effect on PrinterColumns.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterFitFontToPage">
            <summary>Gets or sets whether Reflection automatically adjusts both height and width when calculating font size.</summary>
            <remarks>Height and width adjustments may give the font a distorted appearance.</remarks>
            <value>
            	<para>The default value is <em>False</em>.</para>
            	<para>When <em>False</em>, Reflection considers limiting factors of height or width when determining font size. Printed fonts are always correctly proportioned,
            but the text may not fill the printed page.</para>
            	<para>When <em>True</em>, both height and width are adjusted (based on the page size and the number of rows and columns on the page) when determining font size so
            that text always fills the printed page.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterFontName">
            <summary>
            	<para>Gets or sets the font used by Reflection when printing.<br/></para>
            </summary>
            <value>
            	<para>The default value is "".</para>
            	<para>Reflection uses the default printer font if this property is set to an empty string ("") or if the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.UseDefaultPrinterFont">UseDefaultPrinterFont</see> property is
            set to <em>True</em>.</para>
            	<para>This value is not case sensitive. The maximum length of this string is 32 characters.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterInverseFont">
            <summary>
            	<para>Gets or sets whether the inverse character attribute should be ignored for printing.</para>
            </summary>
            <value>
            	<para>The default value is <em>False</em>.</para>
            	<para>This property should be set to <em>False</em> for printers that are unable to print inverse fonts.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterLogging">
            <summary>
            	<para>Gets or sets whether data received into display memory, either from datacomm or from the keyboard, is sent to the printer (or to a file) when a linefeed is
            received.</para>
            </summary>
            <remarks>
            	<para>The value of this property is not saved to a settings file.</para>
            	<para>In Reflection for HP, turning on Record Mode automatically sets PrinterLogging to False.</para>
            	<para>To log to a file instead of the printer, do the following:</para>
            	<list type="bullet">
            		<item>Make sure PrinterLogging is set to True.</item>
            		<item>Set the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintToFile">PrintToFile</see> property to a valid file name.</item>
            	</list>
            	<para>Reflection doesn't log a line of data until it encounters a linefeed.</para>
            </remarks>
            <value>
            	<para>The default value is <em>False</em>.<br/></para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterMarginBottom">
            <summary>Gets or sets the size of the bottom margin of printed output.</summary>
            <remarks>
            	<para>Changing the margin size changes the font size of the printed output.</para>
            </remarks>
            <value>
            	<para>The value is in "twips" (a twip is one twentieth of a point). There are 1440 twips to an inch.</para>
            	<para>The default value is 1440. The range of values is 0-32767.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterMarginLeft">
            <summary>
            	<para>Gets or sets the size of the left margin of printed output.</para>
            </summary>
            <remarks>
            	<para>Changing the margin size changes the font size of the printed output.</para>
            </remarks>
            <value>
            	<para>The value is in "twips" (a twip is one twentieth of a point). There are 1440 twips to an inch.</para>
            	<para>The default is 1440. The range of values is 0-32767.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterMarginRight">
            <summary>
            	<para>Gets or sets the size of the right margin of printed output.<br/></para>
            </summary>
            <remarks>
            	<para>Changing the margin size changes the font size of the printed output.</para>
            </remarks>
            <value>
            	<para>The value is in "twips" (a twip is one twentieth of a point). There are 1440 twips to an inch.</para>
            	<para>The default value is 1440. The range of values is 0-32767.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterMarginTop">
            <summary>
            	<para>Gets or sets the size of the top margin of printed output.</para>
            </summary>
            <remarks>
            	<para>Changing the margin size changes the font size of the printed output.</para>
            </remarks>
            <value>
            	<para>The value is in "twips" (a twip is one twentieth of a point). There are 1440 twips to an inch.</para>
            	<para>The default is 1440. The range of values is 0-32767.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterPaperSize">
            <summary>
            	<para>Gets or sets the paper size you have set for your printer.</para>
            </summary>
            <remarks>The numeric value of this property corresponds to paper size settings that you can configure in the Page Setup and Print Setup (Properties)
            dialog boxes. To determine the numeric value you want for this property, use the dialog boxes to configure your paper size settings, then view the resulting
            value in Reflection's View Settings dialog box.</remarks>
            <value>
            	<para>The default value is 0.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterPaperSource">
            <summary>
            	<para>Gets or sets the paper source you have set for your printer.</para>
            </summary>
            <remarks>The numeric value of this property corresponds to paper source settings that you can configure in the Page Setup and Print Setup (Properties)
            dialog boxes. To determine the numeric value you want for this property, use the dialog boxes to configure your paper source settings, then view the resulting
            value in Reflection's View Settings dialog box.</remarks>
            <value>
            	<para>The default value is 0.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterPassEscape">
            <summary>
            	<para>Gets or sets whether escape sequences (code characters 0-31) are sent directly to the printer. (This property is valid only when a passthrough method of
            printing, such as HP Record mode or VT printer Controller mode, is used.)</para>
            </summary>
            <value>
            	<para>The default value is <em>False</em>.</para>
            	<para>When <em>False,</em> escape sequences are converted to spaces.</para>
            	<para>When <em>True,</em> Reflection passes the escape sequences directly to the printer or the printer driver. If the current value of the
            <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.BypassPrinterDriver">BypassPrinterDriver</see> property is <em>False</em>, escape sequences are sent to the currently selected printer driver. If
            <em>BypassPrinterDriver</em> is <em>True</em>, escape sequences are sent directly to the printer, bypassing Reflection and the printer driver.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterPassThroughConversion">
            <summary>
            	<para>Gets or sets whether Reflection translates data when a passthrough method of printing, such as HP Record mode or VT printer Controller mode, is being
            used.<br/></para>
            </summary>
            <remarks>Reflection normally doesn't translate characters sent directly from the host to a PC printer. If your host software understands the locally
            attached printer, set <em>PrinterPassThroughConversion</em> to <em>False</em>. In VT emulations, 7-bit characters are translated when:
            <list type="bullet"><item>This property is set to <em>True</em>.</item><item>The <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.ITerminal.NRCEnabled">NRCEnabled Property</see> is set to <em>True</em>.</item><item>The host sets Printer Mode to Controller (Pass Through).</item></list></remarks>
            <value>
            	<para>The default value is <em>False</em>.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterRows">
            <summary>
            	<para>Gets or sets the maximum number of rows that can be printed on a page.</para>
            </summary>
            <remarks>
            	<para>If the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterAutoRowSize">PrinterAutoRowSize</see> property is <em>True</em>, the value of <em>PrinterRows</em> is automatically set to the maximum possible
            rows per page based on the current settings for paper size, page orientation, margins, number of columns, and font.</para>
            </remarks>
            <value>
            	<para>The default value is 60.</para>
            	<para>The range of values is 1-255.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterTimeout">
            <summary>
            	<para>Gets or sets the number of seconds that Reflection waits after a host print job is completed before closing the printer automatically. (This property is
            used in host-controlled printing situations where the host does not close the printer at the completion of a printing job.)</para>
            </summary>
            <value>
            	<para>The default value is 0.</para>
            	<para>The range of values is 0-3600.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintGraphicsBackground">
            <summary>
            	<para>Gets or sets whether or not the background is printed when you print ReGIS graphics images.</para>
            </summary>
            <value>
            	<para>The default value is <em>True</em>.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintToFile">
            <summary>
            	<para>Gets or sets whether printing is directed to the printer or a file.</para>
            </summary>
            <value>
            	<para>The default is "".</para>
            	<para>If this property is set to an empty string (""), printer output is directed to the printer.</para>
            	<para>If this property is set to anything other than an empty string, its value determines the name of the disk file to which Reflection printer output is sent.
            This string can contain drive and path information. If the specified file already exists, Reflection appends printed data to the end of the
            file.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintedCharactersTranslationEnabled">
            <summary>PrintedCharactersTranslationEnabled</summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.UseDefaultPrinterFont">
            <summary>
            	<para>Gets or sets whether Reflection uses the default printer font when printing.</para>
            </summary>
            <value>
            	<para>The default value is <em>False</em>.</para>
            	<para>If Reflection doesn't use the default printer font, the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterFontName">PrinterFontName</see> property determines which font is used.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.IbmPrintCharactersOption">
            <summary>Gets or sets how characters are printed under IBM 3151 emulation (TerminalType = rcIBM3151).</summary>
            <value>The default value is <em>IbmPrintCharactersOption.National</em></value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.IbmPrintLineTerminator">
            <summary>Gets or sets which end line characters are used when printing under IBM 3151 emulation (TerminalType = rcIBM3151).</summary>
            <value>The default value is <em>IbmprintLineTerminatorOption.CRLF</em></value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.IbmPrintPageTerminator">
            <summary>Gets or sets which page end character is used when printing under IBM 3151 emulation (TerminalType = rcIBM3151).</summary>
            <value>The default value is <em>IbmprintPageTerminatorOption.NONE</em></value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintDuplex">
            <summary>Gets or sets how Reflection handles printing to single- and double-sided pages.</summary>
            <value>
            	<para>The default value is <em>PrintDuplexOption.Default</em>.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterOrientation">
            <summary>
            	<para>Gets or sets the printer page orientation used by Reflection. Changing the value of this property affects printing done by Reflection, but does not change
            your operating system's printer settings.</para>
            </summary>
            <remarks>
            	<para>When the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumnsSetOrientation">PrinterColumnsSetOrientation</see> property is <em>True</em>, Reflection automatically sets printer page orientation based
            on the current value of the <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrinterColumns">PrinterColumns</see> property.</para>
            </remarks>
            <value>The default value is <em>PrinterOrientationOption.Default</em>.</value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintGraphicsColor">
            <summary>
            	<para>Gets or sets whether graphics images are printed using color or black and white. This property applies only when sending sixel data to the host or a Digital
            printer when <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.BypassPrinterDriver">BypassPrinterDriver</see> is <em>True</em>.</para>
            </summary>
            <value>The default value is <em>PrintGraphicsColorOption.Color</em></value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintGraphicsColorSpecification">
            <summary>
            	<para>Gets or sets the color coordinate system used for color sixel printing. This property is relevant only when <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintGraphicsColor">PrintGraphicsColor</see> is set
            to <em>PrintGraphicsColorOption.Color</em> and <see cref="P:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.BypassPrinterDriver">BypassPrinterDriver</see> is <em>True</em>.</para>
            </summary>
            <value>The default value is <em>PrintGraphicsColorSpecificationOption.HLS</em></value>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.FlushPrinter">
            <summary>
            Flushes Reflection's printer output buffers, sending any 
            pending data to the printer and issuing a page eject command. 
            This method only affects data sent to the printer when 
            ClosePrinterManually is True. Only data from Reflection
            "print events" (such as logging or printing a copy of display memory)
            is affected.  Data sent to the printer programmatically 
            (for example, using the PrintScreen method) is not affected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.Print(Attachmate.Reflection.Emulation.OpenSystems.PrintSourceOption)">
            <summary>
            Print all or part of the screen.
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintString(System.String)">
            <summary>
            Print a string.
            </summary>
            <param name="dataString"></param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.IPrinting.PrintFile(System.String)">
            <summary>
            Print a file.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IMacro,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            the constructor, for internal use
            </summary>
            <param name="macro"></param>
            <param name="terminal"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Macro.Parent">
            <summary>
            Returns the parent object (ITerminal).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Macro.Recording">
            <summary>
            Returns whether the macro recorder is currently recording.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Macro.RecordingPaused">
            <summary>
            Returns whether the macro recorder is currently paused.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Macro.Script">
            <summary>
            Gets the current macro recording script, if any. Returns String.Empty if no script is
            currently recording.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Macro.Data">
            <summary>Gets or specifies a string to a variable that could be used during macro execution.</summary>
            <value>
            	<para>The default value is "". This string can be up to 260 characters long.</para>
            	<para></para>
            </value>
            <exception caption="" cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.ShowMacroDialog">
            <summary>
            Displays the Run Macro dialog box.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.StartMacroRecording">
            <summary>
            Starts recording a macro in the current terminal session.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.PasswordBox(System.String,System.String)">
            <summary>
            Displays a prompt for the Password dialog box.
            </summary>
            <param name="prompt">The prompt string for the dialog box.</param>
            <param name="title">The dialog box caption.</param>
            <returns>The string entered in the dialog's text box.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.StopMacroRecording(Attachmate.Reflection.Emulation.OpenSystems.MacroDestinationOption,System.String)">
            <summary>
            Stops the macro recorder in the current terminal session, and saves the macro.
            </summary>
            <param name="saveLocation">
            The location to which the macro is saved.  
            MacroDestinationOption.Document saves the macro to the session document's VBA project.
            MacroDestinationOption.CommonProject saves the macro to the Common VBA project.
            MacroDestinationOption.Clipboard copies the macro script to the Windows Clipboard.
            </param>
            <param name="macroName">
            The name of the saved macro. This parameter is ignored if saveLocation is Clipboard.
            </param>
            <exception cref="T:System.ArgumentException">
            Thrown if the macro name is null, empty, or contains invalid characters.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.PauseRecording">
            <summary>
            Stops recording a macro in the current terminal session. 
            </summary>
            <remarks>
            This method is only valid
            when the macro recorder is running. The method does nothing if the recorder is already
            paused.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the macro recorder is not currently recording.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.ResumeRecording">
            <summary>
            Resumes recording a macro in the current terminal session. 
            </summary>
            <remarks>
            This method is only valid
            when the macro recorder is running. The method does nothing if the recorder is already
            paused.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the macro recorder is not currently recording.
            </exception>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.GetMacroNames(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption)">
            <summary>
            Gets a list of existing macro names.
            </summary>
            <param name="macroSource">
            The location of the macros.
            ProjectOptions.Document gets macros from this session document's VBA project.
            ProjectOptions.CommonProject gets macros from the common VBA project.
            ProjectOptions.CurrentLegacyProject gets macros from the session document's legacy VBA project.
            </param>
            <returns>
            A set of macro names. The set may be empty if there are no existing macros.
            </returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunMacro(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption,System.String)">
            <summary>
            Runs a macro.
            </summary>
            <param name="macroSource">
            The location of the macro.  
            ProjectOptions.Document gets the macro from this session document's VBA project.
            ProjectOptions.CommonProject gets the macro from the common VBA project.
            ProjectOptions.CurrentLegacyProject gets the macro from the session document's legacy VBA project.
            </param>
            <param name="macroName">The name of the macro to run.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunMacro(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption,System.String,System.String)">
            <summary>
            Runs a macro.
            </summary>
            <param name="macroSource">
            The location of the macro.  
            ProjectOptions.Document gets the macro from this session document's VBA project.
            ProjectOptions.CommonProject gets the macro from the common VBA project.
            ProjectOptions.CurrentLegacyProject gets the macro from the session document's legacy VBA project.
            </param>
            <param name="macroName">The name of the macro to run.</param>
            <param name="macroParameter">Parameter to pass to the macro.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunMacro(Attachmate.Reflection.Emulation.OpenSystems.ProjectOption,System.String,System.Object[])">
            <summary>
            Runs a macro.
            </summary>
            <param name="macroSource">
            The location of the macro.  
            ProjectOptions.Document gets the macro from this session document's VBA project.
            ProjectOptions.CommonProject gets the macro from the common VBA project.
            ProjectOptions.CurrentLegacyProject gets the macro from the session document's legacy VBA project.
            </param>
            <param name="macroName">The name of the macro to run.</param>
            <param name="macroParameters">Parameters to pass to the macro.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.StopMacro">
            <summary>
            Stops a currently running macro. Does nothing unless a macro is running in the
            current terminal session.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunExternalLegacyReflectionMacro(System.String,System.String,System.String)">
            <summary>
            Runs a legacy Reflection macro from an external file (that is, a file that is not currently in use).
            </summary>
            <param name="macroFileName">
            The path and name of the file that contains the macro you want to run. An error is returned if you specify 
            an invalid or nonexistent file.
            </param>
            <param name="macroName">
            The macro you want to run. An error is returned if the macro does not exist.
            </param>
            <param name="macroData">
             An optional string to pass information to the macro.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunLegacyReflectionMacro(System.String,System.String)">
            <summary>
            Runs a legacy Reflection macro.
            </summary>
            <param name="macroName">
            Specifies the name of the macro to run. 
            An error occurs if there is no macro of this name in the current settings file 
            or in any referenced files. This value can be up to 255 characters long.
            If you have more than one macro with the same name in different files, precede 
            the macro name with the project name and a period to correctly  
            identify the macro. For example, "SharedMacros.Login" identifies 
            the "Login" macro in the "SharedMacros" settings file.
            </param>
            <param name="macroData">
            An optional string to pass information to the macro.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunLegacyReflectionMacroFile(System.String,System.String)">
            <summary>
            Runs the legacy Reflection macro that in the specified macro file.
            </summary>
            <param name="fileName">
            The name of a macro file. Include full path information if the macro file is not 
            in the current folder.
            </param>
            <param name="macroData">
            An optional string to pass information to the macro.
            </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunLegacyExtraMacro(System.String)">
            <summary>
            Runs a legacy EXTRA! macro.
            </summary>
            <param name="macroName">
            Specifies the full path of the macro to run. 
            </param>        
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown if the macro file does not exist.
            </exception>
            <remarks>
            Assumes that the EXTRA! Basic runtime is installed.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.RunHostExplorerMacro(System.String)">
            <summary>
            Runs a HostExplorer macro.
            </summary>
            <param name="macroName">
            Specifies the full path of the macro to run. 
            </param>        
            <exception cref="T:System.IO.FileNotFoundException">
            Thrown if the macro file does not exist.
            </exception>
            <remarks>
            Assumes that the EXTRA! Basic runtime is installed.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.Dispose(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Macro.MacroStarted">
            <summary>
            Raised when a Reflection macro has started. This does not apply to legacy
            Reflection macros or legacy EXTRA! macros.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.OnMacroStarted(System.EventArgs)">
            <summary>
            Fires MacroStarted event.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.MacroStartedEventSink(System.Object,System.EventArgs)">
            <summary>
            For internal use.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Macro.MacroCompleted">
            <summary>
            Raised when a Reflection macro has completed. This does not apply to legacy
            Reflection macros or legacy EXTRA! macros.
            </summary>        
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.OnMacroCompleted(System.EventArgs)">
            <summary>
            Fires MacroCompleted event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Macro.MacroCompletedEventSink(System.Object,System.EventArgs)">
            <summary>
            For internal use.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.MacroDestinationOption">
            <summary>
            Indicates the location where macros are saved.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MacroDestinationOption.Document">
            <summary>
            Saves macros to the current session document's VBA project.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MacroDestinationOption.CommonProject">
            <summary>
            Saves macros to the Common VBA project.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MacroDestinationOption.Clipboard">
            <summary>
            Saves macro script text to the Windows Clipboard.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.MacroEnumerationOption">
            <summary>
            Indicates where the macro source is located.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MacroEnumerationOption.Document">
            <summary>
            Macros are located in the current session document's VBA project.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MacroEnumerationOption.CommonProject">
            <summary>
            Macros are located in the Common VBA project.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption.Call">
            <summary>
            Call.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption.AutoAnswer">
            <summary>
            AutoAnswer.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption.Answer">
            <summary>
            Answer.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption.Direct">
            <summary>
            Direct.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ModemModeOption.DialBack">
            <summary>
            DialBack.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.MouseClickCount">
            <summary>
            The number of clicks for a mouse mapping.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MouseClickCount.SingleClick">
            <summary>
            Single-button click.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MouseClickCount.DoubleClick">
            <summary>
            Double-button click. This is a placeholder value for future use. This value
            is not currently supported and should not be used.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination">
            <summary>
            Represents the state of a particular mouse mapping. 
            </summary>
            <remarks>
            A mouse mapping includes the mouse button; the number of mouse clicks (single or double); 
            and one or more modifier keys (such as SHIFT, CTRL, or ALT).
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.#ctor">
            <summary>
            Initializes a new instance of the MouseButtonCombination class
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.#ctor(System.Windows.Forms.MouseButtons,System.Windows.Forms.Keys,Attachmate.Reflection.Emulation.OpenSystems.MouseClickCount)">
            <summary>
            Initializes a new instance of the MouseButtonCombination class.
            </summary>
            <param name="button">The mouse button associated with the combination.</param>
            <param name="modifierKeys">The modifier keys associated with the combination.</param>
            <param name="clickCount">The number of mouse clicks associated with the combination.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.Button">
            <summary>
            Gets the mouse button associated with the combination.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.ModifierKeys">
            <summary>
            Gets the modifier keys associated with the combination.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.ClickCount">
            <summary>
            Gets the number of mouse clicks in the combination.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.ToString">
            <summary>
            Returns a string that represents the current MouseButtonCombination object.
            </summary>
            <returns>A string that represents the current MouseButtonCombination object.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object. </param>
            <returns>True if the specified object is equal to the current object; otherwise, false. </returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.op_Equality(Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination,Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination)">
            <summary>
            Determines whether two MouseButtonCombination instances are equal.
            </summary>
            <param name="mbc1">The first MouseButtonCombination instance.</param>
            <param name="mbc2">The second MouseButtonCombination instance.</param>
            <returns>True if the two instances are equal, false otherwise.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.op_Inequality(Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination,Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination)">
            <summary>
            Determines whether two MouseButtonCombination instances are not equal.
            </summary>
            <param name="mbc1">The first MouseButtonCombination instance.</param>
            <param name="mbc2">The second MouseButtonCombination instance.</param>
            <returns>True if the two instances are not equal; otherwise, false. </returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <remarks>
            GetHashCode is suitable for use in hashing algorithms and data structures like a hash table. 
            </remarks>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.GetSchema">
            <summary>
            Returns an in-memory representation of the XML schema used for SerializableList
            </summary>
            <returns>Null -- not currently implemented.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads in a mouse button combination from an xml file
            </summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes out a mouse button combination to xml format
            </summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper">
            <summary>
            Methods and properties associated with the session document's mouse map.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IMouseMapper,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="mouseMapper"></param>
            <param name="terminal"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper.Parent">
            <summary>
            Gets the parent object (ITerminal).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper.MouseMap">
            <summary>
            Gets or sets the name of the mouse map file. 
            </summary>
            <remarks>
            When setting the mouse map file, if the value is not a full path, Reflection
            searches for the file in the user's Reflection document folder and in
            the Built-Ins/Keyboard Maps folder.
            <para>
            If the file isn't found, or the full path passed in does not exist,
            a FileNotFoundException is thrown.
            </para>
            </remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property 
            that was secured via the Permissions Manager, or that 
            can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper.MappingCollection">
            <summary>
            Returns a set of all mouse/key combinations that have been remapped in the 
            current mouse map.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper.AddMapping(Attachmate.Reflection.Emulation.OpenSystems.MouseMapping)">
            <summary>
            Adds a mouse mapping to the current mouse map.
            </summary>
            <param name="mapping">
            An association between a mouse/key combination and a set of actions. The actions are 
            performed when the mouse/key combination is pressed in a host session.
            </param>
            <remarks>
            A mouse/key combination can be remapped to do nothing if the InputMapActionSequence
            specified in mapping.Mapping has no InputMapActions added to it.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper.RemoveMapping(Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination)">
            <summary>
            Removes a mouse mapping from the mouse map.
            </summary>
            <param name="mapping">The mouse/key combination for which to remove the mapping.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapper.Contains(Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination)">
            <summary>
            Returns whether there is a mapping for a specified mouse/key combination
            in the current mouse map.
            </summary>
            <param name="mapping">The mouse/key combination for which to query.</param>
            <returns>True if the current keyboard map contains a mapping for key, false if not.</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping">
            <summary>
            Maps a mouse click or mouse/key combination to a sequence of one or more input actions.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping.#ctor">
            <summary>
            Initializes a new instance of the MouseMapping class.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping.#ctor(Attachmate.Reflection.Emulation.OpenSystems.MouseButtonCombination,Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence)">
            <summary>
            Constructor.
            </summary>
            <param name="button">The mouse/key combination being mapped.</param>
            <param name="mapping">
            Optional parameters associated with the action. If there are no parameters needed
            for the action, null may be specified for this parameter.
            </param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping.Button">
            <summary>
            Gets the mouse/key combination associated with the mouse mapping.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping.Mapping">
            <summary>
            Gets the action sequence associated with the keyboard mapping.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping.GetSchema">
            <summary>
            Returns an in-memory representation of the XML schema used for SerializableList
            </summary>
            <returns>Null -- not currently implemented.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads in a mouse mapping from an xml file
            </summary>
            <param name="reader">where to read the xml from</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.MouseMapping.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes out a mouse mapping to xml format
            </summary>
            <param name="writer">writes the xml to persistant storage</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.MouseShapeOption">
            <summary>
            Defines options that specify the appearance of the mouse pointer in the terminal window. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MouseShapeOption.IBeam">
            <summary>
            The mouse pointer appears as an I-beam.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.MouseShapeOption.Arrow">
            <summary>
            The mouse pointer appears as an arrow.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption">
            <summary>
            National character replacement set definitions.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.None">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.British">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.CanadianEnglish">
            <summary>
            (Reflection for HP only)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.CanadianFrench">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Danish">
            <summary>
            (Reflection for HP only)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Dutch">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.EuropeanSpanish">
            <summary>
            (Reflection for HP only)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Finnish">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Flemish">
            <summary>
            (Reflection for HP only)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.French">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.German">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Italian">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.LatinSpanish">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Norwegian">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Portuguese">
            <summary>
            (Reflection for UNIX and OpenVMS, Reflection for ReGIS Graphics)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.Swedish">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.SwissFrench">
            <summary>
            (Reflection for HP only)
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.NationalReplacementSetOption.SwissGerman">
            <summary>
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption">
            <summary>
            Type of Parity on the connection.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption.Parity8None">
            <summary>
            8-bit, no parity.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption.Parity7Zero">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption.Parity7One">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption.Parity7Odd">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption.Parity7Even">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption.Parity8Even">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ParityTypeOption.Parity8Odd">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.PrintDuplexOption">
            <summary>
            Denotes how Reflection handles printing to single- and double-sided pages.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintDuplexOption.Default">
            <summary>
            Honor the current settings stored by the operating system for all global print jobs.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintDuplexOption.Simplex">
            <summary>
            Print single-sided pages.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintDuplexOption.Vertical">
            <summary>
            Print double-sided pages flipped on the long edge of the paper.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintDuplexOption.Horizontal">
            <summary>
            Print double-sided pages flipped on the short edge of the paper.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintDuplexOption.PrintDuplex4">
            <summary>
            Some printer drivers use additional values that are specific to the printers they 
            support. This value enables Reflection to preserve these settings.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintDuplexOption.PrintDuplex5">
            <summary>
            Some printer drivers use additional values that are specific to the printers they 
            support. This value enables Reflection to preserve these settings.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.PrinterOrientationOption">
            <summary>Denotes the printer page orientation to use.</summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrinterOrientationOption.Default">
            <summary>
            Pages are printed using the page orientation specified in the system-wide printer settings.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrinterOrientationOption.Portrait">
            <summary>
            Pages are printed using portrait orientation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrinterOrientationOption.Landscape">
            <summary>
            Pages are printed using landscape orientation.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.PrintGraphicsColorOption">
            <summary>
            Denotes whether graphics images are printed using color or black and white. 
            It applies only when sending sixel data to the host or a Digital printer 
            when BypassPrinterDriver is True.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintGraphicsColorOption.Color">
            <summary>
            Print using color.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintGraphicsColorOption.Monochrome">
            <summary>
            Print in black and white.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.PrintGraphicsColorSpecificationOption">
            <summary>
            Denotes the color coordinate system used for color sixel printing.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintGraphicsColorSpecificationOption.HLS">
            <summary>
            Host colors are interpreted using the Hue, Luminosity, and Saturation parameters.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintGraphicsColorSpecificationOption.RGB">
            <summary>
            Host colors are interpreted using the Red, Blue, and Green parameters.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.PrintSourceOption">
            <summary>
            Specifies the source of print data.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintSourceOption.Selection">
            <summary>
            Print current selection.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintSourceOption.Screen">
            <summary>
            Print current screen.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.PrintSourceOption.All">
            <summary>
            Print all of display memory.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions">
            <summary>
            Specifies how a trace is to be processed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.ShowSystemDetails">
            <summary>
            Show system details.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.ShowTiming">
            <summary>
            Show timing details.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.ShowDisplayMemory">
            <summary>
            Show display memory.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.ShowNet">
            <summary>
            Show network activity.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.ShowCodePage">
            <summary>
            Show code page.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.Redact">
            <summary>
            Redact.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.ShowTechSupport">
            <summary>
            Show Tech Support Details.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions.ShowDev">
            <summary>
            Show dev details.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceSyntax">
            <summary>
            Specifies the syntax for the processsed trace.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceSyntax.SyntaxTraditional">
            <summary>
            Traditional syntax.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceSyntax.SyntaxVB">
            <summary>
            VB Syntax.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceSyntax.SyntaxCLanguage">
            <summary>
            C Language syntax.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ProjectOption">
            <summary>
            Defines the macro location.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProjectOption.CurrentProject">
            <summary>
            Uses macros from the current document's VBA project.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProjectOption.CurrentLegacyProject">
            <summary>
            Uses macros from the current document's legacy VBA project.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProjectOption.CommonProject">
            <summary>
            Uses macros from the Common VBA project.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ProjectOption.AllLegacyProject">
            <summary>
            Uses macros from the current document's legacy VBA project.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ReadOption">
            <summary>
            Used with IScreen.ReadChars(), ReadLine(), and ReadUntil() families of methods.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ReadOption.NoTranslation">
            <summary>
            Does not translate from PC to Host character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ReadOption.NoDisplay">
            <summary>
            Does not display incoming characters in the terminal window.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption">
            <summary>
            Type of flow control for receiving data from the host.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption.XonXoff">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ReceivePacingOption.Hardware">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.RegionOption">
            <summary>
            How a screen region is to be interpreted.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.RegionOption.Wrapped">
            <summary>
            Returns all text between the starting and ending cursor position.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.RegionOption.Rectangular">
            <summary>
            Returns text within the rectangular area that is created by the starting row and column
            and ending row and column.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ResetOptions">
            <summary>
            Terminal reset option.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ResetOptions.SoftReset">
            <summary>
            Performs a soft reset of the terminal (Terminal Reset).  
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ResetOptions.HardReset">
            Hard Reset on the Connection menu's cascading Reset menu.
            <summary>
            Performs a hard reset of the terminal (Recall Last Setup). 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ResetOptions.SerialStats">
            <summary>
            Resets the serial connection statistics (such as, receiver overruns, parity errors, 
            framing errors) to zero.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.RestoreOptions">
            <summary>
            Restore setting options.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.RestoreOptions.FactoryDefault">
            <summary>
            Restores settings to the factory defaults. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.RestoreOptions.SessionFileValues">
            <summary>
            Restores settings to the last saved session file values.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SaveFileOption">
            <summary>
            Specifies the operation to perform when a file already exists.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SaveFileOption.Overwrite">
            <summary>
            Overwrites the file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SaveFileOption.Append">
            <summary>
            Appends the file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SaveFileOption.Cancel">
            <summary>
            Cancels the operation.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ScreenPoint">
            <summary>
            ScreenPoint represents a coordinate of a row and a column on the host screen.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ScreenPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Attachmate.Reflection.Emulation.OpenSystems.ScreenPoint"/> class. 
            </summary>
            <param name="row">
            The row on the host screen.
            </param>
            <param name="column">
            The column on the host screen.
            </param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ScreenPoint.Row">
            <summary>
            Gets the row of this screen coordinate.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ScreenPoint.Column">
            <summary>
            Gets the column of this screen coordinate.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ScreenPoint.ToString">
            <summary>
            Returns a string that represents the current ScreenPoint.
            </summary>
            <returns>A string that respresents the current ScreenPoint.</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ScreenRegion">
            <summary>
            Defines an area on the host screen for selected text.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ScreenRegion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.SelectionModeOption)">
            <summary>
            ScreenRegion constructor.
            </summary>
            <param name="startRow"></param>
            <param name="startColumn"></param>
            <param name="endRow"></param>
            <param name="endColumn"></param>
            <param name="selectionMode"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ScreenRegion.StartRow">
            <summary>
            The starting row of the region.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ScreenRegion.StartColumn">
            <summary>
            The starting column of the region.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ScreenRegion.EndRow">
            <summary>
            The ending row of the region.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ScreenRegion.EndColumn">
            <summary>
            The ending column of the region.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ScreenRegion.SelectionMode">
            <summary>
            The current selection mode of the region.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.DisplayMemorySelectionOption">
            <summary>
            Specifies which operation to perform when a file already exists.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DisplayMemorySelectionOption.All">
            <summary>
            Specifies the entire display memory.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DisplayMemorySelectionOption.Screen">
            <summary>
            The current screen.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.DisplayMemorySelectionOption.Selection">
            <summary>
            The currently selected region.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ScriptTypeOption">
            <summary>
            Specifies the type of script.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScriptTypeOption.RB">
            <summary>
            Reflection Basic script (RBS).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScriptTypeOption.RCL">
            <summary>
            Reflection Command Language script (RCL).
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ScrollOptimizationOption">
            <summary>
            Indicates when Reflection uses an off-screen bitmap to speed up scrolling.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScrollOptimizationOption.Auto">
            <summary>
            Use the off-screen bitmap to speed up scrolling as appropriate.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScrollOptimizationOption.StandardScroll">
            <summary>
            Never use the off-screen bitmap.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.ScrollOptimizationOption.UseBitmap">
            <summary>
            Always use the off-screen bitmap.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SelectionModeOption">
            <summary>
            Specifies the type of a selected region. 
            </summary>
            <value>
            There are three possible values: Stream, Block, and None (no selected region).
            </value>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SelectionModeOption.None">
            <summary>
            No text is selected.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SelectionModeOption.Stream">
            <summary>
            The selected text is wrapped.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SelectionModeOption.Block">
            <summary>
            The selected text forms a rectangle.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySendingEventHandler">
            <summary>
            Handles the SendingControlKey event to permit users to modify a control key value 
            or cancel a send control key action before it is sent.
            </summary>
            <remarks>To cancel the action, set the Cancel property of the SendingControlKeyEventArgs
             object passed to the event handler to true.
            </remarks>
            <param name="sender">The event sender.</param>
            <param name="e">The event argument.</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySendingEventArgs">
            <summary>
            Contains the Key and Cancel properties that allow the event handler to cancel the send control key action
            or modify the control key value before the control key is sent to the host. 
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySendingEventArgs.#ctor(Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Constructs a BeforeSendControlKeyArgs object.
            </summary>
            <param name="key">Predefined control key value.</param>
            <param name="cancel">Cancel property.</param>
            <param name="row">Current row value.</param>
            <param name="col">Current column value.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySendingEventArgs.Key">
            <summary>
            The Key property permits the user to inspect or modify the control key value.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySendingEventArgs.Row">
            <summary>
            Gets the current row position of the cursor.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ControlKeySendingEventArgs.Column">
            <summary>
            Gets the current column position of the cursor.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KeysSendingEventHandler">
            <summary>
            This event is triggered before Reflection transmits a character or a string of characters to the host.
            </summary>
            <remarks>
            To cancel the action, set the Cancel property of the KeysSendingEventArgs
             object passed to the event handler to true.</remarks>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.KeysSendingEventArgs">
            <summary>
            Contains the Keys and Cancel properties that allow the event handler 
            to cancel the send key action or modify the key value before the key is sent to the host.  
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.KeysSendingEventArgs.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructs a BeforeSendKeysEventArgs object.
            </summary>
            <param name="keys"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="cancel"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeysSendingEventArgs.Keys">
            <summary>
            Gets or sets the Keys property that permits the user to inspect or modify the keys value.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeysSendingEventArgs.Row">
            <summary>
            Gets the current row position of the cursor.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.KeysSendingEventArgs.Column">
            <summary>
            Get the current column position of the cursor.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SendKeysOption">
            <summary>
            Specifies data interpretation options for SendKeys() method. More than one option can be specified by 
            adding them together.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SendKeysOption.NoTranslation">
            <summary>
            Does not translate data from the PC to the host character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SendKeysOption.DecodePassword">
            <summary>
            Transmits the encoded password to host.  
            </summary>
            <remarks> 
            This is typically used with passwords that were captured using the 
            legacy Reflection macro recorder.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SendKeysOption.HexData">
            <summary>
            Indicates that portions of a string that follow a backslash are interpreted using either
            hexadecimal code or C-Language conditions. 
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadedEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadedEventArgs.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadedEventArgs.SettingsFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadingEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadingEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadingEventArgs.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadingEventArgs.SettingsFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SingleByteUPSSOption">
            <summary>
            Defines the Digital UPS character set that is used when SET HOST-CHARACTER-SET
            is set to a double-byte character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SingleByteUPSSOption.DECSupplemental">
            <summary>
            The Digital Supplemental character set is used.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SingleByteUPSSOption.ISOLatin1">
            <summary>
            The ISO Latin-1 character set is used.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SpeakerOption">
            <summary>
            Specifies the speaker mode. The default is Dialing.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SpeakerOption.Dialing">
            <summary>
            Modem speaker is on during dialing.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SpeakerOption.On">
            <summary>
            Modem speaker is always on.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SpeakerOption.Off">
            <summary>
            Modem speaker is always off.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.SpeakerVolumeOption">
            <summary>
            Specifies the speaker volume. The default is Medium.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SpeakerVolumeOption.Low">
            <summary>
            Modem speaker volume is low.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SpeakerVolumeOption.Medium">
            <summary>
            Modem speaker volume is medium.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.SpeakerVolumeOption.High">
            <summary>
            Modem speaker volume is high.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.StopBitsOption">
            <summary>
            The number of stop bits that follow each character during data transmission.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.StopBitsOption.One">
            <summary>
            One stop bit follows each character during data transmission.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.StopBitsOption.Two">
            <summary>
            Two stop bits follow each character during data transmission.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TAPIVersionOption">
            <summary>
            Defines which Telephony Application Programming Interface (TAPI) 
            Reflection uses to connect the PC to telephone services.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TAPIVersionOption.TAPI2">
            <summary>
            Use TAPI version 2.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TAPIVersionOption.TAPI3">
            <summary>
            Use TAPI version 3.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TektronixDefaultFontSizeOption">
            <summary>
            Indicates the default font size for Tektronix emulation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TektronixDefaultFontSizeOption.LargeFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TektronixDefaultFontSizeOption.MediumFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TektronixDefaultFontSizeOption.SmallFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TektronixDefaultFontSizeOption.SmallestFont">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TelnetEchoOption">
            <summary>
            Specifies the Telnet echo option.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetEchoOption.Auto">
            <summary>
            Reflection attempts to negotiate remote echo, but does what the host commands. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetEchoOption.Yes">
            <summary>
            Reflection negotiates local echo with the host, but always echoes.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetEchoOption.No">
            <summary>
            Reflection negotiates remote echo with the host, but does not echo.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TelnetLineModeOption">
            <summary>
            Specifies line mode use for Telnet connections. All options other than RFC are know as "faux" line mode.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetLineModeOption.Never">
            <summary>
            Doesn't use line mode.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetLineModeOption.RFC">
            <summary>
            Negotiate line mode use when connected to a host that supports line mode.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetLineModeOption.Echo">
            <summary>
            Use line mode when the host tells Reflection to do the echoing.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetLineModeOption.SGA">
            <summary>
            Use line mode when the host does not suppress Go Ahead.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetLineModeOption.EchoSGA">
            <summary>
            Use line mode for Echo or SGA.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TelnetLineModeOption.Always">
            <summary>
            Always use line mode.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TerminalSoundOption">
            <summary>
            Terminal sound option.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalSoundOption.Simple">
            <summary>
            Use this value if you don't have multimedia support.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalSoundOption.DOSBeep">
            <summary>
            Use this value if you don't have multimedia support and the beep produced by Simple is too quiet.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalSoundOption.HP70092">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalSoundOption.HP2392A">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalSoundOption.VT100">
            <summary>
            Matches the beep of a VT100.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalSoundOption.VT220">
            <summary>
            Matches the beep of a VT220.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption">
            <summary>
            Defines the type of terminal to emulate.
            </summary>
            
            <value> 
            <list type="bullet">
            <listheader><term>UNIX and OpenVMS Values</term></listheader> 
                <item><description>VT52</description></item>
                <item><description>VT102</description></item>
                <item><description>VT500_7 (equivalent to rcVT400_7, the default value)</description></item>
                <item><description>VT500_8 (equivalent to rcVT400_8)</description></item>
                <item><description>LINUX_CONSOLE	(Linux console emulation)</description></item>
                <item><description>ANSIBBS	(BBS ANSI terminal emulation)</description></item>
                <item><description>ANSIUNIX	(SCO ANSI terminal emulation)</description></item>
                <item><description>ADDS</description></item>
                <item><description>WYSE50</description></item>
                <item><description>WYSE60</description></item>
                <item><description>DG215</description></item>
                <item><description>T27	(Unisys T27 terminal emulation)</description></item>
                <item><description>AT386</description></item>
                <item><description>IBM3151</description></item>
                <item><description>VTUTF8</description></item>
                <item><description>TVI955</description></item>
                <item><description>QNX</description></item>
                <item><description>XTERM</description></item>
              </list>
            <list type="bullet">
            <listheader><term>ReGIS Graphics Values</term></listheader> 
              <item><description>VT52</description></item>
                <item><description>VT102</description></item>
                <item><description>VT500_7 (equivalent to rcVT400_7, the default value)</description></item>
                <item><description>VT500_8 (equivalent to rcVT400_8)</description></item>
                <item><description>LINUX_CONSOLE	(Linux console emulation)</description></item>
                <item><description>ANSIBBS	(BBS ANSI terminal emulation)</description></item>
                <item><description>ANSIUNIX	(SCO ANSI terminal emulation)</description></item>
                <item><description>ADDS</description></item>
                <item><description>WYSE50</description></item>
                <item><description>WYSE60</description></item>
                <item><description>DG215</description></item>
                <item><description>T27	(Unisys T27 terminal emulation)</description></item>
                <item><description>AT386</description></item>
                <item><description>IBM3151</description></item>
                <item><description>Tek401X</description></item>
                <item><description>VTUTF8</description></item>
                <item><description>TVI955</description></item>
                <item><description>QNX</description></item>
                <item><description>XTERM</description></item>
            </list>
            </value>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.ADDS">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.ANSIBBS">
            <summary>
            BBS ANSI terminal emulation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.ANSIUNIX">
            <summary>
            SCO ANSI terminal emulation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.AT386">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.DG215">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.HP2392A">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.HP70092">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.HP70094">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.IBM3151">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.LINUX_CONSOLE">
            <summary>
            Linux console emulation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.QNX">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.T27">
            <summary>
            Unisys T27 terminal emulation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.Tek401X">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.TVI955">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.VT102">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.VT220_7">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.VT220_8">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.VT500_7">
            <summary>
            Equivalent to rcVT400_7.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.VT500_8">
            <summary>
            Equivalent to rcVT400_8.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.VT52">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.VTUTF8">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.WYSE50">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.WYSE60">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TerminalTypeOption.XTERM">
            <summary>
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute">
            <summary>
            Text attributes available for color mapping.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.Plain">
            <summary>
            No attributes set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.Blink">
            <summary>
            Blink character attribute.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.Inverse">
            <summary>
            Display as reverse video attribute.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.Underline">
            <summary>
            Display underlined attribute.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.Bold">
            <summary>
            Display text in bold attribute. Applies to Unix, Open Systems, and ReGIS Graphics terminal types only.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.BoldUnderline">
            <summary>
            Bold underline.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.BlinkBold">
            <summary>
            Blinking bold.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.BlinkInverse">
            <summary>
            Blinking inverse.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.InverseBold">
            <summary>
            Inverse Bold.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.InverseUnderline">
            <summary>
            Inverse underline.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.UnderlineBlink">
            <summary>
            Underlined blinking.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.InverseBoldUnderline">
            <summary>
            Inverse bold underlined.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.InverseBoldBlink">
            <summary>
            Inverse bold blinking.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.BlinkBoldUnderline">
            <summary>
            Blinking bold underline.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.BlinkBoldInverseUnderline">
            <summary>
            Blinking bold inverse underlined.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.BlinkInverseUnderline">
            <summary>
            Blinking inverse underlined.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.Cursor">
            <summary>
            Cursor color. Effective only when the Color Cursor display enhancement flag is set to true.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute.Hotspot">
            <summary>
            Hotspots color.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TextComparisonOption">
            <summary>
            Defines options that indicate how text is compared against the text on the host screen.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextComparisonOption.RegularExpression">
            <summary>
            Compares text using a regular expression.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextComparisonOption.IgnoreCase">
            <summary>
            Compares text in a non case-sensitive manner.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextComparisonOption.MatchCase">
            <summary>
            Performs a case-sensitive text comparison.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TextFileCharacterSetOption">
            <summary>
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextFileCharacterSetOption.DOSCharacterSet">
            <summary>
            Reflection uses the DOS (ASCII) character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextFileCharacterSetOption.WindowsCharacterSet">
            <summary>
            Reflection use the Windows (ANSI) character set.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption">
            <summary>
            How or if text is translated.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption.DefaultTranslation">
            <summary>
            Translates the returned string from host to PC character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption.NoTranslation">
            <summary>
            Does not translate the returned string from host to PC character set.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption.AsXML">
            <summary>
            Returns the string in XML format.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.Theme">
            <summary>
            Theme object represents a visual theme in the application.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Theme.#ctor(Attachmate.Reflection.Emulation.OpenSystems.ITheme,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="theme"></param>
            <param name="terminal"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.Parent">
            <summary>
            Gets the parent object (ITerminal).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.FileName">
            <summary>
            <c>Gets</c> or sets the theme template to use. Setting this loads a new theme.
            </summary>
            <example>
            <code>
            private Theme theme;
            //Set the theme Name.
            theme.FileName = "ThemeTemplate";
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.Modified">
            <summary>
            Returns the modified state of the theme.
            </summary>
            <remarks>
            If <c>true</c>, the theme has been modified since the last save; if <c>false</c>, it has not been modified.
            </remarks>
            <example>
            <code>
            private Theme theme;
            //Sets the theme Name.
            bool IsModified = theme.Modified;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.Cursor">
            <summary>
            <c>Gets</c> the cursor object associated with the theme.
            </summary>
            <example>
            <code>
            private Theme theme;
            private IThemeCursor cursor;
            //Gets the theme cursor.
            cursor = theme.Cursor;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.Color">
            <summary>
            <c>Gets</c> the color map object associated with the theme.
            </summary>
            <example>
            <code>
            private Theme theme;
            private IThemeColor color
            //Gets the theme color.
            color = theme.ThemeColor;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.Font">
            <summary>
            <c>Gets</c> the font object associated with the theme.
            </summary>
            <example>
            <code>
            private Theme theme;
            private IThemeFont font;
            //Gets the theme font.
            font = theme.Font;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.Sounds">
            <summary>
            <c>Gets</c> the sounds object associated with the theme.
            </summary>
            <example>
            <code>
            private Theme theme;
            private IThemeSounds sound;
            //Gets the theme sound.
            sound = theme.Sounds;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Theme.DisplayEnhancements">
            <summary>
            <c>Gets</c> the sounds object associated with the theme.
            </summary>
            <example>
            <code>
            private Theme theme;
            private IThemeSounds sound;
            //Gets the theme sound.
            sound = theme.Sounds;
            </code>
            </example>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Theme.Load(System.String)">
            <summary>
            Loads a new theme into the current session document       
            </summary>
            <param name="pathName">The path to the new theme.</param>
            <example>
            <code>
            class Program
            {
               private Theme theme;
            
               public Theme ApplicationTheme
               {
                  set{theme = value;}
               }
            
               public void LoadTheme()
               {
                  if(theme != null)
                  {
                    theme.Load("C:\\..");//path of the new theme.
                  }
               }
            }
            </code>
            </example>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Theme.Save">
            <summary>
            Saves any changes to the current theme.
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O error (input/output) occurred while trying to save the theme.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the theme.
            </exception>
            <example>
            <code>
            class Program
            {
               private Theme theme;
            
               public Theme ApplicationTheme
               {
                  set{theme = value;}
               }
            
               public void LoadTheme()
               {
                  if(theme != null)
                  {
                    theme.Save();
                  }
               }
            }
            </code>
            </example>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Theme.SaveAs(System.String)">
            <summary>
            Saves the current theme contents to a file.
            </summary>
            <param name="pathName">The path to the new theme.</param>
            <exception cref="T:System.IO.IOException">
            An I/O (input/output) error occurred while trying to save the theme.
            </exception>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission to save the theme.
            </exception>
            <example>
            <code>
            class Program
            {
               private Theme theme;
            
               public Theme ApplicationTheme
               {
                  set{theme = value;}
               }
            
               public void LoadTheme()
               {
                  if(theme != null)
                  {
                    theme.SaveAs("C:\\..");
                  }
               }
            }
            </code>
            </example>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor">
            <summary>
            Provides implementation of properties and methods to get and set terminal colors within a Reflection theme.
            </summary>
            <seealso cref="T:Attachmate.Reflection.Framework.Proxy"/>
            <seealso cref="T:Attachmate.Reflection.Emulation.OpenSystems.IThemeColor"/>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IThemeColor,Attachmate.Reflection.Emulation.OpenSystems.ITheme)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="themeColor"></param>
            <param name="theme"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.Parent">
            <summary>
            Gets the parent object (ITheme).
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.GetForegroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute)">
            <summary>
            Returns the current mapped foreground color for a given terminal attribute.
            </summary>
            <param name="attr">The host text attribute whose mapped color is returned.</param>
            <returns>The current foreground color mapping for the specified attribute.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.GetBackgroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute)">
            <summary>
            Returns the current mapped background color for a given terminal attribute.
            </summary>
            <param name="attr">The host text attribute whose mapped color is returned.</param>
            <returns>The current background color mapping for the specified attribute.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.SetForegroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute,System.Drawing.Color)">
            <summary>
            Sets the current mapped foreground color for a given terminal attribute.
            </summary>
            <param name="attr">The host text attribute whose mapped color is set.</param>
            <param name="newColor">The new foreground color mapping for the specified attribute.</param>        
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.SetBackgroundColor(Attachmate.Reflection.Emulation.OpenSystems.TextColorMappingAttribute,System.Drawing.Color)">
            <summary>
            Sets the current mapped background color for a given terminal attribute.
            </summary>
            <param name="attr">The host text attribute whose mapped color is set.</param>
            <param name="newColor">The new background color mapping for the specified attribute.</param>        
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.GetAnsiColor(Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor)">
            <summary>
            Returns the current mapped color for a given ANSI terminal color.
            </summary>
            <param name="color">The ANSI color whose mapped color is returned.</param>
            <returns>The current color mapping for the specified attribute.</returns>
            <remarks>Mapping ANSI colors is only applicable for SCO ANSI, BBS ANSI, AT386, or Linux Console terminal types.</remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeColor.SetAnsiColor(Attachmate.Reflection.Emulation.OpenSystems.ScreenAnsiColor,System.Drawing.Color)">
            <summary>
            Sets the current mapped color for a given ANSI terminal color.
            </summary>
            <param name="color">The ANSI color whose mapped color is set.</param>
            <param name="newColor">The new color mapping for the specified attribute.</param>        
            <remarks>Mapping ANSI colors is only applicable for SCO ANSI, BBS ANSI, AT386, or Linux Console terminal types.</remarks>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.ThemeCursor">
            <summary>
            Theme object represents a visual theme in the application.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeCursor.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IThemeCursor,Attachmate.Reflection.Emulation.OpenSystems.ITheme)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="themeCursor"></param>
            <param name="theme"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeCursor.Parent">
            <summary>
            Gets the parent object. The parent is the ITheme object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeCursor.CursorShape">
            <summary>
            <c>Gets</c> or <c>sets</c> the appearance of the cursor in the terminal window.
            </summary>
            <remarks>
            This is stored as a string in the theme.
            
            Values :
            
            Block -
            VerticalLine -
            NoCursor - 
            Underline - 
            </remarks>
            <example>
            <code>
            private ThemeCursor cursor;
            //Sets the CursorShape.
            cursor.CursorShape = CursorShapeOption.VerticalLine;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeCursor.CursorBlink">
            <summary>
            Gets or sets whether the cursor blinks.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeDisplayEnhancements.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IThemeDisplayEnhancements,Attachmate.Reflection.Emulation.OpenSystems.ITheme)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="themeDisplayEnhancements"></param>
            <param name="theme"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeDisplayEnhancements.Parent">
            <summary>
            Gets the parent object (ITheme).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeDisplayEnhancements.EnableBlink">
            <summary>
            Gets or sets whether blinking characters are enabled. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeDisplayEnhancements.EnableUnderline">
            <summary>
            Gets or sets whether underlining of characters is enabled or not. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeDisplayEnhancements.EnableBold">
            <summary>
            Gets or sets whether bold characters are enabled. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeDisplayEnhancements.InverseVideo">
            <summary>
            Gets or sets whether foreground and background colors are reversed for all
            display attributes. Not applicable to ANSI terminals.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeDisplayEnhancements.ColorCursor">
            <summary>
            Gets or sets whether the cursor color can be mapped. Not applicable
            to ANSI terminals.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeFont.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IThemeFont,Attachmate.Reflection.Emulation.OpenSystems.ITheme)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="themeFont"></param>
            <param name="theme"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeFont.Parent">
            <summary>
            Gets the parent object (ITheme).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeFont.FontName">
            <summary>
            <c>Gets</c> or <code>sets</code> the face name of the terminal font to use.
            </summary>
            <example>
            <code>
            private ThemeFont themeFont;
            private ITheme theme;
            //Gets the Font name.
            string font = themeFont.FontName;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeFont.Bold">
            <summary>
            <c>Gets</c> or <c>sets</c> whether the terminal font has the bold attribute.
            </summary>
            <example>
            <code>
            private ThemeFont themeFont;
            
            themeFont.Bold = true;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeFont.AutoFontSize">
            <summary>
            <c>Gets</c> or <c>sets</c> whether the font size is auto adjusted when terminal window size changes.
            </summary>
            <example>
            <code>
            private ThemeFont themeFont;
            
            themeFont.AutoFontSize = true;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeFont.FontSize">
            <summary>
            <c>Gets</c> or <c>sets</c> the size (in points) of the terminal session font.
            </summary>
            <example>
            <code>
            private ThemeFont themeFont;
            
            int size = themeFont.FontSize;
            </code>
            </example>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.ThemeSounds.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IThemeSounds,Attachmate.Reflection.Emulation.OpenSystems.ITheme)">
            <summary>
            The constructor, for internal use.
            </summary>
            <param name="themeSounds"></param>
            <param name="theme"></param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeSounds.Parent">
            <summary>
            <c>Gets</c> the parent object (ITheme).
            </summary>
            <example>
            <code>
            private ThemeSounds themeSound;
            private ITheme theme;
            //Gets the ITheme parent.
            theme = themeSound.Parent;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeSounds.ConnectEventSound">
            <summary>
            <c>Gets</c> or <c>sets</c> the path to the sound file that plays when the session is connected.
            </summary>
            <example>
            <code>
            private ThemeSounds themeSound;
            
            themeSound.ConnectEventSound = true;
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.ThemeSounds.DisconnectEventSound">
            <summary>
            <c>Gets</c> or <c>sets</c> the path to the sound file that plays when the session is disconnected.
            </summary>
            <example>
            <code>
            private ThemeSounds themeSound;
            
            themeSound.DisconnectEventSound = "C:\\test.wma";
            </code>
            </example>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TLSStrengthOption">
            <summary>
            Level of encryption
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSStrengthOption.Level_0">
            <summary>
            Default encryption strength
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSStrengthOption.Level_40">
            <summary>
            40 bit encryption strength
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSStrengthOption.Level_56">
            <summary>
            56 bit encryption strength
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSStrengthOption.Level_128">
            <summary>
            128 bit encryption strength
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSStrengthOption.Level_168">
            <summary>
            168 bit encryption strength
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSStrengthOption.Level_256">
            <summary>
            256 bit encryption strength
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TLSVersionOption">
            <summary>
            Specifies options for TLS and SSL versions
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSVersionOption.TLSVersion1_0">
            <summary>
            TLS version 1.0
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSVersionOption.SSLVersion3">
            <summary>
            SSL 3.0
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TLSVersionOption.TLSVersion1_2">
            <summary>
            TLS version 1.2
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TransferCaseOption">
            <summary>
            Specifies how letter case is handled in the names of files sent to the host.
            This affects WRQ/Reflection, Kermit, and Zmodem transfers, but not Xmodem transfers.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferCaseOption.UpperCase">
            <summary>
            Host filenames are created using all uppercase letters, regardless of the case of
            the local (source) file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferCaseOption.LowerCase">
            <summary>
             Host filenames are created using all lowercase letters, regardless of the case of
             the local (source) file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferCaseOption.Preserve">
            <summary>
            The letter case of the host filename exactly matches the case of the local filename.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TransferLinkOption">
            <summary>
            Options for specifying the extent to which nonprinting ASCII characters are automatically 
            converted to printing ASCII characters during file transfers. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferLinkOption.SevenBitLink">
            <summary>
            All nonprinting ASCII characters are converted.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferLinkOption.EightBitLink">
            <summary>
            Only a small number of nonprinting ASCII characters are converted.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferLinkOption.UserDefinedLink">
            <summary>
            All characters that would be converted under EightBitLink are converted, along with additional 
            characters as specified with the WRQExtraCharacters property.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TransferProtocolOption">
            <summary>
            Specifies the type of file being transferred.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferProtocolOption.Wrq">
            <summary>
            Specifies WRQ/Reflection as the default protocol.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferProtocolOption.XModem">
            <summary>
            Specifies Xmodem as the default protocol.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferProtocolOption.ZModem">
            <summary>
            Specifies Zmodem as the default protocol.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferProtocolOption.Kermit">
            <summary>
            Specifies Kermit as the default protocol.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferProtocolOption.Ftp">
            <summary>
            Specifies FTP as the default protocol.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption">
            <summary>
            Specifies what type of file is being transferred.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption.Ascii">
            <summary>
            Uses ASCII file transfer.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption.Binary">
            <summary>
            Uses binary file transfer.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption.Labels">
            <summary>
            Uses labels or image file transfer.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption.AutoDetect">
            <summary>
            Determines the file transfer type by the file extension.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption.AskUser">
            <summary>
            Displays a dialog box asking the user what file transfer method to use.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransferTypeOption.Scan">
            <summary>
            Reflection determines the file transfer method. 
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TransmitFileOption">
            <summary>
            Specifies additional, non-default behavior for the FileTransfer.TransmitFile method.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransmitFileOption.NoTranslation">
            <summary>
            Indicates that the file contains binary data, and should not be translated from the PC character 
            set into the host character set. 
            </summary>
            <remarks>
            Use this option if the file contains characters that are already 
            in the host character set.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransmitFileOption.NoDisplay">
            <summary>
            Specifies that incoming characters should not be displayed in the terminal window while waiting
            for the PromptChar or for PauseTime at the end of a line. 
            </summary>
            <remarks>
            If both of the PauseTime and PromptChar
            arguments are not specified, this option has no effect (the method does not read incoming data from the host).
            </remarks>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption">
            <summary>
            The type of flow control to use for transmitting data to the host.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption.XonXoff">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TransmitPacingOption.Hardware">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TVIAttributeBaseModeOption">
            <summary>
            Indicates how visual attributes are applied when Reflection emulates a TVI terminal (TerminalType = rcTVI955). 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIAttributeBaseModeOption.Page">
            <summary>
            Visual attributes are applied from the cursor location in display memory to the bottom of the page.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIAttributeBaseModeOption.Line">
            <summary>
            Visual attributes apply only from the cursor location to the end of the line. 
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TVIBottomStatusLineOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIBottomStatusLineOption.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIBottomStatusLineOption.Status">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIBottomStatusLineOption.User1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIBottomStatusLineOption.User2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TVICompatibilityOption">
            <summary>
            Indicates the TVI emulation type Reflection uses when TerminalType is set to rcTVI955. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVICompatibilityOption.Comp950">
            <summary>
            Reflection is configured for TVI 950 emulation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVICompatibilityOption.Comp955">
            <summary>
            Reflection is configured for TVI 955 emulation.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TVIDownKeySendsOption">
            <summary>
            Indicates the Down key function when Reflection emulates a TVI terminal (TerminalType = rcTVI955).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIDownKeySendsOption.CtrlV">
            <summary>
            The Down key sends Ctrl+V.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIDownKeySendsOption.CtrlJ">
            <summary>
            The Down key sends Ctrl+J (linefeed).
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TVIFunctionKeySetOption">
            <summary>
            Indicates the function key set that is available to the keyboard when Reflection emulates a 
            TVI terminal (TerminalType = rcTVI955).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIFunctionKeySetOption.TVIFkeySetOne">
            <summary>
            Sends control codes that match the function key set One when the corresponding 
            function keys are pressed.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIFunctionKeySetOption.TVIFkeySetTwo">
            <summary>
            Sends control codes that match the function key set Two when the corresponding 
            function keys are pressed.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TVIStatusLineAttributeOption">
            <summary>
            Indicates usage and display of the top status line when Reflection emulates a 
            TVI terminal (TerminalType = rcTVI955).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIStatusLineAttributeOption.Normal">
            <summary>
            The top and bottom status line characters are displayed using the 
            default display attributes.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIStatusLineAttributeOption.Inverse">
            <summary>
            The top and bottom status lines are displayed in inverse video to the background.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIStatusLineAttributeOption.Underline">
            <summary>
            The top and bottom status line characters are displayed using the default 
            display attributes with underlining added.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVIStatusLineAttributeOption.InverseUnderline">
            <summary>
            The top and bottom status lines are 
            displayed in inverse video to the background with underlining added.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TVITopStatusLineOption">
            <summary>
            Specifies  the usage and display of the top 
            status line when Reflection is emulating a TVI terminal (TerminalType TVI955).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVITopStatusLineOption.None">
            <summary>
            The top status line is not shown.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVITopStatusLineOption.Status">
            <summary>
            The top status line is visible and shows row, column, and connection-related information.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVITopStatusLineOption.User1">
            <summary>
            The top status line is visible and the host can customize the status line message.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TVITopStatusLineOption.User2">
            <summary>
            The top status line is visible and the host can customize the status line message.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.UiControlActionMapper">
            <summary>
                Methods and properties associated with accessing and setting the input map action sequence for a given user interface control.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.UiControlActionMapper.#ctor(Attachmate.Reflection.Emulation.OpenSystems.ITerminal,Attachmate.Reflection.Emulation.OpenSystems.IUiControlActionMapper)">
            <summary>
                The constructor, for internal use.
            </summary>
            <param name="terminal">The ITerminal interface is an interface to access an IBM 3270 or 5250 host emulation session object.</param>
            <param name="uiControlActionMapper">Object associated with the session document's keyboard map.</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.UiControlActionMapper.Parent">
            <summary>
                Gets the parent object. The parent is the ITerminal object.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.UiControlActionMapper.Add(Attachmate.Reflection.UserInterface.IUiControl,Attachmate.Reflection.Emulation.OpenSystems.InputMapActionSequence)">
            <summary>Adds the input map action sequence to the given user interface control.</summary>
            <param name="uiControl">Object containing properties and operations on the control.</param>
            <param name="inputMapActionSequence">Object containing a set of actions that are mapped to an input mapping.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.UiControlActionMapper.Get(Attachmate.Reflection.UserInterface.IUiControl)">
            <summary>
                Returns the input map action sequence from a given user interface control.
            </summary>
            <param name="uiControl">Object containing properties and operations on the control.</param>
            <returns>Object containing a set of actions that are mapped to an input mapping.</returns>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.UseIPv6Option">
            <summary>
            Defines how Reflection communicates with a host using the IPv6 and older IPv4 protocols.  
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.UseIPv6Option.WhenAvailable">
            <summary>
            Reflection connects using IPv6 if it is available. If IPv6 is not available, Reflection attempts to connect using IPv4. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.UseIPv6Option.Always">
            <summary>
            Reflection only attempts an IPv6 connection.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.UseIPv6Option.Never">
            <summary>
            Reflection never attempts an IPv6 connection. 
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.VTBackspaceSendsOption">
            <summary>
            Indicates the key that is transmitted to the host when the user presses the BACKSPACE key. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.VTBackspaceSendsOption.DeleteKey">
            <summary>
            The Delete character is transmitted when the user presses the Backspace key.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.VTBackspaceSendsOption.BackspaceKey">
            <summary>
            The Backspace character is transmitted when the user presses the Backspace key.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.VTCursorKeyOption">
            <summary>
            Denotes whether the cursor keys are controlled by the host.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.VTCursorKeyOption.NormalMode">
            <summary>
            Cursor keys are in normal mode.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.VTCursorKeyOption.ApplicationMode">
            <summary>
            Cursor keys are defined and controlled by the host application.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.VTKeyPadOption">
            <summary>
            Indicates which characters are transmitted by the numeric keypad keys. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.VTKeyPadOption.NumericMode">
            <summary>
            Keys on the numeric keypad are in normal (numeric) mode.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.VTKeyPadOption.ApplicationMode">
            <summary>
            Keys on the numeric keypad are defined by the host application.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WaitForOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WaitForOption.None">
            <summary>
            No options.  
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WaitForOption.AllowKeystrokes">
            <summary>
            Allows keystrokes while a wait is in progress.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WaitForOption.NoDisplay">
            <summary>
            Does not display incoming text while a wait is in progress.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WaitForOption.NoTranslation">
            <summary>
            The specified string contains binary data which matches exactly what the 
            host receives without any host-to-PC character conversion.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WaitForOption.HexData">
            <summary>
            Portions of the specified string following a backslash are interpreted using either 
            hexadecimal code or C-language character conventions.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WRQCompressionOption">
            <summary>
            Options for specifying how file compression is handled.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQCompressionOption.None">
            <summary>
            Performs no compression on transfers.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQCompressionOption.Rle">
            <summary>
            Performs run-length compression on transfers.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQCompressionOption.Huffman">
            <summary>
            Performs Huffman compression on transfers.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WRQFastFileTransferOption">
            <summary>
            Options for specifying whether Reflection uses the fast file transfer feature.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQFastFileTransferOption.Negotiate">
            <summary>
            Reflection attempts a fast file transfer. If the fast file transfer feature is not available, 
            a standard transfer is used.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQFastFileTransferOption.Always">
            <summary>
            Fast file transfer is always used.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQFastFileTransferOption.Never">
            <summary>
            Fast file transfer is never used.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WRQMPEFileNamesOption">
            <summary>
            Specifies which MPE operating system naming convention to use.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQMPEFileNamesOption.Mpe">
            <summary>
            Reflection uses traditional MPE filenames unless a name begins with a forward slash or a period, 
            in which case the name is assumed to be a POSIX name.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQMPEFileNamesOption.MpeOnly">
            <summary>
            Reflection uses traditional MPE filenames, reporting any filename beginning with a forward slash
            or a period as invalid.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQMPEFileNamesOption.Posix">
            <summary>
            Reflection uses POSIX filenames.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WRQMPEFileNamesOption.Auto">
            <summary>
            The host program determines which naming system to use.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WyseAttributeOption">
            <summary>
            Indicates the Wyse terminal display attribute mode. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseAttributeOption.Character">
            <summary>
            Character mode, which adds the current display attribute to each character as it is 
            received, exactly like a VT emulator.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseAttributeOption.Line">
            <summary>
            Line mode, which adds the newly specified display attribute to every subsequent 
            character on the line immediately, up to the end of the line or the next different attribute.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseAttributeOption.Page">
            <summary>
            Page mode, which adds the newly specified attribute to every character on the page or 
            up to the next existing attribute.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WyseBlockTerminatorOption">
            <summary>
            Indicates the end-of-transmission delimiter for block sends for Wyse terminal 
            emulation sessions.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseBlockTerminatorOption.USCR">
            <summary>
            Sends a US at the end of a line and a carriage return (CR) at the end of a page or block.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseBlockTerminatorOption.CRETX">
            <summary>
            Sends a carriage return (CR) at the end of a line and an ETX at the end of a page.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WyseEnterKeyOption">
            <summary>
            Indicates what is sent to the host when the ENTER key is pressed during a Wyse terminal
            emulation session.  
            </summary>
            <remarks>
            The selected character or character sequence is sent.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseEnterKeyOption.CR">
            <summary>
            Send a carriage return (CR).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseEnterKeyOption.CRLF">
            <summary>
            Send a carriage return and line feed (CRLF).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseEnterKeyOption.TAB">
            <summary>
            Send a TAB.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WyseReceivedCROption">
            <summary>
            Indictates how a received carriage return (CR) is interpreted during a Wyse terminal 
            emulation session.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseReceivedCROption.CR">
            <summary>
            Interpret as a carriage return (CR).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseReceivedCROption.CRLF">
            <summary>
            Interpret as a carriage return followed by a linefeed (CRLF).
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WyseReturnKeyOption">
            <summary>
            Indictates what is sent to the host when the RETURN key is pressed during a Wyse terminal
            emulation session.  
            </summary>
            <remarks>
            The selected character or character sequence is sent.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseReturnKeyOption.CR">
            <summary>
            Send a carriage return (CR).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseReturnKeyOption.CRLF">
            <summary>
            Send a carriage return and line feed (CRLF).
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseReturnKeyOption.TAB">
            <summary>
            Send a TAB.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.WyseStatusLineDisplayOption">
            <summary>
            Indicates whether the Wyse status line at the top of the screen is set to Off, Standard, or Edit.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseStatusLineDisplayOption.Standard">
            <summary>
            The Wyse status line is visible. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseStatusLineDisplayOption.Off">
            <summary>
            The Wyse status line is not visible. 
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.WyseStatusLineDisplayOption.Edit">
            <summary>
            The Wyse status line is equivalent to Standard.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TraceFileExistsOption">
            <summary>
            Specifies the operation to perform when a file already exists.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFileExistsOption.OverWrite">
            <summary>
            Overwrite the file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFileExistsOption.Append">
            <summary>
            Append the file.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFileExistsOption.OpenError">
            <summary>
            Open the file and indicate an error.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.XModemErrorCheckingOption">
            <summary>
            Options for specifying the type of Xmodem error checking  
            and the Xmodem packet size.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.XModemErrorCheckingOption.None">
            <summary>
            Specifies 1-byte checksum and 128-byte packets.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.XModemErrorCheckingOption.XModemCrc">
            <summary>
            Specifies 2-byte CRC and 128-byte packets.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.XModemErrorCheckingOption.XModem1k">
            <summary>
            Specifies 2-byte CRC and 1024-byte packets.
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.Screen">
            <summary>
            Screen object represents host screen data.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.#ctor(Attachmate.Reflection.Emulation.OpenSystems.IScreen,Attachmate.Reflection.Emulation.OpenSystems.ITerminal)">
            <summary>
            Initializes a new instance of the Screen class
            </summary>
            <param name="screen">The server-side screen instance</param>
            <param name="terminal">The parent terminal object</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.Dispose(System.Boolean)">
            <summary>
            Disposes of the client screen object.
            </summary>
            <param name="disposing">Indicates whether this was invoked by the public Dispose method (true) or the finalizer (false)</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.SelectionMode">
            <summary>
            Gets the type of region selected.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.AbsoluteRow">
            <summary>   
            Gets or sets a value indicating how Reflection calculates the cursor row position shown in the status   
            bar display for VT emulations only. 
            </summary>
            <remarks>
            When set to true, the cursor row position is
            calculated relative to the top of display memory.   
            (that is, the row value increases as text scrolls off into
            display memory). 
            <para>
            When set to false, the cursor row position is   
            calculated relative to the current screen display (that is, the row value 
            is never greater than the current value of DisplayRows).</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.AutoLinefeed">
            <summary>   
            Gets or sets a value indicating whether Reflection appends a linefeed character to each transmitted 
            or received carriage return character. 
            </summary> 
            <remarks>
            Most hosts echo both a carriage return and a linefeed when you press the Return key, 
            so it isn't usually appropriate to add another linefeed in remote mode. However, in local mode, 
            a carriage return does not execute a linefeed automatically, so you may want to set
            AutoLinefeed to true.   
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.AutoRepeat">
            <summary>   
            Gets or sets a value indicating whether keys repeat when you hold them down. 
            (The SHIFT, ENTER, and CTRL keys never  
            auto repeat.)
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.AutoScroll">
            <summary>   
            Gets or sets a value indicating whether Auto   
            Scroll is on. 
            </summary>
            <remarks>
            This property is valid for Wyse, DG, and ADDS terminal
            emulation. 
            <para>
            When this property is true, a linefeed on the last line of the   
            screen causes a new blank line to be created and the rest of the screen to  
            scroll up one line.</para>
            </remarks> 
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.BreakEnabled">
            <summary>   
            Gets or sets a value indicating whether a  
            break can be transmitted to the host computer. 
            </summary>  
            <remarks>
            This property affects
            breaks transmitted from the keyboard, not breaks
            transmitted programmatically (for example, with the Break method).  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.BreakLength">
            <summary>   
            Gets or sets a value indicating the length 
            (in milliseconds) of the break signal. 
            </summary> 
            <remarks>
            To transmit a   
            Break signal to the host, use the Break method.   
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CapsLock">
            <summary>   
            Gets or sets a value indicating whether the
            CapsLock keyboard function is in effect. 
            </summary>  
            <remarks>
            When this property is true,
            pressing any letter key transmits the uppercase version of the letter to
            the host. (If the CapsLockMode property is true, the CapsLock property
            is automatically set to false.) 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ColumnsPerScroll">
            <summary>   
            Gets or sets a value indicating the number of columns, or character positions, to roll right 
            or left during one horizontal scrolling operation with CTRL+Left or CTRL+Right.
            </summary>  
            <remarks>
            This property only applies when RightMargin is greater than 80 and you are   
            operating in graphics mode without a 132-column adapter.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CompensateFrameSpaces">
            <summary>   
            Gets or sets a value indicating how Reflection handles spaces when aligning data on screen. 
            </summary>  
            <remarks>
            This property is relevant for Thai character set support only; change only if you use 
            the Thai version of Windows. 
            <para>
            If Reflection uses a proportional font, this property specifies the 
            number of spaces after which text characters are realigned to display on
            monospaced boundaries. </para>
            <para>
            For example, if the terminal window displays two columns of data with at least 
            three spaces between columns on any particular line, setting this property to three (3)
            ensures that the second column of data is left-aligned.  
            </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CompressBlankLinesEnabled">
            <summary>   
            Gets or sets a value indicating how Reflection handles blank lines in display memory. 
            </summary> 
            <remarks>
            This property only affects lines that have scrolled off  
            the screen.
            <para>When this property is true, Reflection compresses multiple blank lines in 
            display memory into a single blank line.  
            </para>  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CopyDataFormat">
            <summary>   
            Gets or sets a value indicating the copy format.
            </summary>  
            <remarks>
            Format can be Lines, Unformatted or Paragraph.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CopyTableMethod">
            <summary>   
            Gets or sets a value indicating the copy table method.
            </summary>  
            <remarks>
            Method can be Detect Columns (based on vertical space alignment) or
            Replace Spaces (which replaces multiple spaces or tabs with a single tab).
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CopyGraphicsBackground">
            <summary>   
            Gets or sets a value indicating whether
            bitmaps copied to the Clipboard are edited to set the background color    
            to white and near-white colors to black. 
            </summary>
            <remarks>
            This is useful for
            pasting graphic images into word-processing documents.  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CopyGraphicsVGAColors">
            <summary>   
            Gets or sets a value indicating whether
            bitmaps copied to the Clipboard are dithered to standard VGA colors.
            </summary>
            <remarks> 
            This is useful for pasting graphic images into Windows applications that   
            do not recognize color palettes (for example, Windows Paintbrush).
            (Dithering options are controlled by the ImageDither property.)
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CursorColumn">
            <summary>   
            Gets the column that contains the cursor in the terminal window, relative   
            to the left edge of the screen. 
            </summary>
            <remarks> 
            The number is one-based   
            (that is, the first column is column 1). 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.CursorRow">
            <summary>   
            Gets the row that contains the cursor in the terminal window, relative to the  
            top of the screen (in host-addressable coordinates). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayColumns">
            <summary>   
            Gets or sets a value indicating the number 
            of columns displayed in the terminal window.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayEnabled">
            <summary>   
            Gets or sets a value indicating whether Reflection displays characters received from the host during the 
            execution of any of the following methods: ReadChars, ReadLine, or ReadUntil.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayMemoryBlocks">
            <summary>   
            Gets or sets a value indicating the number 
            of 8-kilobyte blocks allocated to display memory.   
            </summary>  
            <remarks>
            Display memory contains both the information visible on the display and 
            information that has scrolled off the display. It is a log of what has  
            recently been sent from the host to the PC. The default value  
            is nine 8K blocks, or 72K of display memory.  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayMemoryTopRow">
            <summary>   
            Gets or sets the index of the top row of display memory using host-addressable   
            coordinates.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayRows">
            <summary>   
            Gets or sets a value indicating the number 
            of lines in each page of display memory. 
            </summary>
            <remarks>
            The host can position the cursor   
            and write characters on any row in the specified range. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.DrawingOptimization">
            <summary>   
            Gets or sets a value indicating whether
            Reflection uses drawing optimization features to control the timing of  
            changes to the screen display. 
            </summary>
            <remarks>
            Use the default value (true) for the best
            performance with most host applications.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.DynamicTerminalSize">
            <summary>   
            Gets or sets a value indicating whether 
            Reflection supports the dynamic update of the number of rows and columns in 
            the display when the user resizes the terminal window. 
            </summary>
            <remarks>
            You can set this property to true only when emulating a VT terminal. Your
            Telnet server and application must also support NAWS (Negotiate About   
            Window Size) otherwise display problems can occur. DynamicTerminalSize and  
            AutoFontSize are mutually exclusive options; when one is set to true, the other 
            is automatically set to false.  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.EndOfLineWrap">
            <summary>   
            Gets or sets a value indicating whether  
            Reflection automatically inserts a carriage return and linefeed at the end of a line.
            </summary> 
            <remarks>
            When this property is   
            set to true, Reflection automatically inserts a carriage return and a   
            linefeed. 
            <para> 
            When the value is false, 
            the cursor is not automatically advanced. 
            If you type additional characters, those characters overwrite previously typed  
            characters until you move the cursor.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ForceAutoRepeat">
            <summary>   
            Gets or sets a value indicating whether Reflection ignores the current value of  
            the AutoRepeat property and always auto repeats (causing most keys to   
            repeat when you hold the key down). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmIsBlockMode">
            <summary>   
            Gets or sets a value indicating whether Block  
            mode state is enabled for IBM 3151 terminal sessions (TerminalType = rcIBM3151).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmCharInsertionOption">
            <summary>   
            Gets or sets a value indicating how
            character insertion is handled during IBM 3151 terminal sessions
            (TerminalType = rcIBM3151). 
            </summary> 
            <remarks> 
            When this property is true, a character insertion forces a character off a  
            row (or off the end of the screen if Autowrap is on) unless a null character can 
            be deleted to accommodate the insertion.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmLineInsertionOption">
            <summary>   
            Gets or sets a value indicating how line   
            insertion is handled during IBM 3151 terminal sessions  
            (TerminalType = rcIBM3151). 
            </summary>
            <remarks> 
            When this property is true, a line insertion forces the last line off the   
            screen unless a null line can be deleted to accommodate the
            insertion.  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmClearModified">
            <summary>   
            Gets or sets a value indicating whether the
            MDT (Modified Data Tag) is cleared after data is sent to the host during
            IBM 3151 terminal sessions (TerminalType = rcIBM3151).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmIgnoreNull">
            <summary>   
            Gets or sets a value indicating whether
            nulls received from the host are ignored during IBM 3151 terminal   
            sessions (TerminalType = rcIBM3151).
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmSendTrailingNulls">
            <summary>   
            Gets or sets a value indicating whether
            trailing nulls are sent to the host during IBM 3151 terminal sessions   
            (TerminalType = rcIBM3151). 
            </summary> 
            <remarks>
            This property is only relevant in Block mode.   
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ImageUseCurrentColorMap">
            <summary>   
            Gets or sets a value indicating what happens   
            when color bitmaps are pasted from the Clipboard. 
            </summary>
            <remarks> 
            When this property is 
            set to true, 256-color bitmaps pasted from the Clipboard are dithered to
            the current color map values. 
            <para> 
            When this property is set to false, the   
            color map that best represents the colors in the pasted bitmap is   
            calculated.</para>
            <para>
            Dithering options are controlled by the ImageDither 
            property.</para> 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ImageColorMapFleshtonePriority">
            <summary>   
            Gets or sets a value indicating what happens   
            when a 256-color image is pasted from   
            the Clipboard to the Reflection terminal window. 
            </summary>
            <remarks>
            Reflection uses an algorithm to determine exactly how colors  
            should be mapped when emulating 16-bit terminals. 
            <para> 
            Setting ImageFleshtones to true causes Reflection to  
            give more priority to accurately representing colors like red, brown,   
            yellow, and pink from the original 256-color image, rather than to colors   
            like blue and green.
            </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.InactivityEventsIgnoreKeyboardMouse">
            <summary>   
            Gets or sets a value indicating how
            Reflection handles keyboard and mouse actions with events that are  
            scheduled to execute after a period of inactivity.  
            </summary> 
            <remarks> 
            When this property is true (the default), mouse and keyboard activity are   
            ignored, the period of inactivity is counted down, and the scheduled event is executed. 
            <para> When this property is false, keystrokes and mouse clicks reset the  
            inactivity countdown when the Reflection terminal window has focus. 
            Moving the mouse resets the inactivity countdown when Reflection is the 
            foreground application. </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.InsertMode">
            <summary>   
            Gets or sets a value indicating whether
            characters can be added to text in the terminal window without typing over  
            existing characters. 
            </summary>
            <remarks>
            When this property is set
            to true, new characters are inserted at the cursor location, and existing   
            characters are moved to the right.  
            <para>
            When this property is set to false, typing over
            existing characters replaces those characters. 
            </para>
            <para>This property is relevant when Reflection is in Block mode.</para> 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReverseVideo">
            <summary>   
            Gets or sets a value indicating whether the
            foreground and background colors for screen attributes are reversed.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IsJISRoman">
            <summary>   
            This property returns or specifies  
            how character 92 is displayed when HostCharacterSet is set to
            rcDECKanji1983 or rcDECKanji1978. 
            </summary>
            <remarks>
            When this property is set to true, character 92 is displayed as a Yen character and the 
            character set in G0 is JIS-Roman. 
            
            <para>When this parameter is set to false, character 92 is displayed as a backslash character (\) 
            and the character set in G0 is ASCII.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.UseKatakanaCharacterSet">
            <summary>   
            Gets or sets a value indicating whether the
            Katakana or Kanji character set is used by default when HostCharacterSet
            is set to rcDECKanji1983 or rcDECKanji1978. 
            </summary>  
            <remarks> 
            When this property is set to true, Reflection uses the Katakana character set. 
            <para> When it is set to false, Reflection uses the Kanji character set.
            </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IsKeyboardLocked">
            <summary>   
            Gets or sets a value indicating whether or 
            not the keyboard and the toolbar are locked (that is, they cannot be used). 
            </summary>  
            <remarks> 
            When this property is set to true, the keyboard and toolbar are locked. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.MaintainUnscaledImage">
            <summary>   
            By default, Reflection scales images down so that an entire image  
            fits on the PC display. 
            </summary>
            <remarks>
            Set this property to true to display 
            images in full scale.
            <para>Use the Alt key with the arrow  
            keys to pan the window. </para>
            </remarks> 
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.MarginClickSelectsLine">
            <summary>   
            Gets or sets a value indicating what occurs when the mouse is clicked in the left margin
            of the terminal window. 
            </summary> 
            <remarks>
            When this property is true (the default) the mouse click 
            selects the entire line.  When it is false, the mouse click does not select any text.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.MarginBellEnabled">
            <summary>   
            Gets or sets a value indicating whether a  
            bell sounds when the cursor reaches the column that is eight spaces   
            left of the right margin.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.MouseColumn">
            <summary>   
            Gets the column location where the mouse was last
            clicked in the terminal screen. 
             </summary>
            <remarks>
            A click in the first column sets this   
            property to zero (0).   
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.MouseRow">
            <summary>   
            Gets the row location (in host-addressable coordinates) where the mouse  
            was last clicked in the terminal screen.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.MultiplePageTerminal">
            <summary>   
            If you run a host application that requires the terminal to have a single page of memory (24 lines),
            set this property to false.  
            </summary>  
            <remarks>
            With Reflection, your PC can emulate a multi-page terminal that dynamically 
            stores data. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.NumLock">
            <summary>   
            Gets or sets a value indicating whether the
            NumLock keyboard function is on or off. 
            </summary>  
            <remarks>
            When this property is true, the numeric keypad is in numeric mode. When it is false, the numeric keypad is in
            cursor-positioning mode.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.OnDemandFontsEnabled">
            <summary>   
            On-demand font-loading (ODL) is a Digital Japan feature that was 
            added to Reflection version 5.2 (along with related features such as 
            VT382 font-preloading and Gyoukan-Keisen line drawing). 
            </summary>  
            <remarks> 
            Set this property   
            to true if you use an EUC double-byte Japanese character set and  
            want to use ODL for xA121-xFE7E.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.PageCoupling">
            <summary>   
            Gets or sets a value indicating whether the
            cursor is coupled to the current page in page memory, or if moving the  
            cursor to another page causes that page to be displayed.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.PasteBufferSize">
            <summary>   
            Gets or sets a value indicating the size of
            a "paste block" (that is, the number of characters pasted from the  
            Clipboard to the terminal window before a pause occurs). 
            </summary>  
            <remarks>
            See the 
            description for the PasteDelay property for information on configuring the  
            length of the pause and on conditions that can terminate the pause. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.PasteDelay">
            <summary>   
            Gets or sets a value indicating how long (in tenths of a second) Reflection waits between "paste blocks" when
            pasting data from the Clipboard into display memory. 
            </summary>
            <remarks>
            See the description   
            for the PasteBufferSize property for information on configuring the size
            of a paste block.
            <para>   
            Reflection waits for the PasteDelay interval or for the number of
            characters already sent to be echoed back before sending another line.  
            </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseDelKeyAsDestructiveBackspace">
            <summary>   
            Gets or sets a value indicating how a DEL  
            character is handled for Wyse terminal emulation only.
            </summary>  
            <remarks> 
            When this property is true, a DEL character is
            interpreted as a destructive backspace.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReGISMoveMouse">
            <summary>   
            Gets or sets a value indicating what happens   
            to the ReGIS cursor when you move the Windows mouse to a location in the
            Reflection terminal window that is different from the position the host 
            has established. 
            </summary>  
            <remarks> 
            To disable this feature and enable the ability to "click   
            ahead," change the setting of ReGISMoveMouse to false.  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReGISRestoreTextColors">
            <summary>   
            Gets or sets a value indicating whether
            Reflection restores text colors after ReGIS graphics have been drawn.  
            </summary>  
            <remarks> 
            When this property is set to true, colors are temporarily saved by  
            Reflection when all three of the following events occur:
            <para>	Reflection is placed into ReGIS mode by a graphics application.</para> 
            <para>	The application changes your colors.</para>
            <para>	A ReGIS or sixel image is drawn on the screen.</para>
            <para></para>
            Text colors are restored when either the screen is cleared (with the sequence H, J, or 2J), or  
            the application exits ReGIS mode and the entire image scrolls off 
            the screen (for example, as the result of a series of  characters). 
            <para>This behavior differs from an actual terminal, where your original colors   
            are never restored when changed by a graphics application.  
            If colors were changed in ReGIS but no graphics were drawn, the original
            colors are not restored. This preserves the intent of some text 
            applications that use ReGIS to change screen colors.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ScreenTopRow">
            <summary>   
            Gets the row number of the top row of the screen (in host-addressable
            coordinates). 
            </summary>  
            <remarks>
            The ScreenTopRow value is always zero unless Reflection is 
            emulating an HP terminal.   
            </remarks>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.SavePageOnClear">
            <summary>   
            Gets or sets a value indicating whether onscreen data is saved in display memory when the host clears the display. 
            </summary>  
            <remarks>
            Applications on the host often send escape sequences to clear the screen
            in whole or in part. When the screen is cleared, the data that was  
            displayed is lost. When this property is set to true and such an escape 
            sequence is received, the current display is cleared from view and saved
            in display memory, and the cursor is positioned at the top of the screen.   
            </remarks> 
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ShowControlCharacters">
            <summary>   
            When this property is set to true, Reflection displays control characters   
            but does not execute the functions these characters would otherwise perform.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.SlashZeros">
            <summary>   
            Gets or sets a value indicating whether
            zeros are displayed with a slash mark (Ø) in the terminal window.
            </summary>  
            <remarks>
            When this property is true, zeros are displayed with slash marks. 
            When it is false (the default), zeros are not displayed with slash marks.   
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.SmoothScroll">
            <summary>   
            Gets or sets a value indicating the scroll 
            speed setting. 
            </summary>  
            <remarks> 
            When this property is set to true, data from the host
            scrolls slowly and evenly. (Changing this value to true is equivalent  
            to changing the Scrolling option on the Screen tab of the Display Setup 
            dialog box to Smooth.)  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TransmitXonXoffEnabled">
            <summary>   
            When this property is set to false, the Ctrl+S keystroke executes the hold  
            screen keyboard function, and the Ctrl+Q keystroke cancels the hold screen; 
            neither keystroke actually transmits anything to the host. When 
            TransmitXonXoff is set to True, Ctrl+S and Ctrl+Q are transmitted, and the  
            hold screen function is not invoked.
            This property is automatically set to True when TerminalType is set to  
            rcANSIBBS or rcANSIUNIX; it is automatically set to False when the value
            of TerminalType is changed from rcANSIBBS or rcANSIUNIX to any other value. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVIAttributeSpaceEnabled">
            <summary>   
            Gets or sets a value indicating whether a  
            visual attribute should or should not occupy a character space in display   
            memory when Reflection is emulating a TVI terminal (TerminalType = rcTVI955).   
            When this property is False, visual attributes in display memory do not 
            occupy a character space. When it is True, a visual attribute will occupy   
            a character space in display memory.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.UseAnsiColor">
            <summary>   
            Gets or sets a value indicating whether the
            host can transmit ANSI color sequences to Reflection, thereby changing the  
            foreground and background colors for characters displayed in the terminal   
            window. This property applies to the display of ANSI color sequences in 
            Reflection; it does not apply to printing with Reflection.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.VerticalCoupling">
            <summary>   
            Gets or sets a value indicating whether the
            row in which the cursor is located remains in the terminal window   
            regardless of how the terminal window is resized or which screen font size  
            is used.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ClearDisplayOnWidthChangeEnabled">
            <summary>   
            Gets or sets a value indicating whether the
            screen display is cleared when the number of screen columns is changed. 
            The number of screen columns can be specified using either the  
            DisplayColumns property or the Screen tab in the Display Setup dialog box.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WordSelectionBoundaryExclusive">
            <summary>   
            Gets or sets a value indicating a string of
            characters that mark the beginning or end of a "word" when using a mouse
            to select words in the terminal window. These "exclusive" characters are
            not included in the word that is selected.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WordSelectionBoundaryInclusive">
            <summary>   
            Gets or sets a value indicating a string of
            characters that mark the beginning or end of a word when using a mouse to   
            select words in the terminal window. These "inclusive" characters are   
            included as part of the word that is selected.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseBlockMode">
            <summary>   
            Gets or sets a value indicating whether a  
            Wyse terminal is in Block Mode. The value of this property is not saved to  
            a settings file.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseLabelLines">
            <summary>   
            Gets or sets a value indicating how many   
            label lines are visible. The terminal decides how many label lines are  
            visible by how many display rows are requested. Reflection allows you to
            always have two if you want. If only one label line is visible, pressing
            the SHIFT key will display the second line. This property is valid only 
            during Wyse terminal emulation. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseProtectMode">
            <summary>   
            Gets or sets a value indicating whether the
            terminal is in Protect Mode. In Protect Mode, the cursor is not allowed to  
            move into areas of the screen that are write-protected. Cursor movement 
            keys and the tab and backtab keys move from one unprotected area to the 
            next unprotected area. This property is valid only during Wyse terminal 
            emulation. The value of this property is not saved to a settings file.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmEnterKey">
            <summary>   
            Gets or sets a value indicating how the
            Enter key behaves during IBM 3151 terminal sessions 
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmInsertion">
            <summary>   
            Gets or sets a value indicating the behavior   
            of the Insert Key during 3151 terminal sessions (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmReceivedCR">
            <summary>   
            Gets or sets a value indicating how a  
            received carriage return is interpreted during IBM 3151 terminal
            sessions (TerminalType = rcIBM3151).
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmReceivedLF">
            <summary>   
            Gets or sets a value indicating how a received 
            line feed is interpreted during IBM 3151 terminal sessions  
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmReturnKey">
            <summary>   
            Gets or sets a value indicating the behavior   
            of the Return key during IBM 3151 terminal sessions 
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmSendKey">
            <summary>   
            Gets or sets a value indicating how the Send   
            key behaves during IBM 3151 terminal sessions (TerminalType = rcIBM3151).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmTabKey">
            <summary>   
            Gets or sets a value indicating how the Tab
            key behaves during IBM 3151 terminal sessions (TerminalType = rcIBM3151).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.IbmTurnAroundChar">
            <summary>   
            Gets or sets a value indicating defines the
            LineTurnAround (LTA) character for IBM 3151 terminal sessions   
            (TerminalType = rcIBM3151). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ImageDither">
            <summary>   
            Gets or sets a value indicating what happens   
            when a 256-color image is pasted into the Reflection terminal window from   
            the Clipboard. Because Reflection for ReGIS Graphics emulates a 16-color
            terminal, Reflection uses an algorithm to determine exactly how colors  
            should be mapped. Try all three values to see which works best for a
            particular image.   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.JumpScrollSpeed">
            <summary>   
            Gets or sets a value indicating how
            Reflection manages data entering display memory. Setting JumpScrollSpeed
            to rcScrollBy1 refreshes the screen every time a line enters display
            memory. Higher numerical values (rcScrollBy2, rcScrollBy4, and so on, up
            to rcScrollBy128) refresh the screen after the specified number of lines
            have entered display memory—assuming data is entering display memory too
            fast for the display to keep up.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseReceivedCR">
            <summary>   
            Gets or sets a value indicating how a  
            received carriage return (CR) is interpreted. This property is valid only   
            during Wyse terminal emulation. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.ScrollOptimization">
            <summary>   
            Gets or sets a value indicating when   
            Reflection uses an off-screen bitmap to speed up scrolling. With most EGA   
            and VGA video adapters, it's usually more efficient to use this off-screen  
            bitmap, but with video adapters that support higher resolutions and more
            colors, it may be more efficient not to use the bitmap. When this property  
            is set to rcAuto, Reflection automatically adjusts to either use or not 
            use the off-screen bitmap, depending on the capabilities of the video   
            adapter.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TektronixDefaultFontSize">
            <summary>   
            Gets or sets a value indicating the default
            font size for Tektronix emulation.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVIAttributeBaseMode">
            <summary>   
            Gets or sets a value indicating how visual 
            attributes are applied when Reflection is emulating a TVI terminal  
            (TerminalType = rcTVI955).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVIBottomStatusLine">
            <summary>   
            Gets or sets a value indicating usage and  
            display of the bottom status line when Reflection is emulating a TVI
            terminal (TerminalType = rcTVI955). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVICompatibility">
            <summary>   
            Gets or sets a value indicating which TVI  
            emulation type Reflection uses when TerminalType is set to rcTVI955.
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVIDownKeySends">
            <summary>   
            Gets or sets a value indicating the action 
            of the Down key when Reflection is emulating a TVI terminal 
            (TerminalType = rcTVI955).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVIFunctionKeySet">
            <summary>   
            Gets or sets a value indicating how the top
            and bottom status line appear in Reflection's terminal window when  
            Reflection is emulating a TVI terminal (TerminalType = rcTVI955).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVIStatusLineAttribute">
            <summary>   
            Gets or sets a value indicating how the top
            and bottom status line appear in Reflection's terminal window when  
            Reflection is emulating a TVI terminal (TerminalType = rcTVI955).   
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.TVITopStatusLine">
            <summary>   
            Gets or sets a value indicating usage and  
            display of the top status line when Reflection is emulating a TVI terminal  
            (TerminalType = rcTVI955).  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.VTBackspaceSends">
            <summary>   
            Gets or sets a value indicating what is
            transmitted to the host when the user press the Backspace key. On the VT
            terminal keyboard the backarrow key is configurable: it can send either a   
            delete (ASCII 127) or a backspace (ASCII 8) character. In Reflection, use   
            this property to configure Backspace in the same manner.
            This property affects Reflection for HP only in VT emulation mode.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.VTCursorKey">
            <summary>   
            Gets or sets a value indicating whether the
            cursor keys are under host control. 
            This property is usually controlled by the host. If you find that your  
            arrow keys aren't working properly, it may mean that this option was
            incorrectly left set to rcApplicationMode when a host program terminated
            abnormally. 
            This property affects Reflection for HP only in VT emulation mode.  
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseAttribute">
            <summary>   
            Gets or sets a value indicating the Wyse   
            terminal display attribute mode (for Wyse   
            terminal emulation only). 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseBlockTerminator">
            <summary>   
            Gets or sets a value indicating the
            end-of-transmission delimiter for block sends. 
            </summary>  
            <remarks>
            This is typically set by 
            the host application. This property is valid only for Wyse terminal  
            emulations.  
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseEnterKey">
            <summary>   
            Gets or sets a value indicating what is
            sent to the host when the ENTER key is pressed. 
            </summary>  
            <remarks>
            This property is valid  
            only for Wyse terminal emulations.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseReturnKey">
            <summary>   
            Gets or sets a value indicating what is sent   
            to the host when the RETURN key is pressed. 
            </summary>  
            <remarks>
            This property is valid only 
            for Wyse terminal emulations. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.WyseStatusLineDisplay">
            <summary>   
            Gets or sets a value indicating whether the
            Wyse status line at the top of the screen is set to Off, Standard, or Edit. 
            </summary>  
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Screen.RetainDisplayFormat">
            <summary>
            Gets or sets a value indicating whether to retain Reflection’s autowrap formatting so that copied text is pasted 
            in the same way as displayed in the Reflection terminal. When set to false, Reflection’s Autowrap formatting 
            is removed from copied text.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SendControlKey(Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode)">
            <summary>
            Sends a host control key to host.
            </summary>
            <param name="keycode">The control key to send.</param>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SendControlKeySync(Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode)">
            <summary>
            Sends a host control key to host. 
            </summary>
            <remarks>
            The method does not return until the screen has settled
            for the time duration measured by the ScreenSettleTime property.
            </remarks>
            <param name="keycode"></param>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SendKeys(System.String)">
            <summary>
            Sends a text string to the host.
            </summary>
            <param name="text">The text string to send.</param>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SendKeys(System.String,Attachmate.Reflection.Emulation.OpenSystems.SendKeysOption)">
            <summary>
            Sends a text string to the host.
            </summary>
            <param name="text">The text string to send.</param>
            <param name="option">Text string interpretation options.</param>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ClearSelection">
            <summary>
            Clears the current selection. Does not apply to VT terminal emulations.
            </summary>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ClearScreen">
            <summary>
            Clears the current screen in display memory.
            </summary>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ClearDisplayMemory">
            <summary>
            Clears all display memory including the currently displayed screen.
            </summary>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.Copy">
            <summary>
            Copies ASCII text data to the Clipboard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.Copy(Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption)">
            <summary>
            Copies data to the Clipboard.
            </summary>
            <param name="source">Specifies what should be copied to the Clipboard.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.Copy(Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption,Attachmate.Reflection.Emulation.OpenSystems.CopyFormatOption)">
            <summary>
            Copies data to the clipboard in the specified format.
            </summary>
            <param name="source">Specifies what should be copied to the Clipboard.</param>
            <param name="format">Specifies the format in which data is copied.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.CopyToBuffer(System.Int32)">
            <summary>
            Copies selected text to one of 4 clipboard buffers.
            If an invalid bufferNum value is specified, the request is ignored.
            </summary>
            <param name="bufferNum">int value 1 through 4 indicating the clipboard buffer to which data is copied.</param> 
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.CopyAppend">
            <summary>
            Appends selected text to the end of the Clipboard.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.CopyAppend(Attachmate.Reflection.Emulation.OpenSystems.CopySourceOption)">
            <summary>
            Appends selected text to the end of the Clipboard.
            </summary>
            <param name="source">Specifies what should be appended to the Clipboard.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayText(System.String)">
            <summary>
            Displays a string in the terminal window as though it was received from the host.
            </summary>
            <param name="text">The string to display.</param>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayText(System.String,Attachmate.Reflection.Emulation.OpenSystems.DisplayTextOption)">
            <summary>
            Displays a string in the terminal window as though it was received from the host.
            </summary>
            <param name="text">The string to display.</param>
            <param name="option">Text display options.</param>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.DisplayFile(System.String)">
            <summary>
            Displays the specified local file on the terminal screen.
            </summary>
            <param name="fileName">The file to display.</param>
            <returns>ReturnCode that indicates success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.GetText(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the text from the specified location. 
            </summary>
            <remarks> 
            The length argument specifies the number of screen bytes to get. 
            In a single-byte character set (SBCS), 
            the number of screen bytes is the same as that of the ScreenCharacter objects.
            In a double-byte character set (DBCS), the two numbers can be different. 
            If the last byte is only half of a DBCS character, the last byte is not returned.
            </remarks>
            <param name="startRow">The starting row position.</param>
            <param name="startColumn">The starting column position.</param>
            <param name="length">The number of text characters to retrieve.</param>
            <returns>The requested string.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values: (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.GetText(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieves text from the specified screen region. Text from the "wrapped" region is returned.
            </summary>
            <param name="startRow">The starting row position.</param>
            <param name="startColumn">The starting column position.</param>
            <param name="endRow">The ending row position.</param>
            <param name="endColumn">The ending column position.</param>
            <returns>The screen text from the specified region</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.GetText(System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.RegionOption,Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption)">
            <summary>
            Retrieves text from the specified screen region.
            </summary>
            <param name="startRow"> The starting row position.</param>
            <param name="startColumn">The starting column position.</param>
            <param name="endRow">The ending row position.</param>
            <param name="endColumn">The ending column position.</param>
            <param name="regionOption">How the region is to be interpreted.</param>
            <param name="translationOption">How or whether screen data is translated.</param>
            <returns>The screen text from the specified region</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.LockInput">
            <summary>
            Locks the screen and prevents input from the keyboard. 
            </summary>
            <remarks> 
            Other means of input (such as macros
            and the application programming interface) are still available.
            To release the lock, use UnlockInput().
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.UnlockInput">
            <summary>
            Unlocks the screen. See the LockInput() method for more information.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.Paste">
            <summary>
            Copies data from the Clipboard to the current cursor location.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.PasteFromBuffer(System.Int32)">
            <summary>
            Pastes data from a specified clipboard buffer, if the specified buffer contains data.
            Ignored if an invalid bufferNum value is specified, or if the specified clipboard buffer does not 
            contain data.
            </summary>
            <param name="bufferNum">int value 1 through 4 indicating the clipboard buffer to which data is copied.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadChars(System.Int32)">
            <summary>
            Reads a specified number of characters from the host.
            </summary>
            <param name="count">The number of characters to read. If zero is specified, an empty string is returned.</param>
            <returns>A string that contains the requested number of characters or all of the characters received prior to a timeout.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadChars(System.Int32,System.Int32)">
            <summary>
            Reads a specified number of characters from the host.
            </summary>
            <param name="count">The number of characters to read.  If zero is specified, an empty string is returned.</param>
            <param name="timeout">The time (in seconds) to wait for the specified number of characters.</param>
            <returns>A string that contains the requested number of characters or all of the characters received prior to a timeout.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadChars(System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ReadOption)">
            <summary>
            Reads a specified number of characters from the host.
            </summary>
            <param name="count">The number of characters to read.  If zero is specified, an empty string is returned.</param>
            <param name="timeout">The time (in seconds) to wait for the specified number of characters.</param>
            <param name="option">Additional read options.</param>
            <returns>A string that contains the requested number of characters or all of the characters received prior to a timeout.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadLine">
            <summary>
            Reads data from the host until a line-feed character is encountered.
            </summary>
            <returns>Line of data read from the host (excluding carriage return and line-feed characters).</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadLine(System.Int32)">
            <summary>
            Reads data from the host until a line-feed character is encountered.
            </summary>
            <param name="timeout">The time (in seconds) to wait for a line-feed character. The range of valid values is 0 through 99.</param>
            <returns>Line of data read from the host (excluding carriage return and line-feed characters).</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadLine(System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ReadOption,System.Boolean@)">
            <summary>
            Reads data from the host until a line-feed character is encountered.
            </summary>
            <param name="timeout">The time (in seconds) to wait for a line-feed character. The range of valid values is 0 through 99.</param>
            <param name="option">Additional read options.</param>
            <param name="sawEndOfLine">Returns true if a line-feed character was received, otherwise false.</param>
            <returns>Line of data read from the host (excluding carriage return and line-feed characters).</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadUntil(System.String)">
            <summary>
            Read data from the host until one of the specified terminator characters is received.  The terminator
            character is not included in the returned string.
            </summary>
            <param name="terminatorChars">Specifies one or more terminator characters.  Any one of these characters
            can terminate the read operation.</param>
            <returns>The string of data that was read from the host.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadUntil(System.String,System.Int32)">
            <summary>
            Read data from the host until one of the specified terminator characters is received.  The terminator
            character is not included in the returned string.
            </summary>
            <param name="terminatorChars">Specifies one or more terminator characters.  Any one of these characters
            can terminate the read operation.</param>
            <param name="timeout">The time (in seconds) to wait for a terminator character. The range of valid values is 0 through 99.</param>
            <returns>The string of data that was read from the host.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ReadUntil(System.String,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ReadOption,System.String@)">
            <summary>
            Read data from the host until one of the specified terminator characters is received.  The terminator
            character is not included in the returned string.
            </summary>
            <param name="terminatorChars">Specifies one or more terminator characters.  Any one of these characters
            can terminate the read operation.</param>
            <param name="timeout">The time (in seconds) to wait for terminator character. The range of valid values is 0 through 99.</param>
            <param name="option">Additional read options.</param>
            <param name="whichEndChar">The specific terminator character that terminated the read.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SaveDisplayMemory(System.String)">
            <summary>
            Writes the entire display memory contents to a file.
            </summary>
            <param name="fileName">The file to which display memory is written.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SaveDisplayMemory(System.String,Attachmate.Reflection.Emulation.OpenSystems.DisplayMemorySelectionOption,Attachmate.Reflection.Emulation.OpenSystems.TextTranslationOption,Attachmate.Reflection.Emulation.OpenSystems.SaveFileOption)">
            <summary>
            Writes the specified portion of display memory to a file.
            </summary>
            <param name="fileName">The file to which display memory is written.</param>
            <param name="select">The portion of display memory to be written.</param>
            <param name="translation">Specify options for translating display memory data.</param>
            <param name="fileexists">For the scenario when the specified file already exists.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SearchText(System.String,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions)">
            <summary>
            Searches for the specified text, starting from the specified screen location.
            </summary>
            <param name="text">The text string to search for.</param>
            <param name="startRow">The starting row for the search. </param>
            <param name="startColumn">The starting column for the search. </param>
            <param name="findOption">Specifies the search direction.</param>
            <returns>The coordinate of the located text or null, if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SearchText(System.String,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions)">
            <summary>
            Searches for the specified text, starting from the specified screen location for "searchRange" byte positions.
            </summary>
            <param name="text">The text string to search for.</param>
            <param name="startRow">The starting row for the search. </param>
            <param name="startColumn">The starting column for the search. </param>
            <param name="searchRange">The number of character positions to search.</param>
            <param name="findOption">Specifies the search direction.</param>
            <returns>The coordinate of the located text or null, if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SearchText(System.String,System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions)">
            <summary>
            Searches for the specified text on the screen, from the specified starting location to the specified ending location.
            </summary>
            <param name="text">The text string to search for.</param>
            <param name="startRow">The starting row for the search. </param>
            <param name="startColumn">The starting column for the search. </param>
            <param name="endRow">The ending row for the search.</param>
            <param name="endColumn">The ending column for the search.</param>
            <param name="findOption">Specifies the search direction.</param>
            <returns>The coordinate of the located text or null, if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SearchText(System.String,System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.FindOptions,Attachmate.Reflection.Emulation.OpenSystems.TextComparisonOption)">
            <summary>
            Searches for the specified text on the screen, from the specified starting location to the specified ending location.
            </summary>
            <param name="text">The text string to search for.</param>
            <param name="startRow">The starting row for the search. </param>
            <param name="startColumn">The starting column for the search. </param>
            <param name="endRow">The ending row for the search.</param>
            <param name="endColumn">The ending column for the search.</param>
            <param name="findOption">Specifies the search direction.</param>
            <param name="textComparison">Specifies the role of letter case in the search.</param>
            <returns>The coordinate of the located text or null, if the text is not found.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SelectText(System.Int32,System.Int32,System.Int32,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.RegionOption)">
            <summary>
            Selects the specified display memory text.
            </summary>
            <param name="startRow">The beginning row of text selection. </param>
            <param name="startColumn">The beginning column of text selection. </param>
            <param name="endRow">The ending row of text selection.</param>
            <param name="endColumn">The ending column of text selection.</param>
            <param name="region">Wrapped or rectangular region.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SelectAll">
            <summary>
            Selects all of the text on the screen.
            </summary>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.SetSelectionStartPos(System.Int32,System.Int32)">
            <summary>
            Sets the starting coordinates for selecting text. 
            </summary>
            <param name="row">The row in which the selection begins.</param>
            <param name="column">The column in which the selection begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values: (1 to Rows) or (1 to Columns).
            </exception>                              
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ExtendSelection(System.Int32,System.Int32)">
            <summary>
            Selects all text in the terminal window between the specified starting position
            and the specified coordinates. Use the SetSelectionStartPos method to set
            the starting coordinates.
            </summary>
            <param name="row">The row in which the selection ends.</param>
            <param name="column">The column in which the selection ends.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values: (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.ExtendSelectionRect(System.Int32,System.Int32)">
            <summary>
            Selects all text in the terminal window in all rows between the specified starting and ending coordinates. 
            Use the SetSelectionStartPos method to set the starting coordinates.
            </summary>
            <param name="row">The row in which the selection ends.</param>
            <param name="column">The column in which the selection ends.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values: (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForControlKey(System.Int32,Attachmate.Reflection.Emulation.OpenSystems.ControlKeyCode,System.Boolean)">
            <summary>
            Waits for the specified control key press.
            </summary>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="keycode">Control key code.</param>
            <param name="continueProcess">The value that indicates whether the program continues to process other actions.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForHostSettle(System.Int32)">
            <summary>
            Waits for the host screen data to settle (that is, there is no incoming data for the specified settle time).
            </summary>
            <param name="settleTime">Settle time.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForHostSettle(System.Int32,System.Int32)">
            <summary>
            Waits for host screen data to settle (that is, there is no incoming data for the specified settle time).
            </summary>
            <remarks>
            The wait timeout value should be greater than settleTime.
            </remarks>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="settleTime">Settle time.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForHostSettle(System.Int32,System.Boolean)">
            <summary>
            Waits for host screen data to settle (that is, there is no incoming data for the specified settle time).
            </summary>
            <remarks>
            The wait timeout value should be greater than settleTime.  
            </remarks>
            <param name="settleTime">The settle time (in milliseconds).</param>
            <param name="enablekeyboard">Specifies whether the keyboard is enabled while the call executes.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForHostSettle(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Waits for host screen data to settle (that is, there is no incoming data for the specified settle time).
            </summary>
            <remarks>
            The wait timeout value should be greater than settleTime.  
            </remarks>
            <param name="settleTime">time value (milliseconds) to wait for the screen to settle.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="enablekeyboard">Specifies whether the keyboard is enabled while the call executes.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForIncomingData">
            <summary>
            Waits for any data to come from the host, during which time the keyboard is disabled.
            </summary>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForIncomingData(System.Int32)">
            <summary>
            Waits for any data to come from the host, during which time keystrokes are disabled.
            </summary>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForIncomingData(System.Int32,System.Boolean)">
            <summary>
            Waits for any data to come from the host.  
            </summary>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="enablekeyboard">Specifies whether the keyboard is enabled while the call executes.</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForString(System.String)">
            <summary>
            Waits for the specified text to be received from the host.
            </summary>
            <param name="text">The text to wait for.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForString(System.String,System.Int32)">
            <summary>
            Waits for the specified text to be received from the host.
            </summary>
            <param name="text">The text to wait for.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForString(System.String,System.Int32,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits for the specified text to be received from the host.
            </summary>
            <param name="text">The text to wait for.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="option">Wait options. Multiple options can be OR'ed together.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForStrings(System.String[])">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array that specifies one or more strings for which to wait.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForStrings(System.String[],System.Int32)">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array that specifies one or more strings for which to wait.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForStrings(System.String[],System.Int32,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array that specifies one or more strings for which to wait.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="option">Wait options.  Multiple options can be OR'ed together.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitForStrings(System.String[],System.Int32,System.Int32@,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits for one of the specified text strings to be received from the host.
            </summary>
            <param name="text">Array specifying one or more strings for which to wait.</param>
            <param name="timeout">wait timeout value (milliseconds). Value of 0 indicates wait indefinitely.</param>
            <param name="stringidx">1-based index indicating string in text array that satisfied condition. (For the first string in the array, stringidx=1.)</param>
            <param name="option">Wait options.  Multiple options can be OR'ed together.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitUntil(System.DateTime)">
            <summary>
            Waits until the specified time.
            </summary>
            <param name="time">Time to wait until.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.WaitUntil(System.DateTime,Attachmate.Reflection.Emulation.OpenSystems.WaitForOption)">
            <summary>
            Waits until the specified time.
            </summary>
            <param name="time">Time to wait until.</param>
            <param name="option">Valid options for this method are AllowKeystrokes, NoDisplay, and None.</param>
            <returns>ReturnCode that indicates the success or failure status.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.Wait(System.Int32)">
            <summary>
            Wait for the specified duration.
            </summary>
            <param name="waitTime">Wait time (in milliseconds).</param>
            <returns></returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.GetCharacterAttributes(System.Int32,System.Int32)">
            <summary>
            Retrieves character attributes for the specified position.
            </summary>
            <param name="row">The screen row position.</param>
            <param name="column">The screen column position.</param>
            <returns>Attribute information for the specified position. May specify multiple attributes.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.GetCharacter(System.Int32,System.Int32)">
            <summary>
            Gets the ScreenCharacter at the specified location.
            </summary>
            <param name="row">The screen row position.</param>
            <param name="column">The screen column position.</param>
            <returns>ScreenCharacter for the specified position.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values: (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Screen.GetCharacters(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets ScreenCharacter objects from the specified location, each representing one character at a screen location. 
            </summary>
            <remarks> 
            The length argument specifies the number of screen bytes to get. In single-byte character sets (SBCS), the number of screen bytes 
            is the same as that of ScreenCharacter objects.
            In double-byte character sets (DBCS), the two numbers can be different. 
            If the last byte is only half of a DBCS character, the last byte is not returned.
            </remarks>
            <param name="row">The screen row position.</param>
            <param name="column">The screen column position.</param>
            <param name="length">The number of characters to obtain.</param>
            <returns>Array of ScreenCharacter for the specified position.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            This exception is thrown if the row or column parameters are outside the range of valid values: (1 to Rows) or (1 to Columns).
            </exception>                
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Screen.ControlKeySending">
            <summary>
            This event is triggered before Reflection transmits a terminal keystroke to the host.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Screen.ControlKeySent">
            <summary>
            This event is triggered immediately after Reflection transmits a terminal keystroke to the host.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Screen.KeysSending">
            <summary>
            This event is triggered before Reflection transmits a character or a string of characters to the host.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Screen.KeysSent">
            <summary>
            This event is triggered immediately after Reflection transmits a character, or string of characters, to the host.  
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Screen.KeyboardUnlocked">
            <summary>
            This event is triggered when the keyboard becomes unlocked or enabled (either by the host or by Reflection).
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Screen.KeyboardLocked">
            <summary>
            This event is triggered when the keyboard becomes locked (either by the host or by Reflection).
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Screen.MouseClick">
            <summary>
            This event occurs when a session window is clicked by the mouse. 
            </summary>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.Terminal">
            <summary>
            The Terminal is an Open Systems host emulation session object.
            </summary>
            <remarks>
            The control Guid  is {BE835A80-CAB2-40d2-AFC0-6848E486BF58}.
            These Guids are used as the input parameters for CreateControl( Guid controlType)
            in the Application object. 
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the Terminal class.
            </summary>
            <param name="terminalService">The server side terminal instance</param>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TerminalUserControlContext">
            <summary>
            This is an internal property used to determine the context of this terminal object usage. This is set to true
            if this terminal object is being used in a Terminal User Control context.
            </summary>
            <remarks>
            The default is false.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.AllowJIS">
            <summary>
            Gets or sets a value indicating whether JIS escape sequences are allowed when other host character sets are selected.
            </summary>
            <remarks>
            When this property is false, 
            JIS characters will be displayed only when a JIS mode (JIS 1978, JIS 1983, JIS 1990, or JIS Katakana) is selected. When it is true, JIS escape 
            sequences are allowed when other Japanese character sets (such as EUC or SJIS) are selected.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.AnswerBack">
            <summary>
            Gets or sets a string that is sent to the host when Reflection receives an Enq character from the host. 
            </summary>
            <remarks>
            When EnqAck is set to true, Reflection sends an Ack character in response to an Enq from the host, 
            and the value of AnswerBack is ignored. 
            <para>This property is relevant only when the EnqAck property is set to false.</para> 
            </remarks>
            <value>
            The default value is "". 
            The string cannot be more than 30 characters long.
            </value>
            <exception cref="T:System.ArgumentException">
            Thrown if the set parameter is too long for the current terminal type.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.AutoAnswerback">
            <summary>
            Gets or sets a value indicating whether the answerback message (set with the AnswerBack property) is automatically sent to the host after a communications line connection. 
            </summary>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.AutoConnect">
            <summary>
            Gets or sets a value indicating whether to attempt to establish a host connection 
            as soon as the current settings file is loaded. 
            </summary>
            <remarks>
            You must save the current settings file after changing the value of this property. 
            This property causes an error when Reflection is connected to a host. 
            Use the IsConnected property to determine if a connection already exists.
            </remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.BellEnabled">
            <summary>
            Gets or sets a value indicating whether a bell sounds when the ASCII bell character (decimal 7) 
            is transmitted from the keyboard or received from the host.
            </summary>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.BlockTerminator">
            <summary>
            Gets or sets a block terminator character to be transmitted at the end of each block data transmission.
            </summary>
            <value>
            The default value for UNIX and OpenVMS and ReGIS Graphics is Chr$(rcSUB).
            Only ANSI characters with values from 0 to 31 are valid for this property. Use a characters to designate one of these characters.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CitrixIPAddress">
            <summary>
            Gets the IP address for a connection to a Citrix host.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CitrixPCName">
            <summary>
            Gets the PC name returned by a Citrix host.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CitrixUserName">
            <summary>
            Gets the Username value for a Citrix connection type.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ClearDisplayOnDisconnect">
            <summary>
            Gets or sets a value indicating whether Reflection clears the display memory when you disconnect from the host. 
            </summary>
            <remarks>
            When this property is true, 
            Reflection clears the screen on disconnect from the host. 
            When it is false, data the display memory is retained. 
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CodePage">
            <summary>
            Gets the current DOS code page. 
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.IsConnected">
            <summary>
            Gets a value indicating whether Reflection is connected. 
            </summary>
            <remarks>
            This property is true if a host connection exists or if a port is open.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionError">
            <summary>
            Gets the error number that describes the specific cause of the most recent general connection failure 
            (if the last returned error has the value ErrConnectionError). 
            </summary>
            <remarks> 
            Use ConnectionErrorMessage to retrieve the error message.  If no connection failure occurred, this property returns zero. 
            <para>If you use ConnectionError for errors other than ErrConnectionError, you will retrieve information that is not 
            valid for the current error condition.</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionErrorMessage">
            <summary>
            Gets the text string that describes the specific cause of the most recent general connection failure 
            (if the last returned error has the value ErrConnectionError). 
            </summary>
            <remarks> 
            If no connection failure occurred, this property returns an empty string. The connection error message strings are 
            stored internally in the connection library module of Reflection and cannot be changed. 
            <para>If you use ConnectionErrorMessage for errors other than ErrConnectionError, you will retrieve information 
            that is not valid for the current error condition.
            </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionID">
            <summary>
            Gets the integer value that uniquely identifies the current connection. 
            </summary>
            <remarks>
            This value can be used with the ResumeConnection method 
            to resume a suspended connection. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionSettings">
            <summary>
            Gets the IConnectionSettings object. 
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionType">
            <summary>
            Gets or sets the connection type.
            </summary>
            <remarks>
            When you use this property to set a connection type, all connection settings for that type (that is, all settings that you can 
            configure with the ConnectionSettings property) are reset to their default values. 
            <para></para>
            <para>If you're writing a procedure that manipulates 
            the current data connection settings, you may want to determine the current connection type with this property before making changes 
            to the connection settings. After determining the current connection type, use the ConnectionSetting method to retrieve the value 
            of a single connection keyword token, or the ConnectionSettings property to retrieve or set any or all of the connection keyword tokens.</para>
            <para></para>
            <para>If you're writing a procedure that manipulates the current data connection settings, you may want to determine the current connection type 
            with this property before making changes to the connection settings. After determining the current connection type, use the ConnectionSetting
            method to retrieve the value of a single connection keyword token, or the ConnectionSettings property to retrieve or set any or all of the connection 
            keyword tokens.</para>
            <para>If a connection is already active and you try to set the connection type, a runtime error results. 
            You should either trap the error using an error-handing routine, or use the IsConnected property to first determine 
            if a connection is active.</para>
            </remarks>
            <value>
            The default value is "BEST-NETWORK".
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DataStreamTranslation">
            <summary>
            Gets or sets a value indicating whether Reflection translates characters from the host to the PC, and vice versa, 
            using the current translation table. 
            </summary>
            <remarks>
            You can specify the translation table using a Reflection translation table editor. 
            For more information, see the Reflection Help. 
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DeviceResponse">
            <summary>
            Gets or sets how Reflection responds to a primary device attribute request from the host 
            (usually when logging on). 
            </summary>
            <remarks>
            This value is independent of the value for TerminalType. 
            For a list of the actual replies that are sent for each value, 
            see the Reflection Terminal Reference PDF file.
            </remarks>
            <value>
            For UNIX and OpenVMS and ReGIS Graphics emulations, the default depends on whether you have selected UNIX or 
            OpenVMS defaults. See HostForDefaultSettings for details.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.IsDataCarrierHigh">
            <summary>
            Gets a value indicating whether the data carrier signal is high.
             </summary>
            <remarks> 
            Relevant only for serial connections.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DefaultPrinter">
            <summary>
            Gets or sets the default printer for printer output. 
            </summary>
            <remarks>
            Assigning a default printer with this property 
            has no effect on the default printer used by other Windows applications.
            <para></para>
            <para>The default printer string consists of the printer name, driver, and port as shown in these examples:</para>>
            <para></para>
            <para>DefaultPrinter = "HP LaserJet 4,WINSPOOL,\\Mynet\Myprint"</para>
            <para>DefaultPrinter = "Epson AP-4000,WINSPOOL,LPT1:"</para>
            <para></para>
            <para> To force Reflection to always use the default printer specified in the Windows Control Panel, 
            set this property to an empty string. </para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ElfAtochemEmulation">
            <summary>
            Gets or sets a value indicating whether Elf Autochem terminal emulation is enabled. 
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.EnquireAcknowledge">
            <summary>
            Gets or sets a value indicating whether Reflection uses a form of handshaking called Enquire Acknowledge.
            </summary>
            <remarks>
            Some host computers use Enquire Acknowledge handshaking to prevent the terminal (Reflection) from falling too far 
            behind the host system and losing data. 
            <para> When the host system has a block of more than 80 characters to send, it sends 80 characters 
            and an ASCII Enq character, and then stops transmitting. When Reflection has processed all 
            of the characters preceding the Enquire, it sends an ASCII Acknowledge character, which tells
            the host that Reflection has caught up and is ready for more data. </para>
            </remarks>
            <value>
            The default value is false for UNIX and OpenVMS and ReGIS Graphics emulations. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.EnterKeyConnects">
            <summary>
            Gets or sets how Reflection responds if you press the ENTER key when you are not connected to a host.
            </summary>
            <remarks>
            When this property is true, 
            pressing the ENTER key connects you to a host. 
            When this setting is false, pressing the ENTER key has no effect.
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.FileTransfer">
            <summary>
            Gets the FileTransfer object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ForceC1Controls">
            <summary>
            Gets or sets a value indicating whether Reflection interprets characters from certain host character sets as control codes.
            </summary>
            <remarks>
            This property applies only when emulating a VT or ANSI terminal 
            (that is, it does not apply to Tektronix emulation).
            <para>Certain host character sets (such as PC-English or Chinese BIG-5) contain characters whose code values overlap those in the 
            C1 control character region (characters 128 through159). This property determines whether Reflection interprets character codes 
            in this overlapping region or displays them as host characters.</para>
            <para></para>
            <para>When this property is set to true, Reflection interpret character codes between 128 and 159 as C1 control codes. 
            This allows VAX applications like TPU to work properly; however, characters defined in this range are no longer displayable.</para>
            <para>When this property is set to false, Reflection interprets C1 character codes only for host character sets that support it 
            (that is, host character sets that do not define displayable characters in the C1 control range).</para>
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GraphicsDestination">
            <summary>
            Gets or sets the destination of graphics when you print using the ReGIS hard copy command.
            </summary>
            <remarks>
            When you print a graphic using the ReGIS hard copy command, 
            the graphic is sent either to the host or to a digital printer. 
            When the graphic is sent to the host, it is sent as a stream of sixel data. 
            The host must be ready to accept the data; for example, 
            by collecting it in a file.
            <para>When the graphic is sent to a digital (host) printer, it is printed as a bitmap image. If BypassPrinterDriver is set to true, a sixel data 
            stream is sent to the printer (this assumes you are printing to a digital printer).</para>
            </remarks>
            <value>
            The default value is ToPrinter. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GraphicsFixScreen">
            <summary>
            Gets or sets a value indicating whether the onscreen graphic is periodically updated from the offscreen graphic. 
            </summary>
            <remarks>
            This value is appropriate for 8514 and other coprocessor-based video cards, 
            as a way to keep offscreen and onscreen graphics
            synchronized. For other adapters, image synchronization is not an 
            issue, and setting this property to false speeds up drawing. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GraphicsLevel">
            <summary>
            Use this property to match Reflection to the capabilities of a digital printer with regard to
            aspect ratio, horizontal grid size, background printing, and color printing.
            </summary>
            <remarks>
            This property is relevant only for sending sixel data to the host (that is, when the GraphicsDestination property is set to ToHost) or when
            GraphicsDestination is set to ToPrinter and BypassPrinterDriver is set to true.
            This property also affects saving display sixels in the Save Display As dialog box.
            </remarks>
            <value>
            The default value is Level2.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GraphicsOutputCursor">
            <summary>
            Gets or sets a value indicating whether the graphics output cursor is displayed. 
            </summary>
            <remarks>
            ReGIS displays two types of graphics cursors: an output cursor and an input cursor. 
             The output cursor appears when ReGIS waits for commands from the host 
            (or from the ReGIS command line).
            Displaying the graphics output cursor can also be controlled by the ReGIS screen command S(C[n]). 
            <para>This ReGIS command includes an option that controls the style of the graphics output cursor.</para>
            <para></para>
            <para>The input cursor appears when ReGIS waits for graphics input, such as a cursor position report. 
            You can position the input cursor with the mouse or the arrow keys. 
            This property has no effect on the graphics input cursor.
            </para>
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GraphicsPrintMode">
            <summary>
            Gets or sets how graphics images are printed.
            </summary>
            <value>
            The default value is Compress.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GraphicsScrolling">
            <summary>
            Gets or sets a value indicating whether or not sixel images are scrolled.
            </summary>
            <remarks>
            A sixel is a vertical column of six pixels used to display graphic images. When this property is set 
            to true, the sixel image begins at the current text position and scrolls the display when the
            image reaches the bottom margin of the display (the image may also scroll off the 
            top of the display if it doesn't fit). A graphics new line character is sent immediately after the 
            sixel dump, and the text cursor is set at the same position as the sixel cursor when you exit sixel mode. 
            <para>
            When this property is set to false, the sixel image begins at the top left of the display. 
            When the image reaches the bottom margin, the display does not scroll, and additional sixel
            commands are ignored. Upon exiting sixel mode, the text cursor is set at the same position as 
            when sixel mode was entered.</para>
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.IsGraphicsSupported">
            <summary>
            Gets a value indicating whether graphics are supported by the terminal.
            </summary>
            <remarks>
            Returns true if this terminal type supports rendering graphic images and false if graphics images are not supported.
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GraphicsTerminalType">
            <summary>
            Gets or sets which terminal is emulated, and how many shades or colors are available in ReGIS.
            </summary>
            <value>
            The default value is VT340. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HorizontalCoupling">
            <summary>
            Gets or sets a value indicating whether the column in which the cursor is located remains in the terminal window 
            regardless of how the terminal window is resized, or which screen font size is used.
            </summary>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HostCharacterSet">
            <summary>
            Gets or sets the host character set Reflection uses when transmitting and receiving characters.
            </summary>
            <remarks>
            This property lets you assign a supplemental character set as the default user-preferred 
            supplemental (UPS) set. The UPS set can also be specified with the Select Character Set (SCS) sequence. 
            The UPS set assigned by this property is loaded as the default when a soft reset is performed 
            (for example, with the ResetTerminal method) or when the DECSTR sequence is invoked. 
            </remarks>
            <value>
            The Multinational character set (MCS) combines the ASCII and Digital Supplemental Graphic 
            character sets.
            <para>The ISO Latin Alphabet Number 1 set combines the ASCII and ISO Latin-1 supplemental sets. </para>
            <para>Both supplemental sets are very similar, consisting of symbols and characters for English and 
            many other western European languages.</para>
            <para> The default for UNIX and OpenVMS and ReGIS Graphics is DECSupplemental. </para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.AllowColorTableChanges">
            <summary>
            Gets or sets a value indicating whether Reflection responds to host commands that are related to color table changes.
            </summary>
            <remarks>
            When this property is set to true, the terminal color map can be set using either the ReGIS S(M) 
            command or the restore color table (DECRSTS) control function. When this is set to false, 
            Reflection does not change the color table in response to these commands.
            <para></para>
            Reflection always allows the color table to be changed as a result of displaying a sixel, 
            regardless of the value of AllowColorTableChanges.
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HostDescriptionFileName">
            <summary>
            Gets or sets the name and location of the host description file that is used by the GetHostElement 
            method.  
            </summary>
            <remarks>
            The host description file is an XML file that contains information about how hosts respond 
            to logon attempts.
            The value of this setting is saved in the Windows registry and affects all subsequent Reflection 
            sessions.
            </remarks>
            <value>
            The default value is "%CommonInstallFolder%\hosts.xml". 
            <list type="bullet"> 
            <listheader><term>Environment variables:</term></listheader>
            <item><term> %UseAppData%</term>
            <description>- Typically C:\Documents and Settings\username\Application Data.</description></item>
            <item><term>%ProductAbbreviation%</term>
            <description>- RHP, RRG, RUO, RSIT</description></item>
            <item><term>%InstallFolder%</term>
            <description>- Typically C:\Program Files\Micro Focus\Reflection.</description></item>
            <item><term>%CommonInstallFolder%</term>
            <description>- Typically C:\Program Files\Common Files\Micro Focus.</description></item>
            <item><term>%PersonalFolder%</term>
            <description>- Typically C:\Documents and Settings\username\My Documents.</description></item>
            <item><term>%UserProfile%</term>
            <description>- Typically C:\Documents and Settings\username. </description></item>
            <item><term>%CommonDocumentsFolder%</term>
            <description>- Typically C:\Documents and Settings\All Users\Documents. </description></item>
            <item><term>%ProgramFilesFolder%</term>
            <description>- Typically C:\Program Files.</description></item>
            <item><term>%ProgramFiles%</term>
            <description>- Synonym for %ProgramFilesFolder%.</description></item>
             <item><term>%UserName%</term>
            <description>- The Windows user name without the domain name.</description></item>
            </list>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HostsFile">
            <summary>
            Gets or sets the file path for the file that is used to populate the Host name/IP Address Drop-down
            list on the Create New VT Document dialog box.
            </summary>
            <remarks>
            The value of this property depends on your network software. Changing the value of this property
            in one instance of Reflection affects any instance of Reflection (version 6.0 or later) that you run.
            The file specified by the HostsFile property is expected to follow the following format:
            &lt;IPv4 or IPv6 address&gt; &lt;host name&gt;
            For Example:
            127.0.0.1 localhost
            :: localhost
            The IP address information is not relevant unless the specified host file also happens to be the Windows system hosts file.
            The host name information is used to populate the Host name/IP Address Drop-down list on the Create New VT Document dialog box.
            </remarks>
            <value>
            The default value is "". (When the default is set, the path to the local Windows Hosts file is used.)
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DefaultHostSettings">
            <summary>
            Gets or sets a value indicating whether Reflection uses default settings appropriate to a UNIX or OpenVMS host.
            </summary>
            <remarks>
            The value of this property is saved in the registry. 
            Changing this property affects all new instances of the current Reflection product.
            </remarks>
            <value>
            The initial value is determined during Setup.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HostStatusLine">
            <summary>
            Gets or sets the current host status line display.
            </summary>
            <remarks>
            The bottom line of the terminal window is reserved for the VT status,
            a one-line display that shows information about the current session. 
            Normally, the host software sets this option.
            </remarks>
            <value>
            The default value is NoStatusLine. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HostTriggerCharacter">
            <summary>
            Gets or sets the host trigger character value.  
            </summary>
            <remarks>
            Before changing this value, turn on display functions or display controls to verify the actual 
            host prompt character. 
            </remarks>
            <value>
            The default value for UNIX and OpenVMS and ReGIS Graphics emulations is a null, which can be represented as Chr$(rcNUL). 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.KeyboardMapper">
            <summary>
            Gets the KeyboardMapper object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ContextMenus">
            <summary>
            <c>Gets</c> the ContextMenus object.
            </summary>
            <example>
            <code>
            /// class Program
            {
               private IbmTerminal terminal;
               private IContextMenus contextMenus;
               
               public IbmTerminal Terminal
               {
                  set { terminal = value; }
               }
            
               public IContextMenus GetContextMenus()
               {
                  if(terminal != null)
                  { 
                     contextMenus = terminal.ContextMenus;
                     return contextMenus;
                  }
                  else
                     throw new Exception("No terminal exists.");       
               }
            }
            </code>
            </example>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UiControlActionMapper">
            <summary>Gets the object used to map actions to the user interface control and to retrieve the action sequence from the user interface control.
            <!--DXMETADATA end --></summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.MouseMapper">
            <summary>
            Gets the MouseMapper object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Macro">
            <summary>
            Gets the Macro object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.LocalEcho">
            <summary>
            Gets or sets a value indicating whether the local computer should "echo" typed characters directly to the screen.
            </summary>
            <remarks>
            If a host connection exists and both the Online property and LocalEcho are set to true,
            typed characters will appear on the screen twice; once when echoed from the local computer, 
            and a second time when echoed back from the host. 
            <para>
            Set LocalEcho to true only for communication with a host system that does not echo typed characters. </para>
            <para>
            When Reflection is in Local or Block mode, 
            characters are echoed locally even if LocalEcho is set to false.</para>
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.LogToSerialDevice">
            <summary>
            Gets or sets a value indicating whether data logged by the terminal is sent to the currently configured serial device. 
            </summary>
            <remarks>
            Set this property to true if you use a host application that requires two-way communication
            with a serial device, such as a printer or bar code reader.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.MacrographReportsEnabled">
            <summary>
            Gets or sets a value indicating whether macrograph reporting is enabled. 
            </summary>
            <remarks> 
            A macrograph is a way to define and store a set of ReGIS commands as a single
            character (that is, as a graphics macro). By default, ReGIS can report the contents
            of a specific macrograph. 
            <para>If, for security or other 
            reasons, you don't want to allow macrograph reporting, set this property to false.</para>
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.MappedNumLockPreservesNumLock">
            <summary>
            Gets or sets a value indicating how Reflection responds to a NUM LOCK key press on the PC after the key has been mapped
            to emulate the action of a terminal key. 
            </summary>
            <remarks>
            In default VT emulations, the NUM LOCK key is mapped to PF1; the Num Lock state has no 
            effect on the behavior of the numeric keypad or other keys.
            <para> When this property is true, pressing the NUM LOCK key sends the mapped keystroke to the host 
            and also preserves the current Num Lock state of the PC keyboard. This matches the behavior of all 
            Reflection sessions prior to version 9.0. </para>
            <para>When this property is false, pressing the NUM LOCK key sends the mapped keystroke to the host 
            and turns the PC Num Lock state on or off. (The Num Lock indicater light also turns on or 
            off each time you press the NUM LOCK key.)</para>
            <para>On Windows 2000 systems with non-USB keyboards, pressing the mapped NUM LOCK key repeatedly 
            may result in a locked keyboard. Changing this property to false fixes this problem. </para>
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.MouseShape">
            <summary>
            Returns or specifies the appearance of the mouse pointer in the terminal window.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.NationalReplacementSet">
            <summary>
            Gets or sets the set of character translations that occur between the local computer and the host in 7-bit mode.
            </summary>
            <remarks>
            This property affects how characters entered from the keyboard or from a local file are transmitted to the host, 
            and how characters sent from the host are written to local files, to the screen, or both. 
            <para>Translations are not performed unless the UseNRC property is set to true.</para>
            <para>For a chart that shows character replacements
            for various languages, see the Reflection Terminal Reference PDF file.</para> 
            </remarks>
            <value>
            The default is None.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.NRCEnabled">
            <summary>
            Gets or sets a value indicating whether the translations specified by the NationalReplacementSet property 
            should be performed. 
            </summary>
            <value>
            The default value is false. 
            The value of this property is not saved to a settings file.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnLine">
            <summary>
            Gets or sets a value indicating whether Reflection is in remote mode or local mode. 
            </summary>
            <remarks>
            In remote mode (that is, when the Online property is set to true), Reflection transmits each character typed at the keyboard 
            out the datacomm port. As characters are received back from the host they are displayed on the screen. 
            If there is no connection, characters are not echoed. 
            <para></para>
            In local mode (when Online is set to false), Reflection immediately displays what is typed on the screen, 
            without attempting to send it out the datacomm port. Data received from the host is discarded. 
            </remarks>
            <value>
            The default value is true. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.PreserveNRC">
            <summary>
            Gets or sets a value indicating whether Digital terminals reset national replacement mode when a soft reset occurs. 
            </summary>
            <remarks> 
            To preserve national replacement 
            mode, set this property to true.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ProcessDataComm">
            <summary>
            Gets or sets a value indicating whether Reflection should process incoming characters between calls to Reflection methods.
            </summary>
            <remarks>
            Do not use this property unless you are controlling Reflection from an external application using Automation.
            <para> If this property is set to false, Reflection only processes incoming datacomm characters during 
            an explicit call to a method that reads datacomm (such as ReadChars, ReadLine, or WaitForString). </para>
            <para> When this property is false, an external program has exclusive access to the incoming datastream, ensuring that no incoming characters 
            are lost. For example, if the controlling program logging on, it is important that Reflection does not process the incoming 
            data after a Transmit method but before the subsequent WaitForString method. So the controlling program must set ProcessDataComm
            to false to assure the logon works correctly. However, if the controlling program wants the user to interact directly with a host 
            application, it must set ProcessDataComm to true to allow that user interaction.</para>
            <para></para>
            <para>When this property is set to true (the default), Reflection processes incoming data 
            just as a terminal would.</para>
            </remarks>
            <value>
            The default value is true.
            <para> Regardless of the current value of ProcessDataComm, when Reflection runs a macro or script, data from the host is processed
            only if the macro includes methods (such as WaitForString) that explicity handle incoming data. Data not handled explicitly in the 
            macro is not processed until the macro terminates. </para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ProcessInvalidKeystrokes">
            <summary>
            Gets or sets a value indicating whether Reflection handles invalid keystrokes. 
            </summary>
            <remarks>
            When this property is true, invalid keystrokes generate an error message. 
            <para>When this property is false, invalid keystrokes are ignored. For example, 
            if a user presses a key that is mapped to a macro when 
            another macro is running, the default behavior is to display an error stating that a macro is
            already running. Setting ProcessInvalidKeystrokes to false avoids this error. </para>
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Productivity">
            <summary>
            Gets the Productivity object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ReGISAlwaysGraphicsMode">
            <summary>
            Gets or sets a value indicating the ReGIS Graphics mode. 
            </summary>
            <remarks>
            When this property is set to false and Reflection goes into ReGIS Graphics mode, the screen and cursor remain in 
            text mode until graphics are present. When this property is set to true and Reflection goes into ReGIS Graphics mode, 
            the screen and cursor change to ReGIS Graphics mode regardless of whether or not graphics are present.
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ReGISBufferSize">
            <summary>
            Gets or sets the size of the buffer reserved for caching ReGIS graphics. 
            </summary>
            <value>
            The default value is 5000. Each unit represents one ReGIS instruction.
            The range of values is 0 - 32767.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ReGISV6">
            <summary>
            Gets or sets a value indicating whether Reflection uses enhanced features for handling ReGIS graphics.
            </summary>
            <remarks>
            When this property is false, Reflection uses enhanced features for handling ReGIS graphics. 
            These enhancements include support for image resizing, clearer fonts, improved printed images, and increased speed. 
            <para>When this property is true, Reflection handles ReGIS graphics as it did in version 6.0. 
            Some types of graphics, such as fill patterns,
            may be more accurately represented when ReGISV6 is true.</para>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SaveSessionOnClose">
            <summary>
            Gets or sets the close option, which indicates how to handle the save action when closing the control.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SaveScrollingRegion">
            <summary>
            Gets or sets a value indicating whether Reflection saves the scrolling region. 
            </summary>
            <remarks>
            When top and bottom screen margins are set (for example, by a text editor such as EDT or TPU, 
            or with the DECSTBM function), the area within the margins is called the scrolling region. 
            You cannot scroll outside of the scrolling region. By default, text that scrolls out of the 
            scrolling region is not saved in display memory. If a scrolling region is set by a 
            text editor, setting this property to true can cause display memory to fill quickly; 
            every time you scroll your document down, text that scrolls off the top of the display
            is moved into display memory. For most situations, it's best to leave this property set to false.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SaveSecureShellUserName">
            <summary>
            Gets or sets a value indicating whether Reflection saves the user name when you save your settings files 
            or record a connection macro. 
            </summary>
            <remarks>
            When this property 
            is true, the user name is saved. 
            This property is only relevant when ConnectionType = "SECURE SHELL".
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CacheSecureShellUserName">
            <summary>
            Gets or sets a value indicating whether Reflection caches the user name when you connect a secure session for the first time. 
            </summary>
            <remarks>
            When this property 
            is true, the user name is saved. 
            This property is only relevant when ConnectionType = "SECURE SHELL".
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Screen">
            <summary>
            Gets the Screen object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SendKeyboardModifierPrefix">
            <summary>
            Gets or sets a value indicating whether a SHIFT, CTRL, or ALT key press sends an escape sequence and, if the key is pressed 
            in conjunction with other keys, prefixes the escape sequence to outbound data, in VT-UTF8 emulations.
            </summary>
            <remarks>
            When this property is true, pressing and releasing the modifer key alone causes an escape sequence to be sent; pressing 
            the modifer key with other keys prefixes the escape sequences to outbound data.
            <list type="bullet">
            <listheader><term>Key Prefix</term></listheader>
            <item><term>SHIFT key (alone)</term><description>Esc Ctrl+U Esc Ctrl U</description></item>
            <item><term>SHIFT key (+ other keys)</term><description>Esc Ctrl+U</description></item>
            <item><term>CTRL key (alone)</term><description>Esc Ctrl+C Esc Ctrl+C</description></item>
            <item><term>CTRL key (+ other keys)</term><description>Esc Ctrl+C</description></item>
            <item><term>ALT	key (alone)</term><description>Esc Ctrl+A Esc Ctrl+A</description></item>
            <item><term>ALT	key (+ other keys)</term><description>Esc Ctrl+A</description></item>
            </list>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SerialDeviceToHost">
            <summary>
            Gets or sets a value indicating whether data received from the currently configured serial device port 
            is sent to the host.  
            </summary>
            <remarks>
            This property is usually 
            set by the host application when it is required.
            </remarks>
            <value>
            The default is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SerialDevicePort">
            <summary>
            Gets or sets the serial port on the PC that is used as the terminal serial device port.
            </summary>
            <remarks>
            The value of this property is only relevant when the
            LogToSerialDevice property is true.
            </remarks>
            <value>
            The default value is "NONE". 
            Possible values are "COM1," "COM2," and so forth. 
            These values are not case-sensitive.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SerialDeviceSettings">
            <summary>
            Gets or sets the configuration parameters for the currently configured serial printer port. 
            </summary>
            <remarks>
            The value of this property is only relevant 
            when the LogToSerialDevice property is true.
            <para></para>
            The value consists of alternating "keyword tokens" and "value tokens." The keyword token identifies a serial device setting; the value 
            token specifies a value for the setting. SerialDeviceSettings supports four keyword tokens: Baud, ReceivePacing, TransmitPacing, and 
            Stop Bits. (The possible values for these settings are the same as for the ConnectionSettings property.) You should include all four 
            keyword tokens in the string using the following syntax. For each setting, replace value with the setting value you want:
            <para></para>
            Session.SerialDeviceSettings "Baud value Parity value ReceivePacing value TransmitPacing value StopBits value"
            <para></para>
            For example:
            <para>SerialDeviceSettings = "Baud 14400 Parity 8/NONE ReceivePacing XON/XOFF TransmitPacing XON/XOFF StopBits 1"</para>
            <para></para>
            <para>The easiest way to build this string is to record a macro while you select your settings in the Configure Serial Device Port 
            dialog box. For more information, see the Reflection Help. </para>
            </remarks>
            <value>
            The default value is "Baud 9600 Parity 8/None ReceivePacing Xon/Xoff TransmitPacing Xon/Xoff StopBits 1".
            The values used in this string are not case sensitive.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SessionLimitsSecureShell">
            <summary>
            Gets or sets the maximum allowable number of simultaneous SecureShell sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property 
            affects all subsequent instances of the current Reflection product. 
            <para>SessionLimitsOpenSSH is a synonym.</para>
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SessionLimitsNSVT">
            <summary>
            Gets or sets the maximum allowable number of simultaneous VT-MGR sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. 
            Changing this property affects all subsequent instances of the current Reflection product. 
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SessionLimitsRlogin">
            <summary>
            Gets or sets the maximum allowable number of simultaneous Rlogin sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property affects all subsequent instances of the current Reflection product. 
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SessionLimitsTelnet">
            <summary>
            Gets or sets the maximum allowable number of simultaneous Telnet sessions.
            </summary>
            <remarks>
            The value of this property is saved in the registry. Changing this property 
            affects all subsequent instances of the current Reflection product. 
            </remarks>
            <value>
            The default value is 255. 
            The range of values is 0 - 255.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionTimeVisible">
            <summary>
            Gets or sets a value indicating whether the Reflection status bar displays the amount of time 
            you are connected to a host.
            </summary>
            <value>
            The default value is true. (On Windows Terminal Server, this property is false.)
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HorizontalScrollBarVisible">
            <summary>
            Gets or sets a value indicating whether the horizontal scroll bar is visible.
            </summary>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.VerticalScrollBarVisible">
            <summary>
            Gets or sets a value indicating whether the vertical scroll bar is visible.
            </summary>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SingleByteUPSS">
            <summary>
            Gets or sets the Digital UPS character set that is used when 
            SET HOST-CHARACTER-SET is set to a double-byte character set.
            </summary>
            <value>
            The default value is DECSupplemental. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StartupConnection">
            <summary>
            Gets or sets the saved connection that is used when the StartupAction property 
            is set to UseSavedConnection. 
            </summary>
            <remarks>
            Use this property 
            only if you upgraded from a version of Reflection prior to 6.0 and elected to continue using the 
            Connection Directory.
            </remarks>
            <value>
            The default value is "". 
            The string cannot be more than 63 characters long.
            </value>
            <exception cref="T:System.ArgumentException">
            Thrown if the set parameter length is longer than the maximum allowed.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StatusLineText">
            <summary>
            Gets or sets the current status line text. 
            </summary>
            <remarks>
            When this property is set to an empty string (""), the text display in the status line 
            shows the current terminal emulation and connection status. (This is the default.) 
            <para>When this property is set to any other value, that text is shown in the status line. 
            If you want the status line to update dynamically, you can programmatically set the value
            of this property to respond to predefined events.</para>
            </remarks>
            <value>
            The default value is "". 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TAPIVersion">
            <summary>
            Gets or sets the Telephony Application Programming Interface (TAPI) that Reflection uses to connect the PC to telephone services. 
            </summary>
            <remarks>
            The value of this property is saved in the Windows registry. Changing this property affects all subsequent instances of the current Reflection product. 
            </remarks>
            <value>
            The default value is TAPI3.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TerminalSound">
            <summary>
            Gets or sets how beeps sound in Reflection.   
            </summary>
            <remarks>
            All values (except Simple and DosBeep) take advantage of multimedia support 
            in Windows and require a sound board or the PC speaker driver (Speaker.drv). 
            <para>You may lose some characters sent from the host if all the following are true: </para>
            <para>	You have the PC speaker driver installed under Windows. </para>
            <para>	You're connected serially (that is, through COM1, COM2, COM3, or COM4). </para>
            <para>	TerminalSound is set to a value other than Simple. </para>
            <para>If you experience problems, set TerminalSound to Simple or DosBeep.</para>
            </remarks>
            <value>
            The default value is Simple.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TerminalType">
            <summary>
            Gets or sets the terminal that Reflection is to emulate. 
            </summary>
            <value>
            When you set TerminalType to ANSIBBS or ANSIUNIX, the default values
            for the following properties change: 
            <list type="bullet">
            <item><description>Property, to the default Value for ANSIBBS and ANISUNIX.</description></item>
            <item><description>DisplayRows, to 25.</description></item>
            <item><description>EndOfLineWrap, to true.</description></item>
            <item><description>TransmitXonXoff, to true.</description></item>
            <item><description>UseAnsiColor, to true.</description></item>
            </list>
            In addition, the value of TransmitPacing automatically becomes None. (TransmitPacing is a "keyword token" you can use to configure a connection in Reflection.) 
            <para>If TerminalType is set to a non-ANSI value, these properties revert to their non-ANSI defaults.</para>
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TextFileCharacterSet">
            <summary>
            Gets or sets a value indicating whether Reflection uses the ASCII or ANSI character set. 
            </summary>
            <remarks>
            The Windows character set (ANSI) is slightly different from the DOS character set (ASCII). 
            If you receive an ASCII file to be used in the 
            Windows environment, make sure this property is set to WindowsCharacterSet. 
            <para>The value of this property can also affect printing if BypassPrinterDriver 
            and TranslatePrintedCharacters are both set to true.</para>
            </remarks>
            <value>
            The default value is WindowCharacterSet. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TimeSinceConnected">
            <summary>
            Gets the time (in seconds) during which you have been connected.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TraceFileName">
            <summary>
            Gets or sets the name of the trace file that is created when Trace Session Start is true. 
            </summary>
            <remarks>
            Reflection always saves a file to the lowest available number. 
            For example, if you delete the first trace file, "Trace 1.rev",  
            the next trace file is saved to that name since it is the lowest available number. 
            </remarks>
            <value>
            The default value is "%ProductAbbreviation% Trace". This value creates files with the following naming pattern (where # is a number):
            <para>Trace #.rev.</para> 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TraceFolder">
            <summary>
            Gets or sets the location of the folder where Reflection saves trace files created 
            when Trace Session Start is true.
            </summary>
            <value>
            The default value is the Micro Focus\Reflection subfolder of your personal documents folder.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TraceSessionStart">
            <summary>
            Gets or sets a value indicating whether the Reflection Trace utility begins tracing the moment Reflection starts. 
            </summary>
            <remarks>
            This is useful for troubleshooting Reflection, because the utility gathers data before the settings files 
            are loaded or macros are executed.
            <para>Use TraceFileName to specify a filename and TraceFolder to specify a location.</para> 
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CharacterSetTranslationEnabled">
            <summary>
            Gets or sets a value indicating whether Reflection translates characters between the PC character
            set and the appropriate national character set. 
            </summary>
            <remarks>
            When this property is set to true, Reflection translates characters between the 
            PC character set and the appropriate national character set (Roman 8 or Digital Multinational)
            as data is read from or stored to disk. When TranslateCharacters is set to false, 
            any character can be transmitted or captured without being translated. 
            <para>This property affects printing, disk operations, and ASCII file transfers. </para>
            This property also affects translations between the Windows character set (ANSI) 
            and the ASCII character set on disk operations. 
            </remarks>
            <value>
            The default value is true. 
            The value of this property is not saved to a settings file. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UseIPv6">
            <summary>
            Gets or sets how Reflection communicates with a host using the IPv6 and older IPv4 protocols.  
            </summary>
            <value>
            The default value is WhenAvailable. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UseModemDialerV5">
            <summary>
            Gets or sets a value indicating whether Reflection uses the Reflection version 5 modem dialer to make modem connections. 
            </summary>
            When this value is false, Reflection uses the modem and dialer configured using the  
            Windows Control Panel. When this value is true, 
            Reflection uses the modem dialer that was included with Reflection prior to version 6.0. 
            <value>
            The default is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UserData">
            <summary>
            Gets or sets data for the duration of the current Reflection session. 
            </summary>
            <remarks> 
            Use this property in macros to set and return global values that you want to remain 
            constant throughout the current session. 
            The value of this property is not saved when you save your settings file.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UserDefinedKeysLocked">
            <summary>
            Gets or sets a value indicating whether the host can alter the definitions of the user-defined keys. 
            </summary>
            <remarks>
            When this property is set to true, user-defined keys cannot be loaded from the host. 
            The default value is false. 
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UserFeaturesLocked">
            <summary>
            Gets or sets a value indicating whether certain features can be changed by the host.
            </summary>
            <remarks>
            When this property is set to true, the following properties cannot be changed by the host: 
            <list type="bullet"> 
            <item><description>Tab stops.</description></item>
            <item><description>The value of the KeyboardLocked property.</description></item> 
            <item><description>The value of the InverseVideo property.</description></item>
            <item><description>The value of the JumpScrollSpeed property.</description></item>
            <item><description>The value of the AutoRepeat property.</description></item>
            </list>
            <para></para>
            Some host applications require that this property be set to false, so that they can control these features.
            </remarks>
            <value>
            The default value is false. 
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Version">
            <summary>
            Gets the version of the terminal session control.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Theme">
            <summary>
            Gets the Theme object.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.VT640Compatible">
            <summary>
            Gets or sets a value indicating whether Reflection switches back and forth automatically between Tektronix 
            and VT terminal emulation when it receives VT640-compatible 
            control characters from the host. 
            </summary>
            <remarks>
            When this property is true, Reflection automatically sets the value of 
            TerminalType to Tek401X when it receives a  control character (Ctrl-]) or the 
            escape sequence EscGs from the host. Reflection exits Tektronix terminal emulation 
            and sets TerminalType to VT400_7 when it receives a Cancel control 
            character (Ctrl-X) from the host.
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.VTTek">
            <summary>
            Gets or sets a value indicating the VT340 Tektronix state. 
            </summary>
            <remarks>
            When this property is set to true, Reflection supports VT340 emulation of Tektronix terminals. When this property is set to 
            false, Reflection emulates Tektronix terminals in the same manner as Reflection for Windows 4.21 and earlier. 
            The differences are as follows.
            <para></para>
            Carriage Return and Line Feed Characters in bypass condition
            <para>When VTTek is set to true, a carriage return echoed from the host clears the bypass condition and is processed 
            (the cursor moves to the left margin), and an immediately subsequent line feed is also processed. Likewise, 
            a line feed echoed from the host clears the bypass condition and is processed (the cursor moves down a line), 
            and an immediately subsequent carriage return will also be processed.
            When VTTek is set to false, a carriage return echoed from the host will clear the bypass condition, but will not be processed 
            (the cursor doesn't move to the left margin); an immediately subsequent line feed also is not processed. Likewise, a line feed 
            echoed from the host clears the bypass condition (the cursor doesn't move down a line), and an immediately subsequent carriage 
            return will not be processed.</para>
            <para></para>
            Line Feed suppression (EscLf) and Carriage Return suppression (EscCr)
            <para> When VTTek is set to true and Reflection receives an EscLf sequence, Reflection won't process any line feeds 
            until it receives a BEL or other no-op control code. Likewise, when VTTek is set to true and Reflection receives an EscCr sequence, 
            Reflection won't process any carriage returns until it receives a BEL or other no-op control code. 
            When VTTek is set to false and Reflection receives an EscLf sequence, Reflection treats the Lf as a sequence terminator 
            until a subsequent BEL character is received. Likewise, when VTTek is set to false and Reflection receives an EscCr sequence, 
            Reflection treats the Cr as a sequence terminator until a subsequent BEL character is received.</para>
            <para></para>
            Tektronix Special Point Plot Mode (EscFs)
            <para>When VTTek is set to true, Reflection treats the character following the EscFs sequence as the first character of the point address. 
            When VTTek is set to false, Reflection treats the character following the EscFs sequence as a gray scaling intensity character.
            Because Reflection does not support gray scaling, the character is ignored.</para>
            <para></para>
            Tektronix GIN Mode Position Reports
            <para>When VTTek is set to true, Tektronix GIN mode position reports are preceded by the DECLBD down sequence. 
            If the DECLBD sequence is null, the position report and DECLBD sequence are not sent. 
            When VTTek is set to false, Tektronix GIN mode position reports are not preceded by the DECLBD down sequence. </para>
            <para></para>
            Alphanumeric Character Display
            <para>When VTTek is set to false, alphanumeric characters may be cut off or disappear off the top of the graphics area 
            while emulating a Tektronix terminal. If this happens, setting VTTek to true moves these characters down to the 
            top of the graphics area.</para> 
            </remarks>
            <value>
            The default value is true. 
            </value>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WeakDeviceControlString">
            <summary>
            Gets or sets a value indicating the device control string state. 
            </summary>
            <remarks>
            When this property is set to true, a device control string can be terminated by any of the characters that interrupt 
            escape sequences and control functions. These characters are CAN (decimal 24), SUB (decimal 26), and ESC (decimal 27). 
            This is the same behavior as the terminals in the VT200 through VT400 series, except the VT320.
            <para>When this property is set to false, Reflection matches the behavior of the VT320 terminal, and a device control 
            string can be terminated only by the string terminator character (decimal 156). Use this property if you need 
            Reflection to behave like an actual VT320 terminal (for example, if you need to pass control characters as part 
            of a sequence that would otherwise terminate the sequence).</para>
            </remarks>
            <value>
            The default value is true.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WindowRows">
            <summary>
            Gets or sets the number of lines displayed on screen.
            </summary>
            <remarks>
            The DisplaysRows property controls the number of lines in each page of display memory 
            (the area the host uses to display text and position the cursor). Changing the DisplayRows value 
            automatically sets WindowRows to the same value; however, changing the WindowRows value has no effect 
            on DisplayRows. If WindowRows is larger than DisplayRows, the unused part of the terminal window will be blank. 
            If WindowRows is smaller than DisplayRows, only a portion of each display page will be 
            visible on screen; you must scroll to view the entire display page.
            <para> If you change the number of rows using the Screen tab in the Reflection Display Setup dialog box, 
            Reflection automatically sets both DisplayRows and WindowRows 
            to the new value.</para>
            </remarks>
            <value>
            The default value is 24.
            The range of values is 24 - 172.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the set parameter is outside the range of valid values.
            </exception>        
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.IsWinMASSSupported">
            <summary>
            Gets or sets a value indicating whether WinMASS software support is enabled. 
            </summary>
            <remarks>
            WinMASS is a language translation program. 
            <para></para>
            <para>When this setting is true, WinMASS works under Reflection. </para>
            <para>When this setting is false, WinMASS translation is not supported.</para>
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WTSIPAddress">
            <summary>
            Gets the IP address returned by Windows Terminal Server (WTS).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WTSPCName">
            <summary>
            Gets the PC name returned by Windows Terminal Server (WTS).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WTSUserName">
            <summary>
            Gets the user name returned by Windows Terminal Server (WTS).
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WyseAcceptNulls">
            <summary>
            Gets or sets a value indicating whether the terminal will accept nulls from the host (for Wyse terminal emulation only). 
            </summary>
            <remarks>
            This property affects situations where an escape sequence is used to define a string, such as 
            programming function keys or a message line.  
            </remarks>
            <value>
            The default value is false.
            </value>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.VBProject">
            <summary>
            Gets the document specific VBA project. VBA Use only.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.VBCommonProject">
            <summary>
            Gets the common VBA Project. VBA Use only.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DASOApplicationID">
            <summary>
            Retrieves or assigns the application ID to use for DASO (Digital Certificate
            Access Server Automated Sign On) support.
            </summary>
            <remarks> 
            This property is required for DASO and can be set either via this property or 
            in the call to GetDASOPassTicket.
            </remarks>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DASOUserID">
            <summary>
            Retrieves the RACF USERID for DASO (Digital Certificate Access Server Automated Sign On).
            This field will be empty until a successful call to GetDASOPassTicket is executed.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DASOPassTicket">
            <summary>
            Retrieves the pass ticket for DASO (Digital Certificate Access Server Automated Sign On).
            This field will be empty until a successful call to GetDASOPassTicket is executed.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DASOSessionName">
            <summary>
            Retrieves the session name that is used for DASO (Digital Certificate Access Server 
            Automated Sign On). The session name and DASO application ID are used by the DASO
            server when mapping the current user to RACF logon credentials for host access.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.RunMacroAtReconnect">
            <summary>
            Gets or sets a value indicating whether the ConnectAction sequence is re-run after a session is reconnected.
            </summary>
            <remarks>The default is false. This value cannot be set if no ConnectAction is currently configured.</remarks>
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
            <exception cref="T:System.InvalidOperationException">This exception is thrown when attempting to set the value with no ConnectAction configured.</exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.BeforeConnectStartupAction">
            <summary>
            Gets or sets a sequence of action(s), such as running a macro, to run automatically before a
            connection is established. 
            </summary>
            <remarks>
            Before Connect Startup action sequences run before the terminal attempts to connect to the host.
            They should not include any actions that require a live host screen, such as sending keystrokes.       
            </remarks>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectAction">
            <summary>
            Gets or sets a sequence of action(s), such as running a macro, to run automatically after a
            connection is established. 
            </summary>
            <remarks>
            Connect action sequences run after the terminal has successfully made a connection to the host.
            They should not include session setup information.       
            </remarks>
            <exception cref="T:System.ArgumentException">
            This exception is thrown if the set parameter is longer than the maximum allowed.
            </exception>        
            <exception cref="T:Attachmate.Reflection.SecuredSettingException">
            This exception is thrown when you modify a property  
            that was secured via the Permissions Manager or 
            that can only be modified by an Administrator.
            </exception>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.TitleBarCaption">
            <summary>
            Gets or sets the string that appears in the Reflection title bar. This string
            is only relevant when the workspace user interface mode is set to Classic SDI. 
            
            The caption length maximum value is 260 characters.
            
            The default is &amp;f - &amp;n
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ShowMenuBar">
            <summary>
            Gets or sets the visibility of Menu Bar. This setting is only relevant  
            when the workspace user interface mode is set to Classic SDI mode.
            The default is true.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ShowClassicStatusBar">
            <summary>
            Gets or sets the visibility of Status Bar. This setting is only relevant
            when the workspace user interface mode is set to Classic SDI mode.
            The default is true.
            </summary>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StatusBarText">
            <summary>
            Gets or sets the status bar text . This setting is relevant for all UI modes
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Execute(Attachmate.Reflection.Emulation.OpenSystems.InputMapAction)">
            <summary>
            Execute a given action. Actions possible is defined in InputMapActionID.
            </summary>
            <seealso cref="T:Attachmate.Reflection.Emulation.OpenSystems.InputMapActionID"/>
            <param name="action">The action to be executed.</param>
            <returns>ReturnCode value indicates the success or error conditions.</returns>
            <example>
            <code>
            private Terminal terminal;
            public ReturnCode ShowSettings()
            {
                // opens settings configuration
                return terminal.Execute(new InputMapAction(InputMapActionID.SettingsAction, new object[] {}));
            }
            </code>
            </example> 
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CloseAllConnections">
            <summary>
            Closes all connections established by the current copy of Reflection.
            </summary>
            <remarks> 
            This method disconnects the current connection (if any) and any 
            suspended connections previously established. This method does not affect 
            connections opened by other copies of Reflection. 
            </remarks>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Connect">
            <summary>
            Connects to the host. It is ignored if a connection already exists. 
            </summary>
            <remarks> 
            Use the IsConnected property to determine if a connection already exists. 
            Use HostCommTimeout to specify how many seconds Reflection should wait for a host response. 
            </remarks>
            <returns> Connection status</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Dial(System.String)">
            <summary>
            Dials a modem. This method is only valid if Reflection is set to use the old modem dialer (UseModemDialerV5 = true).
            </summary>
            <remarks>
            Dials a modem with default initialization string one time. 
            </remarks>
            <param name="phoneNumber">The phone number to dial. The string can contain any valid modem
            dialing characters, such as commas (to allow dialing to pause for two seconds per comma) 
            and hyphens and parentheses (used as separators for better readability). The string should 
            not include any AT commands or dialing prefix commands. </param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Dial(System.String,System.String,System.String,System.String,System.Int32,System.String,Attachmate.Reflection.Emulation.OpenSystems.SpeakerOption,Attachmate.Reflection.Emulation.OpenSystems.SpeakerVolumeOption,System.Boolean,System.Boolean)">
            <summary>
            Dials a modem. This method is only valid if Reflection is set to use the old modem dialer (UseModemDialerV5 = true).
            </summary>
            <param name="phoneNumber">The phone number to dial. The string can contain any valid modem dialing characters, such as commas (to allow dialing to pause for two seconds per comma) and hyphens and parentheses (used as separators for better readability). The string should not include any AT commands or dialing prefix commands; these settings should be made in the Dialing Options dialog box from the Connection Setup dialog box.</param>
            <param name="description">Description to be displayed in the Dialing In Progress dialog box. 
            If this option is omitted, only the phone number appears in the dialog box.</param>
            <param name="initString">String to be sent to the modem before dialing. If omitted, Reflection
            uses the default initialization string.</param>
            <param name="answerTimeout">Specifies the amount of time to wait for the host to confirm the 
            connection. The string is specified in HH:MM:SS.hh format. A time string of "0" causes Reflection 
            to wait indefinitely. If this is empty (""), the default timeout (60 seconds) is used.</param>
            <param name="retryTimes">Specifies the number of times to redial if the number is busy or does 
            not answer. Default value should be one retry.</param>
            <param name="retryInterval">Specifies the amount of time to wait before redialing. The string is 
            specified in HH:MM:SS.hh format. If this argument is empty (""), the default timeout is used (120 
            seconds).</param>
            <param name="speakerOption">Specifies the speaker mode. The default is Dialing.</param>
            <param name="speakerVolume">Specifies the speaker volume. The default is Medium.</param>
            <param name="speakerOffAfterRedial">If true, the modem speaker is turned off after the first 
            dialing attempt. If false (default) or omitted, the modem speaker remains set to the SpeakerMode
            for each dialing attempt.</param>
            <param name="ignoreModemErrors">If true, Reflection ignores modem initialization string errors. 
            If false, these errors are displayed in a message box.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Disconnect">
            <summary>
            Disconnects from the host. If no connection currently exists, this method is ignored. 
            </summary>
            <remarks>
            Use the IsConnected property to determine if a connection already exists.
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StopTerminalInstance">
            <summary>
            For internal use.  Used when a Terminal User Control is being shut down.
            </summary>
            <returns>ReturnCode indicating success or failure.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Close(Attachmate.Reflection.CloseOption)">
            <summary>
            Close the terminal session with the close option.
            </summary>
            <param name="option">One of the CloseOption enum values</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GetSerialConnectionStatistics(Attachmate.Reflection.Emulation.OpenSystems.ConnectionStatisticOption)">
            <summary>
            Returns a statistic for a serial connection. 
            </summary>
            <remarks> 
            If the connection is not a serial connection, or if there is not connection, 
            GetSerialStatistics returns -1. 
            Statistics are maintained from the time a connection is established, 
            from when the terminal session is reset (with the ResetTerminal method), or from when the 
            Reset button is clicked in the Serial Connection Statistics dialog box.
            </remarks>
            <param name="option">Specifies which statistics to return.</param>
            <returns>The requested statistic if the ConnectionType is a serial connection, or -1 if it is not.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.HangUp">
            <summary>
            Hangs up the modem by sending the Hayes "+++" command to get the modem's attention, followed by the "ATH" hangup command. 
            </summary>
            <returns>One of the ReturnCode enum values</returns>
            <remarks>
            This method does not guarantee that the modem has actually hung up. No error is returned if the method fails for any reason. 
            After the modem is hung up, the port remains open; use the Disconnect method to close the port.
            <para>Valid only if Reflection is set to use the old modem dialer (UseModemDialerV5 = true).</para>
            </remarks>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OpenSettings(System.String)">
            <summary>
            Opens a setting file.
            </summary>
            <param name="fileName">Specifies the path and filename for the settings file.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ResetTerminal(Attachmate.Reflection.Emulation.OpenSystems.ResetOptions)">
            <summary>
            Executes a terminal reset.
            </summary>
            <param name="option">Terminal reset option.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.RestoreDefault(Attachmate.Reflection.Emulation.OpenSystems.RestoreOptions)">
            <summary>
            Restores the session settings to the default settings, as specified by the restore option value.
            </summary>
            <param name="option">Restore setting options.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ResumeConnection(System.Int32)">
            <summary>
            Resumes a previously suspended connection (suspend connections with the SuspendConnection method). 
            </summary>
            <remarks> 
            Only sessions that were established and suspended in the same copy of Reflection can be resumed. 
            Resuming a connection updates the value of the ConnectionType and ConnectionSettings properties in 
            accordance with the newly resumed connection.
            </remarks>
            <param name="connectionId">Identifies the connection to resume. Obtain this from the SuspendCurrentConnection method.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Save">
            <summary>
            This method saves all settings.
            </summary>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SaveAs(System.String)">
            <summary>
            Saves all settings to the specified file.
            </summary>
            <param name="filePath">The fully qualified file path of the file you want to save. The file must be saved in a trusted location.</param>
            <returns>ReturnCode value indicate success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SaveAsCompound(System.String)">
            <summary>
            Saves a session as compopund session
            </summary>
            <param name="filePath">The fully qualified file path of the file you want to save. The file must be saved in a trusted location.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StartTrace(System.String,Attachmate.Reflection.Emulation.OpenSystems.TraceFileExistsOption,Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption)">
            <summary>
            Starts capturing data coming from the host to a disk file. 
            </summary>
            <remarks>
            Data being transmitted to the host can also be captured. The captured data includes all
            escape sequences and control codes, but does not include flow control, such as Xon/Xoff characters. 
            The data is captured in binary format and is not 
            translated in any way.
            </remarks>
            <param name="fileName">Specifies the file to which data is written.</param>
            <param name="fileExistsOption">Specifies what to do if the file already exists. The default is OpenError.</param>
            <param name="formatOption">Specifies what kind of trace to perform. The default is TraceDefault.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StopTrace">
            <summary>
            Stops capturing incoming host data to a file and closes the trace file.
            </summary>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ProcessTrace(System.String,System.String,Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceOptions,Attachmate.Reflection.Emulation.OpenSystems.ProcessTraceSyntax)">
            <summary>
            Process a trace file created by StartTrace()/StopTrace().
            </summary>
            <param name="inputFileName">Fully qualified input trace file name (i.e. drive:\path\filename).</param>
            <param name="outputFileName">Fully qualified output file name (i.e. drive:\path\filename).</param>
            <param name="options">Trace file processing options.</param>
            <param name="syntax">Trace file output syntax options.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SuspendCurrentConnection">
            <summary>
            Suspends the current host connection (so that it can be resumed later with ResumeConnection).
            </summary>
            <returns>A numeric identifier for the suspended connection that can be used
            to later resume the connection.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WaitForCall">
            <summary>
            Initializes the modem to automatically answer an incoming call and opens a 
            status dialog box until a connection has been established. 
            </summary>
            <remarks>
            This method does not check to see whether a modem is actually connected to the serial port; it simply transmits the Hayes "AT" command to get the modem's 
            attention, then transmits the "ATS0=1" command to place the modem in answer mode. If the command fails for any reason, no error is returned. The procedure 
            continues to the next statement only after the status box is dismissed (either because the modem established a connection, the user canceled, or the dialog 
            box timed out).
            </remarks>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WaitForCall(System.String)">
            <summary>
            Initializes the modem to automatically answer an incoming call and opens a status dialog box until a connection has been established. 
            </summary>
            <remarks>
            This method does not check to see whether a modem is actually connected to the serial port. 
            It simply transmits the Hayes "AT" command to get the modem's 
            attention, then transmits the "ATS0=1" command to place the modem in answer mode. 
            If the command fails for any reason, no error is returned. The procedure 
            continues to the next statement only after the status box is dismissed (either 
            because the modem established a connection, the user canceled, or the dialog 
            box timed out).
            </remarks>
            <param name="description">Specifies a message to be displayed in the Waiting for Call dialog box.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.WaitForCall(System.String,System.String)">
            <summary>
            Initializes the modem to automatically answer an incoming call and opens a status dialog box
            until a connection has been established. 
            </summary>
            <remarks>
            This method does not check to see whether a modem is actually connected to the serial port. 
            It simply transmits the Hayes "AT" command to get the modem's 
            attention, then transmits the "ATS0=1" command to place the modem in answer mode. 
            If the command fails for any reason, no error is returned. The procedure 
            continues to the next statement only after the status box is dismissed (either because
            the modem established a connection, the user canceled, or the dialog 
            box timed out).
            </remarks>
            <param name="description">Specifies a message to be displayed in the Waiting for Call dialog box.</param>
            <param name="initString">Specifies an initialization string to be sent to the modem before waiting.</param>
            <returns>ReturnCode value indicates success or error conditions.</returns>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StartLogging">
            <summary>
            Start logging terminal activity.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.StopLogging">
            <summary>
            Stop logging terminal activity.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GetDASOPassTicket(System.String)">
            <summary>
            Issues a request to the Reflection Security Gateway for a DASO pass ticket.
            On success, the DASOUserID and DASOPassTicket properties will be valid and can
            be used for automated sign on to the host.  The application ID can be preset
            using the DASOApplicationID property in which case the ApplicationID parameter
            on this call may be empty.
            </summary>
            <param name="applicationId">The host application ID.</param>
            <returns>ReturnCode value indicate success or error conditions.</returns>
        </member>
        <member name="P:Attachmate.Reflection.Emulation.OpenSystems.Terminal.QuickPadsShowToolTips">
            <summary>
            Gets or sets a value indicating whether QuickPads show tooltips for child controls when hovered over with the mouse.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.AddVBAReference(System.String)">
            <summary>
            Adds a session filename to the SharedMacro settings that contains macros to be shared by the current session.
            </summary>
            <param name="sessionPath">Full path to the shared session.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.RemoveVBAReference(System.String)">
            <summary>
            Removes a session filename from the SharedMacro settings.
            </summary>
            <param name="sessionPath">Full path to the shared session.</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.GetVBAReferences">
            <summary>
            Retrieves all shared macro session filenames from the settings
            </summary>
            <returns>List of all shared macro session filenames from the settings</returns>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SettingsLoading">
            <summary>
            This event is triggered immediately before a settings file is opened.
            </summary>
            <remarks>This event is fired only when the ITerminal.OpenSettings method is used. For code that should run before any connection occurs, use the ITerminal.Connecting
            event.</remarks>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SettingsLoaded">
            <summary>
            This event is triggered immediately after a settings file is opened.
            </summary>
            <remarks>This event is fired only when the ITerminal.OpenSettings method is used. For code that should run before any connection occurs, use the ITerminal.Connecting
            event.</remarks>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Connecting">
            <summary>
            This event is triggered immediately before a connection is made.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionSuspended">
            <summary>
            This event is triggered when the connection to the host has been suspended.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionResumed">
            <summary>
            This event is triggered when the suspended connection to the host has been resumed.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Connected">
            <summary>
            The event occurs after it connects to the host.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UserDisconnecting">
            <summary>
            This event is triggered before Reflection disconnects from the host. 
            </summary>
            <remarks>  
            For this event to occur, the user must terminate a connection using Reflection 
            (for example, using the Disconnect button on the Session tab). It will 
            not occur when the user ends a session by using a host log out command.
            <para>When a VT/Regis document is closed either programatically or manually, the
            event is not cancellable. (If the Cancel flag is set in the event arguments, it 
            is ignored.)
            </para>
            </remarks>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Disconnected">
            <summary>
            The event occurs after connection to the host has been disconnected.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CreditCardRecognized">
            <summary>
            Occurs when unredacted PAN is displayed or accessed.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Closing">
            <summary>
            This event occurs when the request to close the session has been made.
            </summary>
        </member>
        <member name="E:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Closed">
            <summary>
            This event occurs before the session closes.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.Dispose(System.Boolean)">
            <summary>
            Disposes of the client screen object.
            </summary>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnSettingsLoading(Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadingEventArgs)">
            <summary>
            Fire setting file loading event.
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnSettingsLoaded(Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadedEventArgs)">
            <summary>
            Fire setting file loaded event.
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnConnecting(Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs)">
            <summary>
            Fire connecting event
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnConnectionSuspended(Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            Fire connection suspended event.
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnConnectionResumed(Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            Fire connection resumed event.
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnConnected(Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            Fire Connected event
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnUserDisconnecting(Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs)">
            <summary>
            Fire user disconnecting event.
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnDisconnected(Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            Fire Disconnected event
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnCreditCardRecognized(Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs)">
            <summary>
            Fire CreditCardRecognized event
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnClosing(Attachmate.Reflection.CancelableEventArgs)">
            <summary>
            Fire closing event
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.OnClosed(System.EventArgs)">
            <summary>
            Fire closed event.
            </summary>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SettingsLoadingEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadingEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.SettingsLoadedEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.SettingsLoadedEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectingEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionSuspendedEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectionResumedEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ConnectedEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.UserDisconnectingEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.CancelableConnectionEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.DisconnectedEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.ConnectionEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ClosingEventSink(System.Object,Attachmate.Reflection.CancelableEventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.ClosedEventSink(System.Object,System.EventArgs)">
            <summary>
            For internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Attachmate.Reflection.Emulation.OpenSystems.Terminal.CreditCardRecognizedEventSink(System.Object,Attachmate.Reflection.Emulation.OpenSystems.CreditCardRecognizedEventArgs)">
            <summary>
            internal use
            </summary>
            <param name="sender">The object that raised the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="T:Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption">
            <summary>
            Specifies the type of trace to perform. The default is TraceDefault.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption.TraceDefault">
            <summary>
            Captures both incoming and outgoing data. The traced data does not include timing information.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption.TraceEvents">
            <summary>
            Captures all communications activity, keystrokes, commands, and menu selections. 
            </summary>
            <remarks>
            The information is recorded in a proprietary binary format, 
            and must be processed (using the ProcessEventTrace built-in function) to create a readable ASCII file.
            </remarks>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption.TraceTimed">
            <summary>
            Captures both incoming and outgoing data, and includes information about when data moved between the PC and the host,
            in HH:MM:SS.hh notation.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption.TraceIncomingOnly">
            <summary>
            Captures incoming data only. This option does not format the data in any way, and does not include timing information.
            </summary>
        </member>
        <member name="F:Attachmate.Reflection.Emulation.OpenSystems.TraceFormatOption.TraceTextOnly">
            <summary>
            Captures incoming text data only, excluding any escape sequences. This option does not format the data in any way, and
            does not include timing information.
            </summary>
        </member>
    </members>
</doc>
